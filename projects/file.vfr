{
	"project": {
		"_id": "604145ec8f74b3001c175b5e",
		"name": "ARIC Alexa (COPY)",
		"teamID": "29kMb43jo1",
		"devVersion": "604145ec6d2b8a0007b9d4f5",
		"platform": "alexa",
		"platformData": {
			"products": []
		},
		"members": [],
		"image": "https://s3.amazonaws.com/com.getstoryflow.api.images/1610053715514-download-1.png",
		"linkType": "CURVED",
		"creatorID": 55093
	},
	"version": {
		"_id": "604fb4535e10aa001b8f200e",
		"name": "version hiDGL",
		"projectID": "604145ec8f74b3001c175b5e",
		"variables": [
			"daily",
			"qIndex",
			"qlen",
			"responseType",
			"qType",
			"qText",
			"reproa",
			"reprob",
			"reproc",
			"questionSeries",
			"questionnaire",
			"reproIndex",
			"res",
			"mFlag",
			"t",
			"flag",
			"alinking",
			"userInfo",
			"cognitoId",
			"skillPer",
			"checkinId",
			"lastInteraction",
			"productive",
			"days",
			"resB",
			"intentMemory",
			"reminderFlag",
			"deviceId",
			"apiAccessToken",
			"apiEndpoint",
			"rees",
			"now",
			"resC"
		],
		"platformData": {
			"slots": [
				{
					"key": "kaab3y56",
					"name": "vaccinetype",
					"type": {
						"value": "Custom"
					},
					"color": "#5C6BC0",
					"inputs": [
						"Pfizer",
						"Moderna",
						"Unknown,I don't know, I'm not sure",
						"Johnson and Johnson,J and J, Johnson Johnson, Johnson"
					]
				},
				{
					"key": "1qbc3yz9",
					"name": "numbertype",
					"type": {
						"value": "Custom"
					},
					"color": "#4F9ED1",
					"inputs": [
						"one",
						"two",
						"three",
						"four",
						"five",
						"six",
						"seven",
						"eight",
						"nine",
						"ten",
						"zero,not at all, zero days"
					]
				},
				{
					"key": "su3x3yuy",
					"name": "date",
					"type": {
						"value": "Date"
					},
					"color": "#457A53",
					"inputs": []
				},
				{
					"key": "pwa63yvm",
					"name": "time",
					"type": {
						"value": "Time"
					},
					"color": "#E04F78",
					"inputs": []
				},
				{
					"key": "3ogv3y7g",
					"name": "weekday",
					"type": {
						"value": "Custom"
					},
					"color": "#E26D5A",
					"inputs": [
						"Monday",
						"Tuesday",
						"Wednesday",
						"Thursday",
						"Friday",
						"Saturday",
						"Sunday"
					]
				}
			],
			"intents": [
				{
					"key": "16bn3ygf",
					"name": "vaccine_type_intent",
					"slots": [
						{
							"id": "kaab3y56",
							"dialog": {
								"prompt": [
									{
										"text": "",
										"slots": []
									}
								],
								"confirm": [
									{
										"text": "",
										"slots": []
									}
								],
								"utterances": [],
								"confirmEnabled": false
							},
							"required": true
						}
					],
					"inputs": [
						{
							"text": "It was from {{[vaccinetype].kaab3y56}}",
							"slots": [
								"kaab3y56"
							]
						},
						{
							"text": "I got the {{[vaccinetype].kaab3y56}} vaccine",
							"slots": [
								"kaab3y56"
							]
						},
						{
							"text": "The vaccine I got was {{[vaccinetype].kaab3y56}}",
							"slots": [
								"kaab3y56"
							]
						},
						{
							"text": "I got {{[vaccinetype].kaab3y56}}",
							"slots": [
								"kaab3y56"
							]
						},
						{
							"text": "{{[vaccinetype].kaab3y56}}",
							"slots": [
								"kaab3y56"
							]
						}
					]
				},
				{
					"key": "554c3y34",
					"name": "better_intent",
					"slots": [],
					"inputs": [
						{
							"text": "much better",
							"slots": []
						},
						{
							"text": "better",
							"slots": []
						}
					]
				},
				{
					"key": "hr4f3yxb",
					"name": "worse_intent",
					"slots": [],
					"inputs": [
						{
							"text": "much worse",
							"slots": []
						},
						{
							"text": "worse",
							"slots": []
						}
					]
				},
				{
					"key": "dk4i3y5r",
					"name": "same_intent",
					"slots": [],
					"inputs": [
						{
							"text": "about the same",
							"slots": []
						},
						{
							"text": "neither",
							"slots": []
						},
						{
							"text": "the same",
							"slots": []
						}
					]
				},
				{
					"key": "534c3yje",
					"name": "date_intent",
					"slots": [
						{
							"id": "su3x3yuy",
							"dialog": {
								"prompt": [
									{
										"text": "",
										"slots": []
									}
								],
								"confirm": [
									{
										"text": "",
										"slots": []
									}
								],
								"utterances": [],
								"confirmEnabled": false
							},
							"required": false
						}
					],
					"inputs": [
						{
							"text": "{{[date].su3x3yuy}} ",
							"slots": [
								"su3x3yuy"
							]
						}
					]
				},
				{
					"key": "2ea53y8u",
					"name": "time_intent",
					"slots": [
						{
							"id": "pwa63yvm",
							"dialog": {
								"prompt": [
									{
										"text": "",
										"slots": []
									}
								],
								"confirm": [
									{
										"text": "",
										"slots": []
									}
								],
								"utterances": [],
								"confirmEnabled": false
							},
							"required": false
						}
					],
					"inputs": [
						{
							"text": "how about {{[time].pwa63yvm}} ",
							"slots": [
								"pwa63yvm"
							]
						},
						{
							"text": "{{[time].pwa63yvm}}  works for me",
							"slots": [
								"pwa63yvm"
							]
						},
						{
							"text": "{{[time].pwa63yvm}} ",
							"slots": [
								"pwa63yvm"
							]
						}
					]
				},
				{
					"key": "vfgg3ylr",
					"name": "weekday_intent",
					"slots": [
						{
							"id": "3ogv3y7g",
							"dialog": {
								"prompt": [
									{
										"text": "",
										"slots": []
									}
								],
								"confirm": [
									{
										"text": "",
										"slots": []
									}
								],
								"utterances": [],
								"confirmEnabled": false
							},
							"required": false
						}
					],
					"inputs": [
						{
							"text": "how about {{[weekday].3ogv3y7g}} ",
							"slots": [
								"3ogv3y7g"
							]
						},
						{
							"text": "{{[weekday].3ogv3y7g}} works",
							"slots": [
								"3ogv3y7g"
							]
						},
						{
							"text": "{{[weekday].3ogv3y7g}} works for me",
							"slots": [
								"3ogv3y7g"
							]
						},
						{
							"text": "{{[weekday].3ogv3y7g}} ",
							"slots": [
								"3ogv3y7g"
							]
						}
					]
				},
				{
					"key": "9khb3y56",
					"name": "any_time_intent",
					"slots": [],
					"inputs": [
						{
							"text": "any time is good",
							"slots": []
						},
						{
							"text": "whenever is okay",
							"slots": []
						},
						{
							"text": "whenever",
							"slots": []
						},
						{
							"text": "any time",
							"slots": []
						}
					]
				},
				{
					"key": "3kan3y5f",
					"name": "reschedule_intent",
					"slots": [],
					"inputs": [
						{
							"text": "to change my check-in time",
							"slots": []
						},
						{
							"text": "to change my appointment time",
							"slots": []
						},
						{
							"text": "to reschedule",
							"slots": []
						},
						{
							"text": "to reschedule my check-in",
							"slots": []
						},
						{
							"text": "to reschedule my appointment",
							"slots": []
						}
					]
				},
				{
					"key": "kiap3yhz",
					"name": "report_intent",
					"slots": [],
					"inputs": [
						{
							"text": "that I'm sick",
							"slots": []
						},
						{
							"text": "that I was diagnosed with coronavirus",
							"slots": []
						},
						{
							"text": "that I have coronavirus",
							"slots": []
						},
						{
							"text": "that i got COVID",
							"slots": []
						},
						{
							"text": "to report my covid diagnosis",
							"slots": []
						},
						{
							"text": "that I was diagnosed with COVID",
							"slots": []
						},
						{
							"text": "that I have COVID",
							"slots": []
						},
						{
							"text": "to report symptoms",
							"slots": []
						},
						{
							"text": "to report COVID symptoms",
							"slots": []
						},
						{
							"text": "to report COVID",
							"slots": []
						}
					]
				},
				{
					"key": "5n5i3047",
					"name": "unsure_intent",
					"slots": [],
					"inputs": [
						{
							"text": "I am not sure",
							"slots": []
						},
						{
							"text": "I do not know",
							"slots": []
						},
						{
							"text": "I don't know",
							"slots": []
						},
						{
							"text": "I'm not sure",
							"slots": []
						}
					]
				},
				{
					"key": "wgcl30ta",
					"name": "number_intent",
					"slots": [
						{
							"id": "1qbc3yz9",
							"dialog": {
								"prompt": [
									{
										"text": "",
										"slots": []
									}
								],
								"confirm": [
									{
										"text": "",
										"slots": []
									}
								],
								"utterances": [],
								"confirmEnabled": false
							},
							"required": true
						}
					],
					"inputs": [
						{
							"text": "{{[number].1qbc3yz9}} works",
							"slots": [
								"1qbc3yz9"
							]
						},
						{
							"text": "around {{[number].1qbc3yz9}} ",
							"slots": [
								"1qbc3yz9"
							]
						},
						{
							"text": "about a {{[number].1qbc3yz9}} ",
							"slots": [
								"1qbc3yz9"
							]
						},
						{
							"text": "{{[number].1qbc3yz9}} ",
							"slots": [
								"1qbc3yz9"
							]
						}
					]
				},
				{
					"key": "0c5s34qz",
					"name": "delete_intent",
					"slots": [],
					"inputs": [
						{
							"text": "remove my reminders",
							"slots": []
						},
						{
							"text": "delete notifications",
							"slots": []
						},
						{
							"text": "remove notifications",
							"slots": []
						},
						{
							"text": "clear reminders",
							"slots": []
						},
						{
							"text": "remove reminders",
							"slots": []
						},
						{
							"text": "delete reminders",
							"slots": []
						},
						{
							"text": "delete the reminders",
							"slots": []
						},
						{
							"text": "delete all of my reminders",
							"slots": []
						},
						{
							"text": "delete my reminders",
							"slots": []
						}
					]
				}
			],
			"settings": {
				"events": null,
				"customInterface": false,
				"session": {
					"type": "restart"
				},
				"repeat": "ALL",
				"accountLinking": {
					"type": "AUTH_CODE",
					"scopes": [
						""
					],
					"domains": [
						""
					],
					"clientId": "",
					"clientSecret": "",
					"accessTokenUrl": "",
					"authorizationUrl": "",
					"accessTokenScheme": "HTTP_BASIC",
					"defaultTokenExpirationInSeconds": 3600
				},
				"error": null
			},
			"publishing": {
				"summary": "The ARIC Alexa Prototype",
				"invocations": [
					"open ARIC study",
					"ask ARIC study to reschedule my appointment",
					"tell ARIC study that I have COVID"
				],
				"smallIcon": "https://s3.amazonaws.com/com.getstoryflow.api.images/1610053720146-download-1.png",
				"largeIcon": "https://s3.amazonaws.com/com.getstoryflow.api.images/1610053715514-download-1.png",
				"hasAds": false,
				"personal": false,
				"forExport": true,
				"invocationName": "ARIC study",
				"hasPurchase": false,
				"forChildren": false,
				"description": "The ARIC Alexa Prototype. This Skill implements three main intents, which are commands you can make to your Alexa:\n\n- The main intent that handles daily, weekly, and monthly check-ins, feedback, and the first set-up of the skill: say, \"Alexa, open ARIC Study\".\n\n- An intent to report symptoms: say, \"Alexa, tell the ARIC Study that I have COVID\"\n\n- An intent to reschedule an appointment: say, \"Alexa, tell the ARIC Study to reschedule my appointment\". You can also do this at any time by saying \"reschedule my appointment\"\n\nAny text that is whispered requires back-end logic and would not be heard by the end-user.",
				"instructions": "ASDF",
				"privacyPolicy": "https://creator.voiceflow.com/creator/terms?name=Itamar%20Fiorino&skill=ARIC%20Alexa%20(COPY)&children=false",
				"termsAndConditions": "https://creator.voiceflow.com/creator/terms?name=Itamar%20Fiorino&skill=ARIC%20Alexa%20(COPY)&children=false",
				"keywords": "",
				"category": "HEALTH_AND_FITNESS",
				"locales": [
					"en-US"
				],
				"updatesDescription": null
			},
			"status": {
				"stage": "DEV"
			}
		},
		"rootDiagramID": "604fb4537dbea8004948e246",
		"creatorID": 55093
	},
	"diagrams": {
		"604fb4537dbea8004948e24e": {
			"_id": "604fb4537dbea8004948e24e",
			"offsetX": -22,
			"offsetY": 142.40000000000006,
			"zoom": 80,
			"variables": [],
			"children": [],
			"nodes": {
				"5fe9ee0155a6159ee6d99039": {
					"nodeID": "5fe9ee0155a6159ee6d99039",
					"type": "start",
					"coords": [
						360,
						120
					],
					"data": {
						"name": "Start",
						"color": "standard",
						"ports": [
							{
								"type": "",
								"target": "5fe9ee0555a6159ee6d9903d",
								"id": "5fe9ee0155a6159ee6d9903a"
							}
						],
						"steps": []
					}
				},
				"5fe9ee0555a6159ee6d9903d": {
					"nodeID": "5fe9ee0555a6159ee6d9903d",
					"type": "exit",
					"data": {
						"ports": []
					}
				},
				"5fe9ee0555a6159ee6d9903f": {
					"nodeID": "5fe9ee0555a6159ee6d9903f",
					"type": "block",
					"coords": [
						747.5,
						120.99999999999994
					],
					"data": {
						"name": "Stop",
						"color": "standard",
						"steps": [
							"5fe9ee0555a6159ee6d9903d"
						]
					}
				}
			},
			"versionID": "604fb4535e10aa001b8f200e",
			"creatorID": 55093,
			"name": "Generic Error",
			"modified": 1615836243
		},
		"604fb4537dbea8004948e252": {
			"_id": "604fb4537dbea8004948e252",
			"offsetX": -745.5,
			"offsetY": 145.1,
			"zoom": 80,
			"variables": [],
			"children": [
				"604fb4537dbea8004948e256"
			],
			"nodes": {
				"5fe9fd1355a6159ee6d996cb": {
					"nodeID": "5fe9fd1355a6159ee6d996cb",
					"type": "start",
					"coords": [
						360,
						120
					],
					"data": {
						"name": "Start",
						"color": "standard",
						"ports": [
							{
								"type": "",
								"target": "5ff3f2a6da27927c0bb3818f",
								"id": "5fe9fd1655a6159ee6d996cc"
							}
						],
						"steps": []
					}
				},
				"5ff3f2a6da27927c0bb3818f": {
					"nodeID": "5ff3f2a6da27927c0bb3818f",
					"type": "code",
					"data": {
						"code": "questionSeries = questionnaire['mentalhealth']\nmFlag = true",
						"ports": [
							{
								"type": "",
								"target": "5ff3f2a6da27927c0bb3818c",
								"id": "5ff3f2a6da27927c0bb38190"
							},
							{
								"type": "fail",
								"target": null,
								"id": "5ff3f2a6da27927c0bb38191"
							}
						]
					}
				},
				"5ff3f2a6da27927c0bb3818c": {
					"nodeID": "5ff3f2a6da27927c0bb3818c",
					"type": "flow",
					"data": {
						"diagramID": "604fb4537dbea8004948e256",
						"variableMap": null,
						"ports": [
							{
								"type": "",
								"target": "5ff3f2a6da27927c0bb38188",
								"id": "5ff3f2a6da27927c0bb3818d"
							}
						]
					}
				},
				"5ff3f2a6da27927c0bb38188": {
					"nodeID": "5ff3f2a6da27927c0bb38188",
					"type": "code",
					"data": {
						"code": "questionSeries.modified = true\nquestionnaire['mentalhealth'] = questionSeries\nquestionSeries = JSON.stringify(questionSeries)\nmFlag = false",
						"ports": [
							{
								"type": "",
								"target": null,
								"id": "5ff3f2a6da27927c0bb38189"
							},
							{
								"type": "fail",
								"target": null,
								"id": "5ff3f2a6da27927c0bb3818a"
							}
						]
					}
				},
				"5ff3f2a6da27927c0bb38186": {
					"nodeID": "5ff3f2a6da27927c0bb38186",
					"type": "block",
					"coords": [
						751.875,
						92.37499999999994
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"5ff3f2a6da27927c0bb3818f"
						]
					}
				},
				"5ff3f2a6da27927c0bb38184": {
					"nodeID": "5ff3f2a6da27927c0bb38184",
					"type": "block",
					"coords": [
						1205.625,
						126.12499999999994
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"5ff3f2a6da27927c0bb3818c"
						]
					}
				},
				"5ff3f2a6da27927c0bb38182": {
					"nodeID": "5ff3f2a6da27927c0bb38182",
					"type": "block",
					"coords": [
						1628.125,
						96.12499999999994
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"5ff3f2a6da27927c0bb38188"
						]
					}
				}
			},
			"versionID": "604fb4535e10aa001b8f200e",
			"creatorID": 55093,
			"name": "Mental Health Check",
			"modified": 1615836243
		},
		"604fb4537dbea8004948e253": {
			"_id": "604fb4537dbea8004948e253",
			"offsetX": 223.4692947772043,
			"offsetY": 158.83015468848618,
			"zoom": 62.22003997565718,
			"variables": [],
			"children": [],
			"nodes": {
				"5fe9f23b55a6159ee6d9913d": {
					"nodeID": "5fe9f23b55a6159ee6d9913d",
					"type": "start",
					"coords": [
						360,
						120
					],
					"data": {
						"name": "Start",
						"color": "standard",
						"ports": [
							{
								"type": "",
								"target": "5ff8e558a13f5c2464ab8345",
								"id": "5fe9f23d55a6159ee6d9913e"
							}
						],
						"steps": []
					}
				},
				"5fe9f24355a6159ee6d99141": {
					"nodeID": "5fe9f24355a6159ee6d99141",
					"type": "exit",
					"data": {
						"ports": []
					}
				},
				"5fe9f24355a6159ee6d99143": {
					"nodeID": "5fe9f24355a6159ee6d99143",
					"type": "block",
					"coords": [
						1146.7788938301244,
						134.21439844908883
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"6032cffbd8b4f6a1a62b5d4a",
							"5fe9f24355a6159ee6d99141"
						]
					}
				},
				"5ff8e558a13f5c2464ab8345": {
					"nodeID": "5ff8e558a13f5c2464ab8345",
					"type": "speak",
					"data": {
						"randomize": false,
						"dialogs": [
							{
								"voice": "Alexa",
								"content": "Got it. Thank you for speaking with me! If you would like to talk again, say, \"Alexa, open ARIC Study\""
							}
						],
						"ports": [
							{
								"type": "",
								"target": "6032cffbd8b4f6a1a62b5d4a",
								"id": "5ff8e558a13f5c2464ab8347"
							}
						]
					}
				},
				"5ff8e558a13f5c2464ab8348": {
					"nodeID": "5ff8e558a13f5c2464ab8348",
					"type": "block",
					"coords": [
						746.2507891436218,
						124.2143984490888
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"5ff8e558a13f5c2464ab8345"
						]
					}
				},
				"6032cffbd8b4f6a1a62b5d4a": {
					"nodeID": "6032cffbd8b4f6a1a62b5d4a",
					"type": "directive",
					"data": {
						"directive": "{\n  \"query\": \"INSERT INTO \\\"contactalerts\\\" (\\\"checkinid\\\",\\\"type\\\") VALUES ($1,'Issue with diagnosis.')\",\n  \"params\": [\"_checkinId\"]\n}",
						"ports": [
							{
								"type": "",
								"target": "5fe9f24355a6159ee6d99141",
								"id": "6032cffbd8b4f6a1a62b5d4b"
							}
						]
					}
				}
			},
			"versionID": "604fb4535e10aa001b8f200e",
			"creatorID": 55093,
			"name": "End Diagnosis",
			"modified": 1615836243
		},
		"604fb4537dbea8004948e249": {
			"_id": "604fb4537dbea8004948e249",
			"offsetX": 236.2447294758938,
			"offsetY": 366.51099403377367,
			"zoom": 48.20615785574724,
			"variables": [],
			"children": [],
			"nodes": {
				"5ff495c66ea4a64968b81780": {
					"nodeID": "5ff495c66ea4a64968b81780",
					"type": "start",
					"coords": [
						22.5,
						-110
					],
					"data": {
						"name": "Start",
						"color": "standard",
						"ports": [
							{
								"type": "",
								"target": "5ff762bbe7b840f3a1b8da1e",
								"id": "5ff495c76ea4a64968b81781"
							}
						],
						"steps": []
					}
				},
				"5ff762bbe7b840f3a1b8da1e": {
					"nodeID": "5ff762bbe7b840f3a1b8da1e",
					"type": "interaction",
					"data": {
						"name": "Choice",
						"else": {
							"type": "reprompt",
							"randomize": false,
							"reprompts": [
								{
									"voice": "Alexa",
									"content": "{{[reproa].reproa}} "
								},
								{
									"voice": "Alexa",
									"content": "{{[reprob].reprob}} "
								},
								{
									"voice": "Alexa",
									"content": "{{[reproc].reproc}} "
								}
							]
						},
						"choices": [
							{
								"intent": "wgcl30ta",
								"mappings": []
							}
						],
						"reprompt": null,
						"ports": [
							{
								"type": "",
								"target": null,
								"id": "5ff762bbe7b840f3a1b8da20"
							},
							{
								"type": "",
								"target": "60061c428f373903dcbd61f5",
								"id": "5ff762bbe7b840f3a1b8da21"
							}
						]
					}
				},
				"5ff762bbe7b840f3a1b8da22": {
					"nodeID": "5ff762bbe7b840f3a1b8da22",
					"type": "block",
					"coords": [
						460.01440560288916,
						-111.00447829486988
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"5ff762bbe7b840f3a1b8da1e"
						]
					}
				},
				"5ff76359e7b840f3a1b8da3f": {
					"nodeID": "5ff76359e7b840f3a1b8da3f",
					"type": "set",
					"data": {
						"sets": [
							{
								"variable": "res",
								"expression": {
									"type": "variable",
									"value": "numbertype",
									"depth": 0
								}
							}
						],
						"ports": [
							{
								"type": "",
								"target": null,
								"id": "5ff76359e7b840f3a1b8da41"
							}
						]
					}
				},
				"5ff76359e7b840f3a1b8da42": {
					"nodeID": "5ff76359e7b840f3a1b8da42",
					"type": "block",
					"coords": [
						1287.7094921807761,
						-106.85563074310103
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"5ff76359e7b840f3a1b8da3f"
						]
					}
				},
				"60061c428f373903dcbd61f5": {
					"nodeID": "60061c428f373903dcbd61f5",
					"type": "code",
					"data": {
						"code": "switch (numbertype) {\n  case \"one\":\n    numbertype = 1;\n    break;\n  case \"two\":\n    numbertype = 2;\n    break;\n  case \"three\":\n    numbertype = 3;\n    break;\n  case \"four\":\n    numbertype = 4;\n    break;\n  case \"five\":\n    numbertype = 5;\n    break;\n  case \"six\":\n    numbertype = 6;\n    break;\n  case  \"seven\":\n    numbertype = 7;\n    break;\n  case  \"eight\":\n    numbertype = 8;\n    break;\n  case  \"nine\":\n    numbertype = 9;\n    break;\n  case  \"ten\":\n    numbertype = 10;\n}",
						"ports": [
							{
								"type": "",
								"target": "5ff76359e7b840f3a1b8da42",
								"id": "60061c428f373903dcbd61f7"
							},
							{
								"type": "fail",
								"target": null,
								"id": "60061c428f373903dcbd61f8"
							}
						]
					}
				},
				"60061c428f373903dcbd61f9": {
					"nodeID": "60061c428f373903dcbd61f9",
					"type": "block",
					"coords": [
						841.7083803656242,
						-117.22774962252313
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"60061c428f373903dcbd61f5"
						]
					}
				}
			},
			"versionID": "604fb4535e10aa001b8f200e",
			"creatorID": 55093,
			"name": "NumberPrompt",
			"modified": 1615836243
		},
		"604fb4537dbea8004948e256": {
			"_id": "604fb4537dbea8004948e256",
			"offsetX": 209.5700106320162,
			"offsetY": 164.2946010699461,
			"zoom": 41.94275883441306,
			"variables": [],
			"children": [
				"604fb4537dbea8004948e249",
				"604fb4537dbea8004948e259"
			],
			"nodes": {
				"5ff3c3ca073bf193e32d6bf7": {
					"nodeID": "5ff3c3ca073bf193e32d6bf7",
					"type": "start",
					"coords": [
						-660.6270479658168,
						-22.044372255318528
					],
					"data": {
						"name": "Start",
						"color": "standard",
						"ports": [
							{
								"type": "",
								"target": "5ff3c3e2073bf193e32d6c10",
								"id": "5ff3c3cb073bf193e32d6bf8"
							}
						],
						"steps": []
					}
				},
				"5ff3c3e2073bf193e32d6c5c": {
					"nodeID": "5ff3c3e2073bf193e32d6c5c",
					"type": "set",
					"data": {
						"sets": [
							{
								"variable": "res",
								"expression": {
									"type": "value",
									"value": "1",
									"depth": 0
								}
							}
						],
						"ports": [
							{
								"type": "",
								"target": "5ff3c3e2073bf193e32d6c25",
								"id": "5ff3c3e2073bf193e32d6c5d"
							}
						]
					}
				},
				"5ff3c3e2073bf193e32d6c59": {
					"nodeID": "5ff3c3e2073bf193e32d6c59",
					"type": "set",
					"data": {
						"sets": [
							{
								"variable": "res",
								"expression": {
									"type": "value",
									"value": "0",
									"depth": 0
								}
							}
						],
						"ports": [
							{
								"type": "",
								"target": "5ff3c3e2073bf193e32d6c25",
								"id": "5ff3c3e2073bf193e32d6c5a"
							}
						]
					}
				},
				"5ff3c3e2073bf193e32d6c54": {
					"nodeID": "5ff3c3e2073bf193e32d6c54",
					"type": "interaction",
					"data": {
						"name": "Choice",
						"else": {
							"type": "reprompt",
							"randomize": false,
							"reprompts": [
								{
									"voice": "Alexa",
									"content": "{{[reproa].reproa}} "
								},
								{
									"voice": "Alexa",
									"content": "{{[reprob].reprob}} "
								},
								{
									"voice": "Alexa",
									"content": "{{[reproc].reproc}} "
								}
							]
						},
						"choices": [
							{
								"intent": "AMAZON.YesIntent",
								"mappings": []
							},
							{
								"intent": "AMAZON.NoIntent",
								"mappings": []
							}
						],
						"reprompt": null,
						"chips": null,
						"ports": [
							{
								"type": "",
								"target": null,
								"id": "5ff3c3e2073bf193e32d6c55"
							},
							{
								"type": "",
								"target": "5ff3c3e2073bf193e32d6c5c",
								"id": "5ff3c3e2073bf193e32d6c56"
							},
							{
								"type": 2,
								"target": "5ff3c3e2073bf193e32d6c59",
								"id": "5ff3c3e2073bf193e32d6c57"
							}
						]
					}
				},
				"5ff3c3e2073bf193e32d6c50": {
					"nodeID": "5ff3c3e2073bf193e32d6c50",
					"type": "code",
					"data": {
						"code": "//Evaluates question conditions to find the next possible question\nvar flag = true\nwhile(flag){\n  if(!questionSeries[qIndex].condition){\n    flag = false\n  }\n  else{\n    if(eval(questionSeries[qIndex].condition.replace(/\\[/g, \"questionSeries[\").replace(/\\]/g, \"].value\"))){\n      flag = false\n    }\n    else{\n      //throws error when qIndex is out of bounds\n      qIndex = qIndex + 1\n    }\n  }\n}\nqType = questionSeries[qIndex].responseType\nqText = questionSeries[qIndex].text\nreproa = questionSeries[qIndex].reproOne\nreprob = questionSeries[qIndex].reproTwo\nreproc = questionSeries[qIndex].reproThree\n\n// if(mFlag){\n//   qText = \"<voice name='Matthew'>-</voice>\".replace(\"-\", qText)\n//   reproa = \"<voice name='Matthew'>-</voice>\".replace(\"-\", reproa)\n//   reprob = \"<voice name='Matthew'>-</voice>\".replace(\"-\", reproa)\n//   reproc = \"<voice name='Matthew'>-</voice>\".replace(\"-\", reproa)\n// }",
						"ports": [
							{
								"type": "",
								"target": "5ff3c3e2073bf193e32d6c30",
								"id": "5ff3c3e2073bf193e32d6c51"
							},
							{
								"type": "fail",
								"target": null,
								"id": "5ff3c3e2073bf193e32d6c52"
							}
						]
					}
				},
				"5ff3c3e2073bf193e32d6c4c": {
					"nodeID": "5ff3c3e2073bf193e32d6c4c",
					"type": "code",
					"data": {
						"code": "qlen = Object.keys(questionSeries).length + 1;",
						"ports": [
							{
								"type": "",
								"target": "5ff3c3e2073bf193e32d6c50",
								"id": "5ff3c3e2073bf193e32d6c4d"
							},
							{
								"type": "fail",
								"target": null,
								"id": "5ff3c3e2073bf193e32d6c4e"
							}
						]
					}
				},
				"5ff3c3e2073bf193e32d6c3b": {
					"nodeID": "5ff3c3e2073bf193e32d6c3b",
					"type": "capture",
					"data": {
						"slot": "Custom",
						"variable": "res",
						"reprompt": null,
						"slotInputs": [],
						"chips": null,
						"ports": [
							{
								"type": "",
								"target": "5ff3c3e2073bf193e32d6c25",
								"id": "5ff3c3e2073bf193e32d6c3c"
							}
						]
					}
				},
				"5ff3c3e2073bf193e32d6c33": {
					"nodeID": "5ff3c3e2073bf193e32d6c33",
					"type": "if",
					"data": {
						"expressions": [
							{
								"type": "equals",
								"value": [
									{
										"type": "variable",
										"value": "qType",
										"depth": 1
									},
									{
										"type": "value",
										"value": "Binary",
										"depth": 1
									}
								],
								"depth": 0
							},
							{
								"type": "equals",
								"value": [
									{
										"type": "variable",
										"value": "qType",
										"depth": 1
									},
									{
										"type": "value",
										"value": "Numeric",
										"depth": 1
									}
								],
								"depth": 0
							},
							{
								"type": "equals",
								"value": [
									{
										"type": "variable",
										"value": "qType",
										"depth": 1
									},
									{
										"type": "value",
										"value": "Triage",
										"depth": 1
									}
								],
								"depth": 0
							},
							{
								"type": "equals",
								"value": [
									{
										"type": "variable",
										"value": "qType",
										"depth": 1
									},
									{
										"type": "value",
										"value": "Open",
										"depth": 1
									}
								],
								"depth": 0
							},
							{
								"type": "equals",
								"value": [
									{
										"type": "variable",
										"value": "qType",
										"depth": 1
									},
									{
										"type": "value",
										"value": "Weekday",
										"depth": 1
									}
								],
								"depth": 0
							},
							{
								"type": "equals",
								"value": [
									{
										"type": "variable",
										"value": "qType",
										"depth": 1
									},
									{
										"type": "value",
										"value": "VaccineType",
										"depth": 1
									}
								],
								"depth": 0
							},
							{
								"type": "equals",
								"value": [
									{
										"type": "variable",
										"value": "qType",
										"depth": 1
									},
									{
										"type": "value",
										"value": "Date",
										"depth": 1
									}
								],
								"depth": 0
							},
							{
								"type": "equals",
								"value": [
									{
										"type": "variable",
										"value": "qType",
										"depth": 1
									},
									{
										"type": "value",
										"value": "Time",
										"depth": 1
									}
								],
								"depth": 0
							}
						],
						"ports": [
							{
								"type": "",
								"target": "5ff3c3e2073bf193e32d6c29",
								"id": "5ff3c3e2073bf193e32d6c34"
							},
							{
								"type": "",
								"target": "5ff3c3e2073bf193e32d6c54",
								"id": "5ff3c3e2073bf193e32d6c35"
							},
							{
								"type": 2,
								"target": "5ff495a86ea4a64968b81775",
								"id": "5ff3c3e2073bf193e32d6c36"
							},
							{
								"type": 3,
								"target": "5ff4e0ec0b705cf6befcf240",
								"id": "5ff3c3e2073bf193e32d6c37"
							},
							{
								"type": 4,
								"target": "6035bb6df411c8394dab6229",
								"id": "5ff3c3e2073bf193e32d6c38"
							},
							{
								"type": 8,
								"target": "5ff73a03b187aa94d2180e3f",
								"id": "5ff73958b187aa94d2180c88"
							},
							{
								"type": 5,
								"target": "5ff3c3e2073bf193e32d6c1e",
								"id": "5ff3c3e2073bf193e32d6c39"
							},
							{
								"type": 6,
								"target": "5ff68dab86928d1d605b1c33",
								"id": "5ff68d7586928d1d605b1aeb"
							},
							{
								"type": 7,
								"target": "5ff690a286928d1d605b1c57",
								"id": "5ff6908f86928d1d605b1c4d"
							}
						]
					}
				},
				"5ff3c3e2073bf193e32d6c30": {
					"nodeID": "5ff3c3e2073bf193e32d6c30",
					"type": "speak",
					"data": {
						"randomize": false,
						"dialogs": [
							{
								"voice": "Alexa",
								"content": "{{[qText].qText}} "
							}
						],
						"ports": [
							{
								"type": "",
								"target": "5ff3c3e2073bf193e32d6c33",
								"id": "5ff3c3e2073bf193e32d6c31"
							}
						]
					}
				},
				"5ff3c3e2073bf193e32d6c2c": {
					"nodeID": "5ff3c3e2073bf193e32d6c2c",
					"type": "if",
					"data": {
						"expressions": [
							{
								"type": "less",
								"value": [
									{
										"type": "variable",
										"value": "qIndex",
										"depth": 1
									},
									{
										"type": "variable",
										"value": "qlen",
										"depth": 1
									}
								],
								"depth": 0
							}
						],
						"ports": [
							{
								"type": "",
								"target": "5ff3c3e2073bf193e32d6c1a",
								"id": "5ff3c3e2073bf193e32d6c2d"
							},
							{
								"type": 2,
								"target": "5ff3c3e2073bf193e32d6c50",
								"id": "5ff3c3e2073bf193e32d6c2e"
							}
						]
					}
				},
				"5ff3c3e2073bf193e32d6c29": {
					"nodeID": "5ff3c3e2073bf193e32d6c29",
					"type": "set",
					"data": {
						"sets": [
							{
								"variable": "qIndex",
								"expression": {
									"type": "plus",
									"value": [
										{
											"type": "variable",
											"value": "qIndex",
											"depth": 1
										},
										{
											"type": "value",
											"value": "1",
											"depth": 1
										}
									],
									"depth": 0
								}
							}
						],
						"ports": [
							{
								"type": "",
								"target": "5ff3c3e2073bf193e32d6c2c",
								"id": "5ff3c3e2073bf193e32d6c2a"
							}
						]
					}
				},
				"5ff3c3e2073bf193e32d6c25": {
					"nodeID": "5ff3c3e2073bf193e32d6c25",
					"type": "code",
					"data": {
						"code": "questionSeries[qIndex].value = res",
						"ports": [
							{
								"type": "",
								"target": "5ff3c3e2073bf193e32d6c29",
								"id": "5ff3c3e2073bf193e32d6c26"
							},
							{
								"type": "fail",
								"target": "5ff3c3e2073bf193e32d6c29",
								"id": "5ff3c3e2073bf193e32d6c27"
							}
						]
					}
				},
				"5ff3c3e2073bf193e32d6c22": {
					"nodeID": "5ff3c3e2073bf193e32d6c22",
					"type": "set",
					"data": {
						"sets": [
							{
								"variable": "res",
								"expression": {
									"type": "variable",
									"value": "vaccinetype",
									"depth": 0
								}
							}
						],
						"ports": [
							{
								"type": "",
								"target": "5ff3c3e2073bf193e32d6c25",
								"id": "5ff3c3e2073bf193e32d6c23"
							}
						]
					}
				},
				"5ff3c3e2073bf193e32d6c1e": {
					"nodeID": "5ff3c3e2073bf193e32d6c1e",
					"type": "interaction",
					"data": {
						"name": "Choice",
						"else": {
							"type": "reprompt",
							"randomize": false,
							"reprompts": [
								{
									"voice": "Alexa",
									"content": "{{[reproa].reproa}} "
								},
								{
									"voice": "Alexa",
									"content": "{{[reprob].reprob}} "
								},
								{
									"voice": "Alexa",
									"content": "{{[reproc].reproc}} "
								}
							]
						},
						"choices": [
							{
								"intent": "16bn3ygf",
								"mappings": []
							}
						],
						"reprompt": null,
						"chips": null,
						"ports": [
							{
								"type": "",
								"target": null,
								"id": "5ff3c3e2073bf193e32d6c1f"
							},
							{
								"type": "",
								"target": "5ff3c3e2073bf193e32d6c22",
								"id": "5ff3c3e2073bf193e32d6c20"
							}
						]
					}
				},
				"5ff3c3e2073bf193e32d6c1a": {
					"nodeID": "5ff3c3e2073bf193e32d6c1a",
					"type": "code",
					"data": {
						"code": "questionSeries.modified = true",
						"ports": [
							{
								"type": "",
								"target": null,
								"id": "5ff3c3e2073bf193e32d6c1b"
							},
							{
								"type": "fail",
								"target": null,
								"id": "5ff3c3e2073bf193e32d6c1c"
							}
						]
					}
				},
				"5ff3c3e2073bf193e32d6c18": {
					"nodeID": "5ff3c3e2073bf193e32d6c18",
					"type": "block",
					"coords": [
						1551.1200679818658,
						-259.4870964943706
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"5ff3c3e2073bf193e32d6c5c"
						]
					}
				},
				"5ff3c3e2073bf193e32d6c16": {
					"nodeID": "5ff3c3e2073bf193e32d6c16",
					"type": "block",
					"coords": [
						1552.838406804594,
						-130.6116847898141
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"5ff3c3e2073bf193e32d6c59"
						]
					}
				},
				"5ff3c3e2073bf193e32d6c14": {
					"nodeID": "5ff3c3e2073bf193e32d6c14",
					"type": "block",
					"coords": [
						1136.5488646646127,
						-185.44922789394445
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"5ff3c3e2073bf193e32d6c54"
						]
					}
				},
				"5ff3c3e2073bf193e32d6c12": {
					"nodeID": "5ff3c3e2073bf193e32d6c12",
					"type": "block",
					"coords": [
						574.661593195406,
						-216.46571316706058
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"5ff3c3e2073bf193e32d6c50"
						]
					}
				},
				"5ff3c3e2073bf193e32d6c10": {
					"nodeID": "5ff3c3e2073bf193e32d6c10",
					"type": "block",
					"coords": [
						-219.07667286557265,
						-96.85691548063429
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"5ff499b4cce5f010d0161160",
							"5ff3c3e2073bf193e32d6c4c"
						]
					}
				},
				"5ff3c3e2073bf193e32d6c06": {
					"nodeID": "5ff3c3e2073bf193e32d6c06",
					"type": "block",
					"coords": [
						1549.7235847234938,
						249.14119503294575
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"5ff3c3e2073bf193e32d6c3b"
						]
					}
				},
				"5ff3c3e2073bf193e32d6c04": {
					"nodeID": "5ff3c3e2073bf193e32d6c04",
					"type": "block",
					"coords": [
						575.911593195406,
						34.784286832939415
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"5ff3c3e2073bf193e32d6c30",
							"5ff3c3e2073bf193e32d6c33"
						]
					}
				},
				"5ff3c3e2073bf193e32d6c02": {
					"nodeID": "5ff3c3e2073bf193e32d6c02",
					"type": "block",
					"coords": [
						576.4329388809355,
						687.7512417457721
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"5ff3c3e2073bf193e32d6c25",
							"5ff3c3e2073bf193e32d6c29",
							"5ff3c3e2073bf193e32d6c2c"
						]
					}
				},
				"5ff3c3e2073bf193e32d6c00": {
					"nodeID": "5ff3c3e2073bf193e32d6c00",
					"type": "block",
					"coords": [
						1551.500226640841,
						507.31884007277546
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"5ff3c3e2073bf193e32d6c22"
						]
					}
				},
				"5ff3c3e2073bf193e32d6bfe": {
					"nodeID": "5ff3c3e2073bf193e32d6bfe",
					"type": "block",
					"coords": [
						1135.4652374905017,
						505.6005012500466
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"5ff3c3e2073bf193e32d6c1e"
						]
					}
				},
				"5ff3c3e2073bf193e32d6bfc": {
					"nodeID": "5ff3c3e2073bf193e32d6bfc",
					"type": "block",
					"coords": [
						1020.8609869497246,
						1169.1796634544055
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"5ff3c3e2073bf193e32d6c1a"
						]
					}
				},
				"5ff495a86ea4a64968b81775": {
					"nodeID": "5ff495a86ea4a64968b81775",
					"type": "flow",
					"data": {
						"diagramID": "604fb4537dbea8004948e249",
						"variableMap": null,
						"ports": [
							{
								"type": "",
								"target": "5ff3c3e2073bf193e32d6c25",
								"id": "5ff495a86ea4a64968b81777"
							}
						]
					}
				},
				"5ff495a86ea4a64968b81778": {
					"nodeID": "5ff495a86ea4a64968b81778",
					"type": "block",
					"coords": [
						1553.646871123646,
						-2.2290591392773518
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"5ff495a86ea4a64968b81775"
						]
					}
				},
				"5ff499b4cce5f010d0161160": {
					"nodeID": "5ff499b4cce5f010d0161160",
					"type": "set",
					"data": {
						"sets": [
							{
								"variable": "qIndex",
								"expression": {
									"type": "value",
									"value": "1",
									"depth": 0
								}
							}
						],
						"ports": [
							{
								"type": "",
								"target": "5ff3c3e2073bf193e32d6c4c",
								"id": "5ff499b4cce5f010d0161162"
							}
						]
					}
				},
				"5ff4e0ec0b705cf6befcf240": {
					"nodeID": "5ff4e0ec0b705cf6befcf240",
					"type": "flow",
					"data": {
						"diagramID": "604fb4537dbea8004948e259",
						"variableMap": null,
						"ports": [
							{
								"type": "",
								"target": "5ff3c3e2073bf193e32d6c25",
								"id": "5ff4e0ec0b705cf6befcf242"
							}
						]
					}
				},
				"5ff4e0ec0b705cf6befcf243": {
					"nodeID": "5ff4e0ec0b705cf6befcf243",
					"type": "block",
					"coords": [
						1550.5623508769036,
						124.08805110572193
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"5ff4e0ec0b705cf6befcf240"
						]
					}
				},
				"5ff68dab86928d1d605b1c33": {
					"nodeID": "5ff68dab86928d1d605b1c33",
					"type": "interaction",
					"data": {
						"name": "Choice",
						"else": {
							"type": "reprompt",
							"randomize": false,
							"reprompts": [
								{
									"voice": "Alexa",
									"content": "{{[reproa].reproa}} "
								},
								{
									"voice": "Alexa",
									"content": "{{[reprob].reprob}} "
								},
								{
									"voice": "Alexa",
									"content": "{{[reproc].reproc}} "
								}
							]
						},
						"choices": [
							{
								"intent": "534c3yje",
								"mappings": []
							}
						],
						"reprompt": null,
						"chips": null,
						"ports": [
							{
								"type": "",
								"target": null,
								"id": "5ff68dab86928d1d605b1c35"
							},
							{
								"type": "",
								"target": "5ff6900786928d1d605b1c40",
								"id": "5ff68dab86928d1d605b1c36"
							}
						]
					}
				},
				"5ff68dab86928d1d605b1c37": {
					"nodeID": "5ff68dab86928d1d605b1c37",
					"type": "block",
					"coords": [
						1135.01528633842,
						633.9109182107354
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"5ff68dab86928d1d605b1c33"
						]
					}
				},
				"5ff6900786928d1d605b1c40": {
					"nodeID": "5ff6900786928d1d605b1c40",
					"type": "set",
					"data": {
						"sets": [
							{
								"variable": "res",
								"expression": {
									"type": "variable",
									"value": "date",
									"depth": 0
								}
							}
						],
						"ports": [
							{
								"type": "",
								"target": "5ff3c3e2073bf193e32d6c25",
								"id": "5ff6900786928d1d605b1c42"
							}
						]
					}
				},
				"5ff6900786928d1d605b1c43": {
					"nodeID": "5ff6900786928d1d605b1c43",
					"type": "block",
					"coords": [
						1555.247544678055,
						635.8124216421368
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"5ff6900786928d1d605b1c40"
						]
					}
				},
				"5ff690a286928d1d605b1c57": {
					"nodeID": "5ff690a286928d1d605b1c57",
					"type": "interaction",
					"data": {
						"name": "Choice",
						"else": {
							"type": "reprompt",
							"randomize": false,
							"reprompts": [
								{
									"voice": "Alexa",
									"content": "{{[reproa].reproa}} "
								},
								{
									"voice": "Alexa",
									"content": "{{[reprob].reprob}} "
								},
								{
									"voice": "Alexa",
									"content": "{{[reproc].reproc}} "
								}
							]
						},
						"choices": [
							{
								"intent": "2ea53y8u",
								"mappings": []
							},
							{
								"intent": "9khb3y56",
								"mappings": []
							},
							{
								"intent": "wgcl30ta",
								"mappings": []
							}
						],
						"reprompt": null,
						"chips": null,
						"ports": [
							{
								"type": "",
								"target": null,
								"id": "5ff690a286928d1d605b1c58"
							},
							{
								"type": "",
								"target": "5ff690a286928d1d605b1c54",
								"id": "5ff690a286928d1d605b1c59"
							},
							{
								"type": 2,
								"target": "5ff73b05b187aa94d2180e55",
								"id": "5ff73accb187aa94d2180e50"
							},
							{
								"type": 3,
								"target": "6005d3722988cdc35ce7c09f",
								"id": "6005d3682988cdc35ce7c09a"
							}
						]
					}
				},
				"5ff690a286928d1d605b1c54": {
					"nodeID": "5ff690a286928d1d605b1c54",
					"type": "set",
					"data": {
						"sets": [
							{
								"variable": "res",
								"expression": {
									"type": "variable",
									"value": "time",
									"depth": 0
								}
							}
						],
						"ports": [
							{
								"type": "",
								"target": "5ff3c3e2073bf193e32d6c25",
								"id": "5ff690a286928d1d605b1c55"
							}
						]
					}
				},
				"5ff690a286928d1d605b1c52": {
					"nodeID": "5ff690a286928d1d605b1c52",
					"type": "block",
					"coords": [
						1135.9660380541204,
						762.2623998303077
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"5ff690a286928d1d605b1c57"
						]
					}
				},
				"5ff690a286928d1d605b1c50": {
					"nodeID": "5ff690a286928d1d605b1c50",
					"type": "block",
					"coords": [
						1556.1982963937553,
						764.1639032617092
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"5ff690a286928d1d605b1c54"
						]
					}
				},
				"5ff73a03b187aa94d2180e3f": {
					"nodeID": "5ff73a03b187aa94d2180e3f",
					"type": "interaction",
					"data": {
						"name": "Choice",
						"else": {
							"type": "reprompt",
							"randomize": false,
							"reprompts": [
								{
									"voice": "Alexa",
									"content": "{{[reproa].reproa}} "
								},
								{
									"voice": "Alexa",
									"content": "{{[reprob].reprob}} "
								},
								{
									"voice": "Alexa",
									"content": "{{[reproc].reproc}} "
								}
							]
						},
						"choices": [
							{
								"intent": "vfgg3ylr",
								"mappings": []
							}
						],
						"reprompt": null,
						"chips": null,
						"ports": [
							{
								"type": "",
								"target": null,
								"id": "5ff73a03b187aa94d2180e40"
							},
							{
								"type": "",
								"target": "5ff73a03b187aa94d2180e3c",
								"id": "5ff73a03b187aa94d2180e41"
							}
						]
					}
				},
				"5ff73a03b187aa94d2180e3c": {
					"nodeID": "5ff73a03b187aa94d2180e3c",
					"type": "set",
					"data": {
						"sets": [
							{
								"variable": "res",
								"expression": {
									"type": "variable",
									"value": "weekday",
									"depth": 0
								}
							}
						],
						"ports": [
							{
								"type": "",
								"target": "5ff3c3e2073bf193e32d6c25",
								"id": "5ff73a03b187aa94d2180e3d"
							}
						]
					}
				},
				"5ff73a03b187aa94d2180e3a": {
					"nodeID": "5ff73a03b187aa94d2180e3a",
					"type": "block",
					"coords": [
						1136.163169217368,
						378.2502889916282
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"5ff73a03b187aa94d2180e3f"
						]
					}
				},
				"5ff73a03b187aa94d2180e38": {
					"nodeID": "5ff73a03b187aa94d2180e38",
					"type": "block",
					"coords": [
						1544.5921446421016,
						378.0671243829559
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"5ff73a03b187aa94d2180e3c"
						]
					}
				},
				"5ff73b05b187aa94d2180e55": {
					"nodeID": "5ff73b05b187aa94d2180e55",
					"type": "set",
					"data": {
						"sets": [
							{
								"variable": "res",
								"expression": {
									"type": "value",
									"value": "-1",
									"depth": 0
								}
							}
						],
						"ports": [
							{
								"type": "",
								"target": "5ff3c3e2073bf193e32d6c25",
								"id": "5ff73b05b187aa94d2180e56"
							}
						]
					}
				},
				"5ff73b11b187aa94d2180e60": {
					"nodeID": "5ff73b11b187aa94d2180e60",
					"type": "block",
					"coords": [
						1557.4373311570537,
						896.3873521071687
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"5ff73b05b187aa94d2180e55"
						]
					}
				},
				"6005d3722988cdc35ce7c09f": {
					"nodeID": "6005d3722988cdc35ce7c09f",
					"type": "set",
					"data": {
						"sets": [
							{
								"variable": "res",
								"expression": {
									"type": "variable",
									"value": "numbertype",
									"depth": 0
								}
							}
						],
						"ports": [
							{
								"type": "",
								"target": "5ff3c3e2073bf193e32d6c25",
								"id": "6005d3722988cdc35ce7c0a0"
							}
						]
					}
				},
				"6005d3722988cdc35ce7c09d": {
					"nodeID": "6005d3722988cdc35ce7c09d",
					"type": "block",
					"coords": [
						1559.2940680244635,
						1030.4275409081374
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"6005d3722988cdc35ce7c09f"
						]
					}
				},
				"6035bb6df411c8394dab6229": {
					"nodeID": "6035bb6df411c8394dab6229",
					"type": "set",
					"data": {
						"sets": [
							{
								"variable": "res",
								"expression": {
									"type": "value",
									"value": "Open",
									"depth": 0
								}
							}
						],
						"ports": [
							{
								"type": "",
								"target": "5ff3c3e2073bf193e32d6c25",
								"id": "6035bb6df411c8394dab622b"
							}
						]
					}
				},
				"6035bb6df411c8394dab622c": {
					"nodeID": "6035bb6df411c8394dab622c",
					"type": "block",
					"coords": [
						1133.5210238433447,
						249.63879782782791
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"6035bb6df411c8394dab6229"
						]
					}
				}
			},
			"versionID": "604fb4535e10aa001b8f200e",
			"creatorID": 55093,
			"name": "Questionnaire",
			"modified": 1615836243
		},
		"604fb4537dbea8004948e24c": {
			"_id": "604fb4537dbea8004948e24c",
			"offsetX": 143.2533043133654,
			"offsetY": 279.52986987820015,
			"zoom": 29.439875045593137,
			"variables": [],
			"children": [
				"604fb4537dbea8004948e256"
			],
			"nodes": {
				"5fe9f7d055a6159ee6d99552": {
					"nodeID": "5fe9f7d055a6159ee6d99552",
					"type": "start",
					"coords": [
						360,
						120
					],
					"data": {
						"name": "Start",
						"color": "standard",
						"ports": [
							{
								"type": "",
								"target": "5ff5cab3be758f364404dcb4",
								"id": "5fe9f7d355a6159ee6d99553"
							}
						],
						"steps": []
					}
				},
				"5ff5cab3be758f364404dcb8": {
					"nodeID": "5ff5cab3be758f364404dcb8",
					"type": "flow",
					"data": {
						"diagramID": "604fb4537dbea8004948e256",
						"variableMap": null,
						"ports": [
							{
								"type": "",
								"target": "6029b00bdf1a1c3ef52a2da6",
								"id": "5ff5cab3be758f364404dcb9"
							}
						]
					}
				},
				"5ff5cab3be758f364404dcb4": {
					"nodeID": "5ff5cab3be758f364404dcb4",
					"type": "code",
					"data": {
						"code": "questionSeries = questionnaire['dailyReminder']",
						"ports": [
							{
								"type": "",
								"target": "5ff5cab3be758f364404dcb8",
								"id": "5ff5cab3be758f364404dcb5"
							},
							{
								"type": "fail",
								"target": null,
								"id": "5ff5cab3be758f364404dcb6"
							}
						]
					}
				},
				"5ff5cab3be758f364404dcb0": {
					"nodeID": "5ff5cab3be758f364404dcb0",
					"type": "code",
					"data": {
						"code": "questionSeries.modified = false\nquestionnaire['dailyReminder'] = questionSeries\nquestionSeries = JSON.stringify(questionSeries)",
						"ports": [
							{
								"type": "",
								"target": null,
								"id": "5ff5cab3be758f364404dcb1"
							},
							{
								"type": "fail",
								"target": null,
								"id": "5ff5cab3be758f364404dcb2"
							}
						]
					}
				},
				"5ff5cab3be758f364404dcae": {
					"nodeID": "5ff5cab3be758f364404dcae",
					"type": "block",
					"coords": [
						1231.875,
						115.87499999999997
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"5ff5cab3be758f364404dcb8"
						]
					}
				},
				"5ff5cab3be758f364404dcac": {
					"nodeID": "5ff5cab3be758f364404dcac",
					"type": "block",
					"coords": [
						778.125,
						82.12499999999997
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"5ff5cab3be758f364404dcb4"
						]
					}
				},
				"5ff5cab3be758f364404dcaa": {
					"nodeID": "5ff5cab3be758f364404dcaa",
					"type": "block",
					"coords": [
						3926.1760511958414,
						264.0286285801319
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"5ff5cab3be758f364404dcb0"
						]
					}
				},
				"6029b00bdf1a1c3ef52a2da6": {
					"nodeID": "6029b00bdf1a1c3ef52a2da6",
					"type": "code",
					"data": {
						"code": "flag = !questionSeries[1].value;\nif(questionSeries[2].value == -1){\n  questionSeries[2].value = \"11:00\";\n}\nres = questionSeries[2].value;\nmFlag = questionSeries[4].value;",
						"ports": [
							{
								"type": "",
								"target": "6035bd3ef411c8394dab6470",
								"id": "6029b00bdf1a1c3ef52a2da8"
							},
							{
								"type": "fail",
								"target": "6035bd3ef411c8394dab6470",
								"id": "6029b00bdf1a1c3ef52a2da9"
							}
						]
					}
				},
				"6029b00bdf1a1c3ef52a2daa": {
					"nodeID": "6029b00bdf1a1c3ef52a2daa",
					"type": "block",
					"coords": [
						1641.2540239079156,
						53.35203310059626
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"6029b00bdf1a1c3ef52a2da6",
							"6035bd3ef411c8394dab6470"
						]
					}
				},
				"6029b164df1a1c3ef52a2dc7": {
					"nodeID": "6029b164df1a1c3ef52a2dc7",
					"type": "directive",
					"data": {
						"directive": "{\n  \"query\": \"UPDATE \\\"users\\\" SET (\\\"dailystatus\\\", \\\"datestart\\\", \\\"streak\\\", \\\"dcheckintime\\\") = ('t', NOW(), '0', $2) WHERE \\\"userid\\\" = $1\",\n  \"params\": [\"_cognitoId\", \"_res\"]\n}",
						"ports": [
							{
								"type": "",
								"target": "604999cab22cd43ae29d14a1",
								"id": "6029b164df1a1c3ef52a2dc9"
							}
						]
					}
				},
				"6029b164df1a1c3ef52a2dca": {
					"nodeID": "6029b164df1a1c3ef52a2dca",
					"type": "block",
					"coords": [
						2047.7318856449756,
						45.42568034446357
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"6029b164df1a1c3ef52a2dc7"
						]
					}
				},
				"6029b4d8df1a1c3ef52a2fbb": {
					"nodeID": "6029b4d8df1a1c3ef52a2fbb",
					"type": "directive",
					"data": {
						"directive": "{\n  \"query\": \"INSERT INTO \\\"contactalerts\\\" (\\\"checkinid\\\",\\\"type\\\") VALUES ($1,'Refused daily checkin.')\",\n  \"params\": [\"_checkinId\"]\n}",
						"ports": [
							{
								"type": "",
								"target": "5ff5cab3be758f364404dcb0",
								"id": "6029b4d8df1a1c3ef52a2fbd"
							}
						]
					}
				},
				"6029b4d8df1a1c3ef52a2fbe": {
					"nodeID": "6029b4d8df1a1c3ef52a2fbe",
					"type": "block",
					"coords": [
						2060.7421645862773,
						273.6730888735345
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"6029b4d8df1a1c3ef52a2fbb"
						]
					}
				},
				"6035bd3ef411c8394dab6470": {
					"nodeID": "6035bd3ef411c8394dab6470",
					"type": "if",
					"data": {
						"expressions": [
							{
								"type": "not",
								"value": {
									"type": "variable",
									"value": "flag",
									"depth": 1
								},
								"depth": 0
							}
						],
						"ports": [
							{
								"type": "",
								"target": "6029b4d8df1a1c3ef52a2fbb",
								"id": "6035bd3ef411c8394dab6473"
							},
							{
								"type": "",
								"target": "6029b164df1a1c3ef52a2dc7",
								"id": "6035bd3ef411c8394dab6474"
							}
						]
					}
				},
				"604999cab22cd43ae29d14b5": {
					"nodeID": "604999cab22cd43ae29d14b5",
					"type": "exit",
					"data": {
						"ports": []
					}
				},
				"604999cab22cd43ae29d14b2": {
					"nodeID": "604999cab22cd43ae29d14b2",
					"type": "speak",
					"data": {
						"randomize": false,
						"dialogs": [
							{
								"voice": "Alexa",
								"content": "There was a problem creating the reminder."
							}
						],
						"ports": [
							{
								"type": "",
								"target": "604999cab22cd43ae29d14b5",
								"id": "604999cab22cd43ae29d14b3"
							}
						]
					}
				},
				"604999cab22cd43ae29d14ae": {
					"nodeID": "604999cab22cd43ae29d14ae",
					"type": "reminder",
					"data": {
						"reminder": {
							"name": "Reminder",
							"type": "SCHEDULED_ABSOLUTE",
							"text": "Hey! It's time for your check-in with the ARIC Study. To talk to us, please approach your Alexa and say, 'Alexa, open ARIC Study'",
							"time": {
								"h": "{{[resB].resB}}",
								"m": "{{[resC].resC}}",
								"s": "0"
							},
							"date": "",
							"timezone": "User Timezone",
							"recurrence": {
								"freq": "DAILY",
								"byDay": "SA"
							},
							"recurrenceBool": true
						},
						"ports": [
							{
								"type": "",
								"target": "5ff5cab3be758f364404dcb0",
								"id": "604999cab22cd43ae29d14af"
							},
							{
								"type": "fail",
								"target": "604999cab22cd43ae29d14b2",
								"id": "604999cab22cd43ae29d14b0"
							}
						]
					}
				},
				"604999cab22cd43ae29d14aa": {
					"nodeID": "604999cab22cd43ae29d14aa",
					"type": "code",
					"data": {
						"code": "resC = res.split(\":\")[1];\nresB = res.split(\":\")[0];",
						"ports": [
							{
								"type": "",
								"target": "604999cab22cd43ae29d14ae",
								"id": "604999cab22cd43ae29d14ab"
							},
							{
								"type": "fail",
								"target": "604999cab22cd43ae29d14b2",
								"id": "604999cab22cd43ae29d14ac"
							}
						]
					}
				},
				"604999cab22cd43ae29d14a1": {
					"nodeID": "604999cab22cd43ae29d14a1",
					"type": "if",
					"data": {
						"expressions": [
							{
								"type": "not",
								"value": {
									"type": "variable",
									"value": "mFlag",
									"depth": 2
								},
								"depth": 0
							}
						],
						"ports": [
							{
								"type": "",
								"target": null,
								"id": "604999cab22cd43ae29d14a2"
							},
							{
								"type": "",
								"target": "604999cab22cd43ae29d14aa",
								"id": "604999cab22cd43ae29d14a3"
							}
						]
					}
				},
				"604999cab22cd43ae29d1494": {
					"nodeID": "604999cab22cd43ae29d1494",
					"type": "block",
					"coords": [
						3413.6902530304765,
						17.669534268804703
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"604999cab22cd43ae29d14b2",
							"604999cab22cd43ae29d14b5"
						]
					}
				},
				"604999cab22cd43ae29d1492": {
					"nodeID": "604999cab22cd43ae29d1492",
					"type": "block",
					"coords": [
						3401.8883445732495,
						-338.6166870787708
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"604999cab22cd43ae29d14ae"
						]
					}
				},
				"604999cab22cd43ae29d1490": {
					"nodeID": "604999cab22cd43ae29d1490",
					"type": "block",
					"coords": [
						2946.1881038076267,
						-89.63063242800649
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"604999cab22cd43ae29d14aa"
						]
					}
				},
				"604999cab22cd43ae29d148c": {
					"nodeID": "604999cab22cd43ae29d148c",
					"type": "block",
					"coords": [
						2464.197464536293,
						25.067158916871225
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"604999cab22cd43ae29d14a1"
						]
					}
				}
			},
			"versionID": "604fb4535e10aa001b8f200e",
			"creatorID": 55093,
			"name": "Daily Status Initiation",
			"modified": 1615836243
		},
		"604fb4537dbea8004948e259": {
			"_id": "604fb4537dbea8004948e259",
			"offsetX": 86,
			"offsetY": 116.6,
			"zoom": 80,
			"variables": [],
			"children": [],
			"nodes": {
				"5ff4e0f30b705cf6befcf24a": {
					"nodeID": "5ff4e0f30b705cf6befcf24a",
					"type": "start",
					"coords": [
						360,
						120
					],
					"data": {
						"name": "Start",
						"color": "standard",
						"ports": [
							{
								"type": "",
								"target": "5ff4e0f70b705cf6befcf24f",
								"id": "5ff4e0f50b705cf6befcf24b"
							}
						],
						"steps": []
					}
				},
				"5ff4e0f70b705cf6befcf251": {
					"nodeID": "5ff4e0f70b705cf6befcf251",
					"type": "interaction",
					"data": {
						"name": "Choice",
						"else": {
							"type": "reprompt",
							"randomize": false,
							"reprompts": [
								{
									"voice": "Alexa",
									"content": "{{[reproa].reproa}} "
								},
								{
									"voice": "Alexa",
									"content": "{{[reprob].reprob}} "
								},
								{
									"voice": "Alexa",
									"content": "{{[reproc].reproc}} "
								}
							]
						},
						"choices": [
							{
								"intent": "554c3y34",
								"mappings": []
							},
							{
								"intent": "hr4f3yxb",
								"mappings": []
							},
							{
								"intent": "dk4i3y5r",
								"mappings": []
							},
							{
								"intent": "5n5i3047",
								"mappings": []
							}
						],
						"reprompt": null,
						"chips": null,
						"ports": [
							{
								"type": "",
								"target": null,
								"id": "5ff4e0f70b705cf6befcf252"
							},
							{
								"type": "",
								"target": "5ff4e0fd0b705cf6befcf25e",
								"id": "5ff4e0f70b705cf6befcf253"
							},
							{
								"type": 2,
								"target": "5ff4e0ff0b705cf6befcf268",
								"id": "5ff4e0f70b705cf6befcf254"
							},
							{
								"type": 3,
								"target": "5ff4e1040b705cf6befcf272",
								"id": "5ff4e0f70b705cf6befcf255"
							},
							{
								"type": 4,
								"target": "6005cfab2988cdc35ce7bdf8",
								"id": "6005cf692988cdc35ce7bdf3"
							}
						]
					}
				},
				"5ff4e0f70b705cf6befcf24f": {
					"nodeID": "5ff4e0f70b705cf6befcf24f",
					"type": "block",
					"coords": [
						786.25,
						27.99999999999997
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"5ff4e0f70b705cf6befcf251"
						]
					}
				},
				"5ff4e0fd0b705cf6befcf25e": {
					"nodeID": "5ff4e0fd0b705cf6befcf25e",
					"type": "set",
					"data": {
						"sets": [
							{
								"variable": "res",
								"expression": {
									"type": "value",
									"value": "1",
									"depth": 0
								}
							}
						],
						"ports": [
							{
								"type": "",
								"target": null,
								"id": "5ff4e0fd0b705cf6befcf260"
							}
						]
					}
				},
				"5ff4e0fd0b705cf6befcf261": {
					"nodeID": "5ff4e0fd0b705cf6befcf261",
					"type": "block",
					"coords": [
						1247.5,
						-48.25000000000003
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"5ff4e0fd0b705cf6befcf25e"
						]
					}
				},
				"5ff4e0ff0b705cf6befcf268": {
					"nodeID": "5ff4e0ff0b705cf6befcf268",
					"type": "set",
					"data": {
						"sets": [
							{
								"variable": "res",
								"expression": {
									"type": "value",
									"value": "-1",
									"depth": 0
								}
							}
						],
						"ports": [
							{
								"type": "",
								"target": null,
								"id": "5ff4e0ff0b705cf6befcf26a"
							}
						]
					}
				},
				"5ff4e0ff0b705cf6befcf26b": {
					"nodeID": "5ff4e0ff0b705cf6befcf26b",
					"type": "block",
					"coords": [
						1246.25,
						81.74999999999997
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"5ff4e0ff0b705cf6befcf268"
						]
					}
				},
				"5ff4e1040b705cf6befcf272": {
					"nodeID": "5ff4e1040b705cf6befcf272",
					"type": "set",
					"data": {
						"sets": [
							{
								"variable": "res",
								"expression": {
									"type": "value",
									"value": "0",
									"depth": 0
								}
							}
						],
						"ports": [
							{
								"type": "",
								"target": null,
								"id": "5ff4e1040b705cf6befcf274"
							}
						]
					}
				},
				"5ff4e1040b705cf6befcf275": {
					"nodeID": "5ff4e1040b705cf6befcf275",
					"type": "block",
					"coords": [
						1245,
						207.99999999999994
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"5ff4e1040b705cf6befcf272"
						]
					}
				},
				"6005cfab2988cdc35ce7bdf8": {
					"nodeID": "6005cfab2988cdc35ce7bdf8",
					"type": "set",
					"data": {
						"sets": [
							{
								"variable": "res",
								"expression": {
									"type": "value",
									"value": "2",
									"depth": 0
								}
							}
						],
						"ports": [
							{
								"type": "",
								"target": null,
								"id": "6005cfab2988cdc35ce7bdf9"
							}
						]
					}
				},
				"6005cfab2988cdc35ce7bdf6": {
					"nodeID": "6005cfab2988cdc35ce7bdf6",
					"type": "block",
					"coords": [
						1246.25,
						339.24999999999994
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"6005cfab2988cdc35ce7bdf8"
						]
					}
				}
			},
			"versionID": "604fb4535e10aa001b8f200e",
			"creatorID": 55093,
			"name": "TriagePrompt",
			"modified": 1615836243
		},
		"604fb4537dbea8004948e255": {
			"_id": "604fb4537dbea8004948e255",
			"offsetX": -397,
			"offsetY": 133.6,
			"zoom": 80,
			"variables": [],
			"children": [
				"604fb4537dbea8004948e256"
			],
			"nodes": {
				"5fe9fdb855a6159ee6d997ab": {
					"nodeID": "5fe9fdb855a6159ee6d997ab",
					"type": "start",
					"coords": [
						360,
						120
					],
					"data": {
						"name": "Start",
						"color": "standard",
						"ports": [
							{
								"type": "",
								"target": "5ff3f2ddda27927c0bb381d0",
								"id": "5fe9fdbc55a6159ee6d997ac"
							}
						],
						"steps": []
					}
				},
				"5ff3f2ddda27927c0bb381d0": {
					"nodeID": "5ff3f2ddda27927c0bb381d0",
					"type": "code",
					"data": {
						"code": "questionSeries = questionnaire['feedback']",
						"ports": [
							{
								"type": "",
								"target": "5ff3f2ddda27927c0bb381cd",
								"id": "5ff3f2ddda27927c0bb381d1"
							},
							{
								"type": "fail",
								"target": null,
								"id": "5ff3f2ddda27927c0bb381d2"
							}
						]
					}
				},
				"5ff3f2ddda27927c0bb381cd": {
					"nodeID": "5ff3f2ddda27927c0bb381cd",
					"type": "flow",
					"data": {
						"diagramID": "604fb4537dbea8004948e256",
						"variableMap": null,
						"ports": [
							{
								"type": "",
								"target": "5ff3f2ddda27927c0bb381c9",
								"id": "5ff3f2ddda27927c0bb381ce"
							}
						]
					}
				},
				"5ff3f2ddda27927c0bb381c9": {
					"nodeID": "5ff3f2ddda27927c0bb381c9",
					"type": "code",
					"data": {
						"code": "questionSeries.modified = true\nquestionnaire['feedback'] = questionSeries\nquestionSeries = JSON.stringify(questionSeries)",
						"ports": [
							{
								"type": "",
								"target": null,
								"id": "5ff3f2ddda27927c0bb381ca"
							},
							{
								"type": "fail",
								"target": null,
								"id": "5ff3f2ddda27927c0bb381cb"
							}
						]
					}
				},
				"5ff3f2ddda27927c0bb381c7": {
					"nodeID": "5ff3f2ddda27927c0bb381c7",
					"type": "block",
					"coords": [
						756.875,
						66.12499999999994
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"5ff3f2ddda27927c0bb381d0"
						]
					}
				},
				"5ff3f2ddda27927c0bb381c5": {
					"nodeID": "5ff3f2ddda27927c0bb381c5",
					"type": "block",
					"coords": [
						1210.625,
						99.87499999999994
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"5ff3f2ddda27927c0bb381cd"
						]
					}
				},
				"5ff3f2ddda27927c0bb381c3": {
					"nodeID": "5ff3f2ddda27927c0bb381c3",
					"type": "block",
					"coords": [
						1633.125,
						69.87499999999994
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"5ff3f2ddda27927c0bb381c9"
						]
					}
				}
			},
			"versionID": "604fb4535e10aa001b8f200e",
			"creatorID": 55093,
			"name": "Feedback",
			"modified": 1615836243
		},
		"604fb4537dbea8004948e24f": {
			"_id": "604fb4537dbea8004948e24f",
			"offsetX": -665.5,
			"offsetY": 123.70000000000002,
			"zoom": 80,
			"variables": [],
			"children": [
				"604fb4537dbea8004948e256"
			],
			"nodes": {
				"5fe9f7a755a6159ee6d994ab": {
					"nodeID": "5fe9f7a755a6159ee6d994ab",
					"type": "start",
					"coords": [
						360,
						120
					],
					"data": {
						"name": "Start",
						"color": "standard",
						"ports": [
							{
								"type": "",
								"target": "5ff3f128073bf193e32d93cf",
								"id": "5fe9f7aa55a6159ee6d994ac"
							}
						],
						"steps": []
					}
				},
				"5ff3f128073bf193e32d93cf": {
					"nodeID": "5ff3f128073bf193e32d93cf",
					"type": "code",
					"data": {
						"code": "questionSeries = questionnaire['diagnosis']",
						"ports": [
							{
								"type": "",
								"target": "5ff3f128073bf193e32d93cc",
								"id": "5ff3f128073bf193e32d93d0"
							},
							{
								"type": "fail",
								"target": null,
								"id": "5ff3f128073bf193e32d93d1"
							}
						]
					}
				},
				"5ff3f128073bf193e32d93cc": {
					"nodeID": "5ff3f128073bf193e32d93cc",
					"type": "flow",
					"data": {
						"diagramID": "604fb4537dbea8004948e256",
						"variableMap": null,
						"ports": [
							{
								"type": "",
								"target": "5ff3f128073bf193e32d93c8",
								"id": "5ff3f128073bf193e32d93cd"
							}
						]
					}
				},
				"5ff3f128073bf193e32d93c8": {
					"nodeID": "5ff3f128073bf193e32d93c8",
					"type": "code",
					"data": {
						"code": "questionSeries.modified = true\nquestionnaire['diagnosis'] = questionSeries\nquestionSeries = JSON.stringify(questionSeries)",
						"ports": [
							{
								"type": "",
								"target": null,
								"id": "5ff3f128073bf193e32d93c9"
							},
							{
								"type": "fail",
								"target": null,
								"id": "5ff3f128073bf193e32d93ca"
							}
						]
					}
				},
				"5ff3f128073bf193e32d93c6": {
					"nodeID": "5ff3f128073bf193e32d93c6",
					"type": "block",
					"coords": [
						791.875,
						62.37499999999997
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"5ff3f128073bf193e32d93cf"
						]
					}
				},
				"5ff3f128073bf193e32d93c4": {
					"nodeID": "5ff3f128073bf193e32d93c4",
					"type": "block",
					"coords": [
						1245.625,
						96.12499999999997
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"5ff3f128073bf193e32d93cc"
						]
					}
				},
				"5ff3f128073bf193e32d93c2": {
					"nodeID": "5ff3f128073bf193e32d93c2",
					"type": "block",
					"coords": [
						1668.125,
						66.12499999999997
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"5ff3f128073bf193e32d93c8"
						]
					}
				}
			},
			"versionID": "604fb4535e10aa001b8f200e",
			"creatorID": 55093,
			"name": "New Diagnosis",
			"modified": 1615836243
		},
		"604fb4537dbea8004948e258": {
			"_id": "604fb4537dbea8004948e258",
			"offsetX": 20,
			"offsetY": 129.8,
			"zoom": 80,
			"variables": [],
			"children": [],
			"nodes": {
				"60361a2ed2edd91b9d90c21b": {
					"nodeID": "60361a2ed2edd91b9d90c21b",
					"type": "start",
					"coords": [
						360,
						120
					],
					"data": {
						"name": "Start",
						"color": "standard",
						"ports": [
							{
								"type": "",
								"target": "60361b17d2edd91b9d90c2e0",
								"id": "60361a33d2edd91b9d90c21c"
							}
						],
						"steps": []
					}
				},
				"60361b17d2edd91b9d90c2e3": {
					"nodeID": "60361b17d2edd91b9d90c2e3",
					"type": "if",
					"data": {
						"expressions": [
							{
								"type": "not",
								"value": {
									"type": "variable",
									"value": "flag",
									"depth": 1
								},
								"depth": 0
							}
						],
						"ports": [
							{
								"type": "",
								"target": null,
								"id": "60361b17d2edd91b9d90c2e4"
							},
							{
								"type": "",
								"target": null,
								"id": "60361b17d2edd91b9d90c2e5"
							}
						]
					}
				},
				"60361b17d2edd91b9d90c2e0": {
					"nodeID": "60361b17d2edd91b9d90c2e0",
					"type": "directive",
					"data": {
						"directive": "{\n  \"query\": [\"SELECT \\\"dailystatus\\\" FROM \\\"users\\\" WHERE \\\"userid\\\" = $1;\"],\n  \"params\": [\"_cognitoId\"],\n  \"to\": \"flag\"\n}",
						"ports": [
							{
								"type": "",
								"target": "60361b17d2edd91b9d90c2e3",
								"id": "60361b17d2edd91b9d90c2e1"
							}
						]
					}
				},
				"60361b17d2edd91b9d90c2de": {
					"nodeID": "60361b17d2edd91b9d90c2de",
					"type": "block",
					"coords": [
						761.25,
						92.74999999999997
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"60361b17d2edd91b9d90c2e0",
							"60361b17d2edd91b9d90c2e3"
						]
					}
				}
			},
			"versionID": "604fb4535e10aa001b8f200e",
			"creatorID": 55093,
			"name": "Update Reminders",
			"modified": 1615836243
		},
		"604fb4537dbea8004948e247": {
			"_id": "604fb4537dbea8004948e247",
			"name": "End Session",
			"offsetX": -68.77511125051242,
			"offsetY": 138.84166133641043,
			"zoom": 80,
			"variables": [],
			"nodes": {
				"5f9f562f11b31520c2a2a6e7": {
					"nodeID": "5f9f562f11b31520c2a2a6e7",
					"type": "start",
					"coords": [
						360,
						120
					],
					"data": {
						"name": "Start",
						"color": "standard",
						"ports": [
							{
								"type": "",
								"target": "5ff7779ae7b840f3a1b8fbcc",
								"id": "5fde6fe15bc1c56319fad3b2"
							}
						],
						"steps": []
					}
				},
				"5f9f562f11b31520c2a2a6e8": {
					"nodeID": "5f9f562f11b31520c2a2a6e8",
					"type": "speak",
					"data": {
						"randomize": false,
						"dialogs": [
							{
								"voice": "Alexa",
								"content": "Okay, thank you for speaking with me! Remember to follow CDC guidelines for COVID-19 by avoiding crowds, wearing a mask, and standing at least six feet away from others. Stay safe and talk to you later!"
							}
						],
						"ports": [
							{
								"type": "",
								"target": "5f9f562f11b31520c2a2a6ea",
								"id": "5fde6fe15bc1c56319fad3b3"
							}
						]
					}
				},
				"5f9f562f11b31520c2a2a6e9": {
					"nodeID": "5f9f562f11b31520c2a2a6e9",
					"type": "block",
					"coords": [
						805.9688890631405,
						120.94792332948695
					],
					"data": {
						"name": "Exit",
						"color": "red",
						"steps": [
							"5ff7779ae7b840f3a1b8fbcc",
							"5f9f562f11b31520c2a2a6e8",
							"5f9f562f11b31520c2a2a6ea"
						]
					}
				},
				"5f9f562f11b31520c2a2a6ea": {
					"nodeID": "5f9f562f11b31520c2a2a6ea",
					"type": "exit",
					"data": {
						"ports": [
							{
								"type": "",
								"target": null,
								"id": "5fde6fe15bc1c56319fad3b4"
							}
						]
					}
				},
				"5ff7779ae7b840f3a1b8fbcc": {
					"nodeID": "5ff7779ae7b840f3a1b8fbcc",
					"type": "code",
					"data": {
						"code": "mFlag = false",
						"ports": [
							{
								"type": "",
								"target": "5f9f562f11b31520c2a2a6e8",
								"id": "5ff7779ae7b840f3a1b8fbcf"
							},
							{
								"type": "fail",
								"target": "5f9f562f11b31520c2a2a6e8",
								"id": "5ff7779ae7b840f3a1b8fbd0"
							}
						]
					}
				}
			},
			"children": [],
			"versionID": "604fb4535e10aa001b8f200e",
			"creatorID": 55093,
			"modified": 1615836243
		},
		"604fb4537dbea8004948e25b": {
			"_id": "604fb4537dbea8004948e25b",
			"offsetX": -770,
			"offsetY": 116.20000000000002,
			"zoom": 80,
			"variables": [],
			"children": [
				"604fb4537dbea8004948e256"
			],
			"nodes": {
				"5fe9f5b855a6159ee6d9934f": {
					"nodeID": "5fe9f5b855a6159ee6d9934f",
					"type": "start",
					"coords": [
						360,
						120
					],
					"data": {
						"name": "Start",
						"color": "standard",
						"ports": [
							{
								"type": "",
								"target": "5ff3c65b073bf193e32d6e82",
								"id": "5fe9f5ba55a6159ee6d99350"
							}
						],
						"steps": []
					}
				},
				"5ff3c65b073bf193e32d6e82": {
					"nodeID": "5ff3c65b073bf193e32d6e82",
					"type": "code",
					"data": {
						"code": "questionSeries = questionnaire['symptoms']",
						"ports": [
							{
								"type": "",
								"target": "5ff3c69d073bf193e32d6fd8",
								"id": "5ff3c65b073bf193e32d6e84"
							},
							{
								"type": "fail",
								"target": null,
								"id": "5ff3c65b073bf193e32d6e85"
							}
						]
					}
				},
				"5ff3c65b073bf193e32d6e86": {
					"nodeID": "5ff3c65b073bf193e32d6e86",
					"type": "block",
					"coords": [
						868.75,
						42.99999999999997
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"5ff3c65b073bf193e32d6e82"
						]
					}
				},
				"5ff3c69d073bf193e32d6fd8": {
					"nodeID": "5ff3c69d073bf193e32d6fd8",
					"type": "flow",
					"data": {
						"diagramID": "604fb4537dbea8004948e256",
						"variableMap": null,
						"ports": [
							{
								"type": "",
								"target": "5ff3c6bb073bf193e32d6fe3",
								"id": "5ff3c69d073bf193e32d6fda"
							}
						]
					}
				},
				"5ff3c69d073bf193e32d6fdb": {
					"nodeID": "5ff3c69d073bf193e32d6fdb",
					"type": "block",
					"coords": [
						1322.5,
						76.74999999999997
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"5ff3c69d073bf193e32d6fd8"
						]
					}
				},
				"5ff3c6bb073bf193e32d6fe3": {
					"nodeID": "5ff3c6bb073bf193e32d6fe3",
					"type": "code",
					"data": {
						"code": "questionSeries.modified = true\nquestionnaire['symptoms'] = questionSeries\nquestionSeries = JSON.stringify(questionSeries)",
						"ports": [
							{
								"type": "",
								"target": null,
								"id": "5ff3c6bb073bf193e32d6fe5"
							},
							{
								"type": "fail",
								"target": null,
								"id": "5ff3c6bb073bf193e32d6fe6"
							}
						]
					}
				},
				"5ff3c6bb073bf193e32d6fe7": {
					"nodeID": "5ff3c6bb073bf193e32d6fe7",
					"type": "block",
					"coords": [
						1745,
						46.74999999999997
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"5ff3c6bb073bf193e32d6fe3"
						]
					}
				}
			},
			"versionID": "604fb4535e10aa001b8f200e",
			"creatorID": 55093,
			"name": "Symptom Check",
			"modified": 1615836243
		},
		"604fb4537dbea8004948e24d": {
			"_id": "604fb4537dbea8004948e24d",
			"offsetX": 48,
			"offsetY": 114.80000000000004,
			"zoom": 80,
			"variables": [],
			"children": [],
			"nodes": {
				"5fe9f2b055a6159ee6d991a6": {
					"nodeID": "5fe9f2b055a6159ee6d991a6",
					"type": "start",
					"coords": [
						360,
						120
					],
					"data": {
						"name": "Start",
						"color": "standard",
						"ports": [
							{
								"type": "",
								"target": "5ff8e592a13f5c2464ab84c2",
								"id": "5fe9f2b255a6159ee6d991a7"
							}
						],
						"steps": []
					}
				},
				"5fe9f2b855a6159ee6d991aa": {
					"nodeID": "5fe9f2b855a6159ee6d991aa",
					"type": "exit",
					"data": {
						"ports": []
					}
				},
				"5fe9f2b855a6159ee6d991ac": {
					"nodeID": "5fe9f2b855a6159ee6d991ac",
					"type": "block",
					"coords": [
						1121.25,
						149.74999999999994
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"5fe9f2b855a6159ee6d991aa"
						]
					}
				},
				"5ff8e592a13f5c2464ab84c2": {
					"nodeID": "5ff8e592a13f5c2464ab84c2",
					"type": "speak",
					"data": {
						"randomize": false,
						"dialogs": [
							{
								"voice": "Alexa",
								"content": "That's okay. If you would like to speak to me again, say, \"Alexa, open ARIC Study.\""
							}
						],
						"ports": [
							{
								"type": "",
								"target": "5fe9f2b855a6159ee6d991aa",
								"id": "5ff8e592a13f5c2464ab84c4"
							}
						]
					}
				},
				"5ff8e592a13f5c2464ab84c5": {
					"nodeID": "5ff8e592a13f5c2464ab84c5",
					"type": "block",
					"coords": [
						727.5,
						123.99999999999994
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"5ff8e592a13f5c2464ab84c2"
						]
					}
				}
			},
			"versionID": "604fb4535e10aa001b8f200e",
			"creatorID": 55093,
			"name": "End Entry",
			"modified": 1615836243
		},
		"604fb4537dbea8004948e248": {
			"_id": "604fb4537dbea8004948e248",
			"offsetX": 204.20752667597145,
			"offsetY": 64.76149553497314,
			"zoom": 49.601176984471586,
			"variables": [],
			"children": [],
			"nodes": {
				"5fe9ed1055a6159ee6d98f98": {
					"nodeID": "5fe9ed1055a6159ee6d98f98",
					"type": "start",
					"coords": [
						360,
						120
					],
					"data": {
						"name": "Start",
						"color": "standard",
						"ports": [
							{
								"type": "",
								"target": "60147996f06770d15ed87eb4",
								"id": "5fe9ed1155a6159ee6d98f99"
							}
						],
						"steps": []
					}
				},
				"60147952f06770d15ed87eab": {
					"nodeID": "60147952f06770d15ed87eab",
					"type": "block",
					"coords": [
						750,
						121.74999999999997
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"60147996f06770d15ed87eb4"
						]
					}
				},
				"60147996f06770d15ed87eb4": {
					"nodeID": "60147996f06770d15ed87eb4",
					"type": "user_info",
					"data": {
						"infos": [
							{
								"type": "alexa::person_id:read",
								"mapTo": "skillPer",
								"product": null
							}
						],
						"ports": [
							{
								"type": "",
								"target": "601479c9f06770d15ed87ebe",
								"id": "60147996f06770d15ed87eb7"
							},
							{
								"type": "fail",
								"target": "60147a03f06770d15ed87ee4",
								"id": "60147996f06770d15ed87eb8"
							}
						]
					}
				},
				"601479c9f06770d15ed87ebe": {
					"nodeID": "601479c9f06770d15ed87ebe",
					"type": "user_info",
					"data": {
						"infos": [
							{
								"type": "alexa::alerts:reminders:skill:readwrite",
								"mapTo": null,
								"product": null
							}
						],
						"ports": [
							{
								"type": "",
								"target": "60147a4bf06770d15ed881e2",
								"id": "601479c9f06770d15ed87ec0"
							},
							{
								"type": "fail",
								"target": "60158f3fef0b3a1fd9566d09",
								"id": "601479c9f06770d15ed87ec1"
							}
						]
					}
				},
				"601479c9f06770d15ed87ec2": {
					"nodeID": "601479c9f06770d15ed87ec2",
					"type": "block",
					"coords": [
						1236.25,
						129.25
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"601479c9f06770d15ed87ebe"
						]
					}
				},
				"60147a03f06770d15ed87ee4": {
					"nodeID": "60147a03f06770d15ed87ee4",
					"type": "user_info",
					"data": {
						"infos": [
							{
								"type": "alexa::alerts:reminders:skill:readwrite",
								"mapTo": null,
								"product": null
							}
						],
						"ports": [
							{
								"type": "",
								"target": "60159159ef0b3a1fd956700a",
								"id": "60147a03f06770d15ed87ee5"
							},
							{
								"type": "fail",
								"target": "6015925bef0b3a1fd9567035",
								"id": "60147a03f06770d15ed87ee6"
							}
						]
					}
				},
				"60147a03f06770d15ed87ee2": {
					"nodeID": "60147a03f06770d15ed87ee2",
					"type": "block",
					"coords": [
						1230.8086427899245,
						669.3796158308943
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"60147a03f06770d15ed87ee4"
						]
					}
				},
				"60147a4bf06770d15ed881e2": {
					"nodeID": "60147a4bf06770d15ed881e2",
					"type": "directive",
					"data": {
						"directive": "{\n  \"query\": \"UPDATE \\\"permission\\\" SET skillper='t', reminders='t' WHERE userid=$1\",\n  \"params\": [\"_cognitoId\"]\n}",
						"ports": [
							{
								"type": "",
								"target": null,
								"id": "60147a4bf06770d15ed881e3"
							}
						]
					}
				},
				"60147a4bf06770d15ed881e0": {
					"nodeID": "60147a4bf06770d15ed881e0",
					"type": "block",
					"coords": [
						1642.5,
						187.8818184416699
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"60147a4bf06770d15ed881e2"
						]
					}
				},
				"60158f3fef0b3a1fd9566d0c": {
					"nodeID": "60158f3fef0b3a1fd9566d0c",
					"type": "directive",
					"data": {
						"directive": "{\n  \"query\": \"UPDATE \\\"permission\\\" SET skillper='t', reminders='f', reminderss='f' WHERE userid=$1\",\n  \"params\": [\"_cognitoId\"]\n}",
						"ports": [
							{
								"type": "",
								"target": null,
								"id": "60158f3fef0b3a1fd9566d0d"
							}
						]
					}
				},
				"60158f3fef0b3a1fd9566d09": {
					"nodeID": "60158f3fef0b3a1fd9566d09",
					"type": "speak",
					"data": {
						"randomize": false,
						"dialogs": [
							{
								"voice": "Alexa",
								"content": "You need to enable reminders. I have sent a card to your alexa app to help you turn it on. "
							}
						],
						"ports": [
							{
								"type": "",
								"target": "60158f47ef0b3a1fd9566d16",
								"id": "60158f3fef0b3a1fd9566d0a"
							}
						]
					}
				},
				"60158f3fef0b3a1fd9566d07": {
					"nodeID": "60158f3fef0b3a1fd9566d07",
					"type": "block",
					"coords": [
						1643.216367321067,
						349.0545213919492
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"60158f3fef0b3a1fd9566d09",
							"60158f47ef0b3a1fd9566d16",
							"60158f3fef0b3a1fd9566d0c"
						]
					}
				},
				"60158f47ef0b3a1fd9566d16": {
					"nodeID": "60158f47ef0b3a1fd9566d16",
					"type": "permission",
					"data": {
						"permissions": [
							"alexa::alerts:reminders:skill:readwrite"
						],
						"ports": [
							{
								"type": "",
								"target": "60158f3fef0b3a1fd9566d0c",
								"id": "60158f47ef0b3a1fd9566d19"
							}
						]
					}
				},
				"60159159ef0b3a1fd9567012": {
					"nodeID": "60159159ef0b3a1fd9567012",
					"type": "directive",
					"data": {
						"directive": "{\n  \"query\": \"UPDATE \\\"permission\\\" SET skillper='f', reminders='t' WHERE userid=$1\",\n  \"params\": [\"_cognitoId\"]\n}",
						"ports": [
							{
								"type": "",
								"target": null,
								"id": "60159159ef0b3a1fd9567013"
							}
						]
					}
				},
				"60159159ef0b3a1fd956700f": {
					"nodeID": "60159159ef0b3a1fd956700f",
					"type": "permission",
					"data": {
						"permissions": [
							"alexa::person_id:read"
						],
						"ports": [
							{
								"type": "",
								"target": "60159159ef0b3a1fd9567012",
								"id": "60159159ef0b3a1fd9567010"
							}
						]
					}
				},
				"60159159ef0b3a1fd956700c": {
					"nodeID": "60159159ef0b3a1fd956700c",
					"type": "speak",
					"data": {
						"randomize": false,
						"dialogs": [
							{
								"voice": "Alexa",
								"content": "You need to enable skill personalization. I have sent a card to your alexa app to help you turn it on. "
							}
						],
						"ports": [
							{
								"type": "",
								"target": "60159159ef0b3a1fd956700f",
								"id": "60159159ef0b3a1fd956700d"
							}
						]
					}
				},
				"60159159ef0b3a1fd956700a": {
					"nodeID": "60159159ef0b3a1fd956700a",
					"type": "block",
					"coords": [
						1643.216367321068,
						649.8293896964237
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"60159159ef0b3a1fd956700c",
							"60159159ef0b3a1fd956700f",
							"60159159ef0b3a1fd9567012"
						]
					}
				},
				"6015925bef0b3a1fd956703b": {
					"nodeID": "6015925bef0b3a1fd956703b",
					"type": "directive",
					"data": {
						"directive": "{\n  \"query\": \"UPDATE \\\"permission\\\" SET skillper='f', reminders='f', reminderss='f' WHERE userid=$1\",\n  \"params\": [\"_cognitoId\"]\n}",
						"ports": [
							{
								"type": "",
								"target": null,
								"id": "6015925bef0b3a1fd956703c"
							}
						]
					}
				},
				"6015925bef0b3a1fd9567038": {
					"nodeID": "6015925bef0b3a1fd9567038",
					"type": "permission",
					"data": {
						"permissions": [
							"alexa::alerts:reminders:skill:readwrite",
							"alexa::person_id:read"
						],
						"ports": [
							{
								"type": "",
								"target": "6015925bef0b3a1fd956703b",
								"id": "6015925bef0b3a1fd9567039"
							}
						]
					}
				},
				"6015925bef0b3a1fd9567035": {
					"nodeID": "6015925bef0b3a1fd9567035",
					"type": "speak",
					"data": {
						"randomize": false,
						"dialogs": [
							{
								"voice": "Alexa",
								"content": "You need to enable reminders and skill personalization. I have sent a card to your alexa app to help you turn it on. "
							}
						],
						"ports": [
							{
								"type": "",
								"target": "6015925bef0b3a1fd9567038",
								"id": "6015925bef0b3a1fd9567036"
							}
						]
					}
				},
				"6015925bef0b3a1fd9567033": {
					"nodeID": "6015925bef0b3a1fd9567033",
					"type": "block",
					"coords": [
						1641.5905572221252,
						974.9914094850451
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"6015925bef0b3a1fd9567035",
							"6015925bef0b3a1fd9567038",
							"6015925bef0b3a1fd956703b"
						]
					}
				}
			},
			"versionID": "604fb4535e10aa001b8f200e",
			"creatorID": 55093,
			"name": "Permissions",
			"modified": 1615836243
		},
		"604fb4537dbea8004948e24a": {
			"_id": "604fb4537dbea8004948e24a",
			"offsetX": -738,
			"offsetY": 80.6,
			"zoom": 80,
			"variables": [],
			"children": [
				"604fb4537dbea8004948e256"
			],
			"nodes": {
				"5fe9f75455a6159ee6d9940f": {
					"nodeID": "5fe9f75455a6159ee6d9940f",
					"type": "start",
					"coords": [
						360,
						120
					],
					"data": {
						"name": "Start",
						"color": "standard",
						"ports": [
							{
								"type": "",
								"target": "5ff3f194073bf193e32d93f8",
								"id": "5fe9f75755a6159ee6d99410"
							}
						],
						"steps": []
					}
				},
				"5ff3f194073bf193e32d93f8": {
					"nodeID": "5ff3f194073bf193e32d93f8",
					"type": "code",
					"data": {
						"code": "questionSeries = questionnaire['health']",
						"ports": [
							{
								"type": "",
								"target": "5ff3f194073bf193e32d93f5",
								"id": "5ff3f194073bf193e32d93f9"
							},
							{
								"type": "fail",
								"target": null,
								"id": "5ff3f194073bf193e32d93fa"
							}
						]
					}
				},
				"5ff3f194073bf193e32d93f5": {
					"nodeID": "5ff3f194073bf193e32d93f5",
					"type": "flow",
					"data": {
						"diagramID": "604fb4537dbea8004948e256",
						"variableMap": null,
						"ports": [
							{
								"type": "",
								"target": "5ff3f194073bf193e32d93f1",
								"id": "5ff3f194073bf193e32d93f6"
							}
						]
					}
				},
				"5ff3f194073bf193e32d93f1": {
					"nodeID": "5ff3f194073bf193e32d93f1",
					"type": "code",
					"data": {
						"code": "questionSeries.modified = true\nquestionnaire['health'] = questionSeries\nquestionSeries = JSON.stringify(questionSeries)",
						"ports": [
							{
								"type": "",
								"target": null,
								"id": "5ff3f194073bf193e32d93f2"
							},
							{
								"type": "fail",
								"target": null,
								"id": "5ff3f194073bf193e32d93f3"
							}
						]
					}
				},
				"5ff3f194073bf193e32d93ef": {
					"nodeID": "5ff3f194073bf193e32d93ef",
					"type": "block",
					"coords": [
						751.875,
						81.12499999999997
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"5ff3f194073bf193e32d93f8"
						]
					}
				},
				"5ff3f194073bf193e32d93ed": {
					"nodeID": "5ff3f194073bf193e32d93ed",
					"type": "block",
					"coords": [
						1205.625,
						114.875
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"5ff3f194073bf193e32d93f5"
						]
					}
				},
				"5ff3f194073bf193e32d93eb": {
					"nodeID": "5ff3f194073bf193e32d93eb",
					"type": "block",
					"coords": [
						1628.125,
						84.87499999999997
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"5ff3f194073bf193e32d93f1"
						]
					}
				}
			},
			"versionID": "604fb4535e10aa001b8f200e",
			"creatorID": 55093,
			"name": "Health Check",
			"modified": 1615836243
		},
		"604fb4537dbea8004948e257": {
			"_id": "604fb4537dbea8004948e257",
			"offsetX": -737.8576338802941,
			"offsetY": -89.4701949210428,
			"zoom": 46.70809203414218,
			"variables": [],
			"children": [
				"604fb4537dbea8004948e250"
			],
			"nodes": {
				"5ff8f00ca13f5c2464ab8848": {
					"nodeID": "5ff8f00ca13f5c2464ab8848",
					"type": "start",
					"coords": [
						-757.8616426891631,
						393.92992076552747
					],
					"data": {
						"name": "Start",
						"color": "standard",
						"ports": [
							{
								"type": "",
								"target": "603607239ebf9102df39f583",
								"id": "5ff8f037a13f5c2464ab8849"
							}
						],
						"steps": []
					}
				},
				"5ff8f03ba13f5c2464ab887e": {
					"nodeID": "5ff8f03ba13f5c2464ab887e",
					"type": "interaction",
					"data": {
						"name": "Choice",
						"else": {
							"type": "reprompt",
							"randomize": false,
							"reprompts": [
								{
									"voice": "Alexa",
									"content": "Hmm... I didn't understand that. I was looking for a day of the week."
								},
								{
									"voice": "Alexa",
									"content": "Hmm. I still did not get that. If you would like to hear my question again, please say, \"Could you repeat that?\" Otherwise, please answer with a day of the week."
								}
							]
						},
						"choices": [
							{
								"intent": "vfgg3ylr",
								"mappings": []
							}
						],
						"reprompt": null,
						"chips": null,
						"ports": [
							{
								"type": "",
								"target": null,
								"id": "5ff8f03ba13f5c2464ab887f"
							},
							{
								"type": 1,
								"target": "6029b832df1a1c3ef52a31fc",
								"id": "5ff8f03ba13f5c2464ab8880"
							}
						]
					}
				},
				"5ff8f03ba13f5c2464ab887b": {
					"nodeID": "5ff8f03ba13f5c2464ab887b",
					"type": "speak",
					"data": {
						"randomize": false,
						"dialogs": [
							{
								"voice": "Alexa",
								"content": "What day of the week would you like to do your appointment?"
							}
						],
						"ports": [
							{
								"type": "",
								"target": "5ff8f03ba13f5c2464ab887e",
								"id": "5ff8f03ba13f5c2464ab887c"
							}
						]
					}
				},
				"5ff8f03ba13f5c2464ab8876": {
					"nodeID": "5ff8f03ba13f5c2464ab8876",
					"type": "interaction",
					"data": {
						"name": "Choice",
						"else": {
							"type": "reprompt",
							"randomize": false,
							"reprompts": [
								{
									"voice": "Alexa",
									"content": "Hmm... I didn't understand that. I was looking for an answer of yes or no."
								},
								{
									"voice": "Alexa",
									"content": "Hmm. I still did not get that. If you would like to hear my question again, please say, \"Could you repeat that?\" Otherwise, please answer with yes or no."
								}
							]
						},
						"choices": [
							{
								"intent": "AMAZON.YesIntent",
								"mappings": []
							},
							{
								"intent": "AMAZON.NoIntent",
								"mappings": []
							}
						],
						"reprompt": null,
						"chips": null,
						"ports": [
							{
								"type": "",
								"target": null,
								"id": "5ff8f03ba13f5c2464ab8877"
							},
							{
								"type": "",
								"target": "5ff8f03ba13f5c2464ab887b",
								"id": "5ff8f03ba13f5c2464ab8878"
							},
							{
								"type": 2,
								"target": "6029bf08df1a1c3ef52a33c4",
								"id": "5ff8f03ba13f5c2464ab8879"
							}
						]
					}
				},
				"5ff8f03ba13f5c2464ab8873": {
					"nodeID": "5ff8f03ba13f5c2464ab8873",
					"type": "speak",
					"data": {
						"randomize": false,
						"dialogs": [
							{
								"voice": "Alexa",
								"content": "Hey! Would you like to change the day of your appointment?"
							}
						],
						"ports": [
							{
								"type": "",
								"target": "5ff8f03ba13f5c2464ab8876",
								"id": "5ff8f03ba13f5c2464ab8874"
							}
						]
					}
				},
				"5ff8f03ba13f5c2464ab8866": {
					"nodeID": "5ff8f03ba13f5c2464ab8866",
					"type": "interaction",
					"data": {
						"name": "Choice",
						"else": {
							"type": "reprompt",
							"randomize": false,
							"reprompts": [
								{
									"voice": "Alexa",
									"content": "Hmm... I didn't understand that. I was looking for an answer of yes or no."
								},
								{
									"voice": "Alexa",
									"content": "Hmm. I still did not get that. If you would like to hear my question again, please say, \"Could you repeat that?\" Otherwise, please answer with yes or no."
								}
							]
						},
						"choices": [
							{
								"intent": "AMAZON.YesIntent",
								"mappings": []
							},
							{
								"intent": "AMAZON.NoIntent",
								"mappings": []
							}
						],
						"reprompt": null,
						"chips": null,
						"ports": [
							{
								"type": "",
								"target": null,
								"id": "5ff8f03ba13f5c2464ab8867"
							},
							{
								"type": "",
								"target": "5ff8f03ba13f5c2464ab885c",
								"id": "5ff8f03ba13f5c2464ab8868"
							},
							{
								"type": 2,
								"target": "6029bfd8df1a1c3ef52a343d",
								"id": "5ff8f03ba13f5c2464ab8869"
							}
						]
					}
				},
				"5ff8f03ba13f5c2464ab8863": {
					"nodeID": "5ff8f03ba13f5c2464ab8863",
					"type": "speak",
					"data": {
						"randomize": false,
						"dialogs": [
							{
								"voice": "Alexa",
								"content": "Would you like to change the time of your appointment?"
							}
						],
						"ports": [
							{
								"type": "",
								"target": "5ff8f03ba13f5c2464ab8866",
								"id": "5ff8f03ba13f5c2464ab8864"
							}
						]
					}
				},
				"5ff8f03ba13f5c2464ab885c": {
					"nodeID": "5ff8f03ba13f5c2464ab885c",
					"type": "speak",
					"data": {
						"randomize": false,
						"dialogs": [
							{
								"voice": "Alexa",
								"content": "What time would you like to change your appointment to?"
							}
						],
						"ports": [
							{
								"type": "",
								"target": "6029baecdf1a1c3ef52a338d",
								"id": "5ff8f03ba13f5c2464ab885d"
							}
						]
					}
				},
				"5ff8f03ba13f5c2464ab8859": {
					"nodeID": "5ff8f03ba13f5c2464ab8859",
					"type": "speak",
					"data": {
						"randomize": false,
						"dialogs": [
							{
								"voice": "Alexa",
								"content": "Sounds good. I'll talk to you tomorrow at {{[res].res}}. In the meantime, please remember to follow the CDC guidelines to protect yourself and others from COVID-19.  These include:  washing your hands often, wearing a mask, avoiding crowds, and staying at least six feet away from others who don’t live with you.  Please take good care of yourself and have a great day!"
							}
						],
						"ports": [
							{
								"type": "",
								"target": "5ff8f0e6a13f5c2464ab8a66",
								"id": "5ff8f03ba13f5c2464ab885a"
							}
						]
					}
				},
				"5ff8f03ba13f5c2464ab8857": {
					"nodeID": "5ff8f03ba13f5c2464ab8857",
					"type": "block",
					"coords": [
						931.5373467223492,
						20.277416165722087
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"5ff8f03ba13f5c2464ab887b",
							"5ff8f03ba13f5c2464ab887e"
						]
					}
				},
				"5ff8f03ba13f5c2464ab8855": {
					"nodeID": "5ff8f03ba13f5c2464ab8855",
					"type": "block",
					"coords": [
						523.7911242485854,
						14.191651651188948
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"5ff8f03ba13f5c2464ab8873",
							"5ff8f03ba13f5c2464ab8876"
						]
					}
				},
				"5ff8f03ba13f5c2464ab8851": {
					"nodeID": "5ff8f03ba13f5c2464ab8851",
					"type": "block",
					"coords": [
						519.1247108513594,
						638.4734497796485
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"5ff8f03ba13f5c2464ab8863",
							"5ff8f03ba13f5c2464ab8866"
						]
					}
				},
				"5ff8f03ba13f5c2464ab884f": {
					"nodeID": "5ff8f03ba13f5c2464ab884f",
					"type": "block",
					"coords": [
						939.5982764277842,
						648.9623680948193
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"5ff8f03ba13f5c2464ab885c",
							"6029baecdf1a1c3ef52a338d"
						]
					}
				},
				"5ff8f03ba13f5c2464ab884d": {
					"nodeID": "5ff8f03ba13f5c2464ab884d",
					"type": "block",
					"coords": [
						3672.7155927974895,
						662.0137251723907
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"5ff8f03ba13f5c2464ab8859"
						]
					}
				},
				"5ff8f0e6a13f5c2464ab8a66": {
					"nodeID": "5ff8f0e6a13f5c2464ab8a66",
					"type": "exit",
					"data": {
						"ports": []
					}
				},
				"5ff8f0e6a13f5c2464ab8a68": {
					"nodeID": "5ff8f0e6a13f5c2464ab8a68",
					"type": "block",
					"coords": [
						4100.144694561812,
						807.4499858730699
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"5ff8f0e6a13f5c2464ab8a66"
						]
					}
				},
				"6029b726df1a1c3ef52a3180": {
					"nodeID": "6029b726df1a1c3ef52a3180",
					"type": "directive",
					"data": {
						"directive": "{\n  \"query\": \"UPDATE \\\"users\\\" SET \\\"checkinday\\\" = $2 WHERE \\\"userid\\\" = $1\",\n  \"params\": [\"_cognitoId\", \"_resB\"]\n}",
						"ports": [
							{
								"type": "",
								"target": "603607b19ebf9102df39f590",
								"id": "6029b726df1a1c3ef52a3183"
							}
						]
					}
				},
				"6029b738df1a1c3ef52a3186": {
					"nodeID": "6029b738df1a1c3ef52a3186",
					"type": "block",
					"coords": [
						1392.2139306211977,
						-147.21095491984838
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"6029b832df1a1c3ef52a31fc",
							"6029b726df1a1c3ef52a3180",
							"603607b19ebf9102df39f590"
						]
					}
				},
				"6029b832df1a1c3ef52a31fc": {
					"nodeID": "6029b832df1a1c3ef52a31fc",
					"type": "code",
					"data": {
						"code": "resB = weekday;\nresB == \"Monday\"\n  ? (resB = \"M\")\n  : resB == \"Tuesday\"\n  ? (resB = \"T\")\n  : resB == \"Wednesday\"\n  ? (resB = \"W\")\n  : resB == \"Thursday\"\n  ? (resB = \"Th\")\n  : resB == \"Friday\"\n  ? (resB = \"F\")\n  : resB == \"Saturday\"\n  ? (resB = \"Sa\")\n  : resB == \"Sunday\"\n  ? (resB = \"Su\")\n  : null;",
						"ports": [
							{
								"type": "",
								"target": "6029b726df1a1c3ef52a3180",
								"id": "6029b832df1a1c3ef52a31ff"
							},
							{
								"type": "fail",
								"target": "6029b726df1a1c3ef52a3180",
								"id": "6029b832df1a1c3ef52a3200"
							}
						]
					}
				},
				"6029b9dcdf1a1c3ef52a3278": {
					"nodeID": "6029b9dcdf1a1c3ef52a3278",
					"type": "directive",
					"data": {
						"directive": "{\n  \"query\": \"UPDATE \\\"users\\\" SET \\\"dcheckintime\\\" = $2 WHERE \\\"userid\\\" = $1\",\n  \"params\": [\"_cognitoId\", \"_res\"]\n}",
						"ports": [
							{
								"type": "",
								"target": "60499c94b22cd43ae29d181a",
								"id": "6029b9dcdf1a1c3ef52a3279"
							}
						]
					}
				},
				"6029b9dcdf1a1c3ef52a3272": {
					"nodeID": "6029b9dcdf1a1c3ef52a3272",
					"type": "block",
					"coords": [
						1879.721996056736,
						725.5639357370432
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"6029ba23df1a1c3ef52a3284",
							"6029b9dcdf1a1c3ef52a3278"
						]
					}
				},
				"6029ba23df1a1c3ef52a3284": {
					"nodeID": "6029ba23df1a1c3ef52a3284",
					"type": "code",
					"data": {
						"code": "res = res + \":00 PM\"",
						"ports": [
							{
								"type": "",
								"target": "6029b9dcdf1a1c3ef52a3278",
								"id": "6029ba23df1a1c3ef52a3287"
							},
							{
								"type": "fail",
								"target": "6029b9dcdf1a1c3ef52a3278",
								"id": "6029ba23df1a1c3ef52a3288"
							}
						]
					}
				},
				"6029baecdf1a1c3ef52a3396": {
					"nodeID": "6029baecdf1a1c3ef52a3396",
					"type": "set",
					"data": {
						"sets": [
							{
								"variable": "res",
								"expression": {
									"type": "variable",
									"value": "time",
									"depth": 0
								}
							}
						],
						"ports": [
							{
								"type": "",
								"target": "6029b9dcdf1a1c3ef52a3278",
								"id": "6029baecdf1a1c3ef52a3397"
							}
						]
					}
				},
				"6029baecdf1a1c3ef52a3393": {
					"nodeID": "6029baecdf1a1c3ef52a3393",
					"type": "set",
					"data": {
						"sets": [
							{
								"variable": "res",
								"expression": {
									"type": "value",
									"value": "11:00",
									"depth": 0
								}
							}
						],
						"ports": [
							{
								"type": "",
								"target": "6029b9dcdf1a1c3ef52a3278",
								"id": "6029baecdf1a1c3ef52a3394"
							}
						]
					}
				},
				"6029baecdf1a1c3ef52a338d": {
					"nodeID": "6029baecdf1a1c3ef52a338d",
					"type": "interaction",
					"data": {
						"name": "Choice",
						"else": {
							"type": "reprompt",
							"randomize": false,
							"reprompts": [
								{
									"voice": "Alexa",
									"content": "I'm sorry, I was looking for a time. What time would you like to change your appointment to?"
								},
								{
									"voice": "Alexa",
									"content": "Hmm, I didn't get that. What time would you like to change your appointment to?"
								},
								{
									"voice": "Alexa",
									"content": "I'm sorry, I was looking for a time. What time would you like to change your appointment to?"
								}
							]
						},
						"choices": [
							{
								"intent": "2ea53y8u",
								"mappings": []
							},
							{
								"intent": "9khb3y56",
								"mappings": []
							},
							{
								"intent": "wgcl30ta",
								"mappings": []
							}
						],
						"reprompt": null,
						"chips": null,
						"ports": [
							{
								"type": "",
								"target": null,
								"id": "6029baecdf1a1c3ef52a338e"
							},
							{
								"type": "",
								"target": "6029baecdf1a1c3ef52a3396",
								"id": "6029baecdf1a1c3ef52a338f"
							},
							{
								"type": 2,
								"target": "6029baecdf1a1c3ef52a3393",
								"id": "6029baecdf1a1c3ef52a3390"
							},
							{
								"type": 3,
								"target": "6029baecdf1a1c3ef52a338a",
								"id": "6029baecdf1a1c3ef52a3391"
							}
						]
					}
				},
				"6029baecdf1a1c3ef52a338a": {
					"nodeID": "6029baecdf1a1c3ef52a338a",
					"type": "set",
					"data": {
						"sets": [
							{
								"variable": "res",
								"expression": {
									"type": "variable",
									"value": "numbertype",
									"depth": 0
								}
							}
						],
						"ports": [
							{
								"type": "",
								"target": "6029ba23df1a1c3ef52a3284",
								"id": "6029baecdf1a1c3ef52a338b"
							}
						]
					}
				},
				"6029baecdf1a1c3ef52a3388": {
					"nodeID": "6029baecdf1a1c3ef52a3388",
					"type": "block",
					"coords": [
						1414.307809527967,
						654.8970435486851
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"6029baecdf1a1c3ef52a3396"
						]
					}
				},
				"6029baecdf1a1c3ef52a3386": {
					"nodeID": "6029baecdf1a1c3ef52a3386",
					"type": "block",
					"coords": [
						1415.5468442912654,
						787.1204923941453
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"6029baecdf1a1c3ef52a3393"
						]
					}
				},
				"6029baecdf1a1c3ef52a3382": {
					"nodeID": "6029baecdf1a1c3ef52a3382",
					"type": "block",
					"coords": [
						1417.4035811586753,
						921.1606811951141
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"6029baecdf1a1c3ef52a338a"
						]
					}
				},
				"6029bf08df1a1c3ef52a33c4": {
					"nodeID": "6029bf08df1a1c3ef52a33c4",
					"type": "directive",
					"data": {
						"directive": "{\n  \"query\": [\"SELECT \\\"checkinday\\\" FROM \\\"users\\\" WHERE \\\"userid\\\" = $1\"],\n  \"params\": [\"_cognitoId\"],\n  \"to\": \"resB\"\n}",
						"ports": [
							{
								"type": "",
								"target": "602c0efd700a1b5e325f085e",
								"id": "6029bf08df1a1c3ef52a33c6"
							}
						]
					}
				},
				"6029bf08df1a1c3ef52a33c7": {
					"nodeID": "6029bf08df1a1c3ef52a33c7",
					"type": "block",
					"coords": [
						3262.909106337846,
						246.778558377229
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"6049a67ad008e0b9ee84961b",
							"6049a045d008e0b9ee8495dc"
						]
					}
				},
				"6029bf63df1a1c3ef52a33fc": {
					"nodeID": "6029bf63df1a1c3ef52a33fc",
					"type": "interaction",
					"data": {
						"name": "Choice",
						"else": {
							"type": "reprompt",
							"randomize": false,
							"reprompts": [
								{
									"voice": "Alexa",
									"content": "Hmm... I didn't understand that. I was looking for an answer of yes or no."
								},
								{
									"voice": "Alexa",
									"content": "Hmm. I still did not get that. If you would like to hear my question again, please say, \"Could you repeat that?\" Otherwise, please answer with yes or no."
								}
							]
						},
						"choices": [
							{
								"intent": "AMAZON.YesIntent",
								"mappings": []
							},
							{
								"intent": "AMAZON.NoIntent",
								"mappings": []
							}
						],
						"reprompt": null,
						"chips": null,
						"ports": [
							{
								"type": "",
								"target": null,
								"id": "6029bf63df1a1c3ef52a33fd"
							},
							{
								"type": "",
								"target": "6029bf63df1a1c3ef52a33e3",
								"id": "6029bf63df1a1c3ef52a33fe"
							},
							{
								"type": 2,
								"target": "6049a67ad008e0b9ee84961b",
								"id": "6029bf63df1a1c3ef52a33ff"
							}
						]
					}
				},
				"6029bf63df1a1c3ef52a33f9": {
					"nodeID": "6029bf63df1a1c3ef52a33f9",
					"type": "speak",
					"data": {
						"randomize": false,
						"dialogs": [
							{
								"voice": "Alexa",
								"content": "Would you like to change the time of your appointment?"
							}
						],
						"ports": [
							{
								"type": "",
								"target": "6029bf63df1a1c3ef52a33fc",
								"id": "6029bf63df1a1c3ef52a33fa"
							}
						]
					}
				},
				"6029bf63df1a1c3ef52a33f6": {
					"nodeID": "6029bf63df1a1c3ef52a33f6",
					"type": "set",
					"data": {
						"sets": [
							{
								"variable": "res",
								"expression": {
									"type": "variable",
									"value": "time",
									"depth": 0
								}
							}
						],
						"ports": [
							{
								"type": "",
								"target": "6029bf63df1a1c3ef52a33f0",
								"id": "6029bf63df1a1c3ef52a33f7"
							}
						]
					}
				},
				"6029bf63df1a1c3ef52a33f3": {
					"nodeID": "6029bf63df1a1c3ef52a33f3",
					"type": "set",
					"data": {
						"sets": [
							{
								"variable": "res",
								"expression": {
									"type": "value",
									"value": "11:00",
									"depth": 0
								}
							}
						],
						"ports": [
							{
								"type": "",
								"target": "6029bf63df1a1c3ef52a33f0",
								"id": "6029bf63df1a1c3ef52a33f4"
							}
						]
					}
				},
				"6029bf63df1a1c3ef52a33f0": {
					"nodeID": "6029bf63df1a1c3ef52a33f0",
					"type": "directive",
					"data": {
						"directive": "{\n  \"query\": \"UPDATE \\\"users\\\" SET \\\"checkintime\\\" = $2 WHERE \\\"userid\\\" = $1\",\n  \"params\": [\"_cognitoId\", \"_res\"]\n}",
						"ports": [
							{
								"type": "",
								"target": "6049a045d008e0b9ee8495dc",
								"id": "6029bf63df1a1c3ef52a33f1"
							}
						]
					}
				},
				"6029bf63df1a1c3ef52a33ec": {
					"nodeID": "6029bf63df1a1c3ef52a33ec",
					"type": "code",
					"data": {
						"code": "res = (res + 12) + \":00\"",
						"ports": [
							{
								"type": "",
								"target": "6029bf63df1a1c3ef52a33f0",
								"id": "6029bf63df1a1c3ef52a33ed"
							},
							{
								"type": "fail",
								"target": "6029bf63df1a1c3ef52a33f0",
								"id": "6029bf63df1a1c3ef52a33ee"
							}
						]
					}
				},
				"6029bf63df1a1c3ef52a33e6": {
					"nodeID": "6029bf63df1a1c3ef52a33e6",
					"type": "interaction",
					"data": {
						"name": "Choice",
						"else": {
							"type": "reprompt",
							"randomize": false,
							"reprompts": [
								{
									"voice": "Alexa",
									"content": "I'm sorry, I was looking for a time. What time would you like to change your appointment to?"
								},
								{
									"voice": "Alexa",
									"content": "Hmm, I didn't get that. What time would you like to change your appointment to?"
								},
								{
									"voice": "Alexa",
									"content": "I'm sorry, I was looking for a time. What time would you like to change your appointment to?"
								}
							]
						},
						"choices": [
							{
								"intent": "2ea53y8u",
								"mappings": []
							},
							{
								"intent": "9khb3y56",
								"mappings": []
							},
							{
								"intent": "wgcl30ta",
								"mappings": []
							}
						],
						"reprompt": null,
						"chips": null,
						"ports": [
							{
								"type": "",
								"target": null,
								"id": "6029bf63df1a1c3ef52a33e7"
							},
							{
								"type": "",
								"target": "6029bf63df1a1c3ef52a33f6",
								"id": "6029bf63df1a1c3ef52a33e8"
							},
							{
								"type": 2,
								"target": "6029bf63df1a1c3ef52a33f3",
								"id": "6029bf63df1a1c3ef52a33e9"
							},
							{
								"type": 3,
								"target": "6029bf63df1a1c3ef52a33e0",
								"id": "6029bf63df1a1c3ef52a33ea"
							}
						]
					}
				},
				"6029bf63df1a1c3ef52a33e3": {
					"nodeID": "6029bf63df1a1c3ef52a33e3",
					"type": "speak",
					"data": {
						"randomize": false,
						"dialogs": [
							{
								"voice": "Alexa",
								"content": "What time would you like to change your appointment to?"
							}
						],
						"ports": [
							{
								"type": "",
								"target": "6029bf63df1a1c3ef52a33e6",
								"id": "6029bf63df1a1c3ef52a33e4"
							}
						]
					}
				},
				"6029bf63df1a1c3ef52a33e0": {
					"nodeID": "6029bf63df1a1c3ef52a33e0",
					"type": "set",
					"data": {
						"sets": [
							{
								"variable": "res",
								"expression": {
									"type": "variable",
									"value": "numbertype",
									"depth": 0
								}
							}
						],
						"ports": [
							{
								"type": "",
								"target": "6029bf63df1a1c3ef52a33ec",
								"id": "6029bf63df1a1c3ef52a33e1"
							}
						]
					}
				},
				"6029bf63df1a1c3ef52a33db": {
					"nodeID": "6029bf63df1a1c3ef52a33db",
					"type": "block",
					"coords": [
						1889.0522082039752,
						-51.33069559723041
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"6029bf63df1a1c3ef52a33f9",
							"6029bf63df1a1c3ef52a33fc"
						]
					}
				},
				"6029bf63df1a1c3ef52a33d9": {
					"nodeID": "6029bf63df1a1c3ef52a33d9",
					"type": "block",
					"coords": [
						2784.2353068805824,
						-34.907101828193994
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"6029bf63df1a1c3ef52a33f6"
						]
					}
				},
				"6029bf63df1a1c3ef52a33d7": {
					"nodeID": "6029bf63df1a1c3ef52a33d7",
					"type": "block",
					"coords": [
						2785.4743416438805,
						97.31634701726554
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"6029bf63df1a1c3ef52a33f3"
						]
					}
				},
				"6029bf63df1a1c3ef52a33d5": {
					"nodeID": "6029bf63df1a1c3ef52a33d5",
					"type": "block",
					"coords": [
						3264.4267912617493,
						40.7707455242828
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"6029bf63df1a1c3ef52a33ec",
							"6029bf63df1a1c3ef52a33f0"
						]
					}
				},
				"6029bf63df1a1c3ef52a33d3": {
					"nodeID": "6029bf63df1a1c3ef52a33d3",
					"type": "block",
					"coords": [
						2309.5257737803995,
						-40.841777282059674
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"6029bf63df1a1c3ef52a33e3",
							"6029bf63df1a1c3ef52a33e6"
						]
					}
				},
				"6029bf63df1a1c3ef52a33d1": {
					"nodeID": "6029bf63df1a1c3ef52a33d1",
					"type": "block",
					"coords": [
						2787.3310785112903,
						231.35653581823433
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"6029bf63df1a1c3ef52a33e0"
						]
					}
				},
				"6029bfd8df1a1c3ef52a343d": {
					"nodeID": "6029bfd8df1a1c3ef52a343d",
					"type": "speak",
					"data": {
						"randomize": false,
						"dialogs": [
							{
								"voice": "Alexa",
								"content": "Alright. Thank you."
							}
						],
						"ports": [
							{
								"type": "",
								"target": "604131014aa5dd22c250a5bc",
								"id": "6029bfd9df1a1c3ef52a343f"
							}
						]
					}
				},
				"6029bfd9df1a1c3ef52a3440": {
					"nodeID": "6029bfd9df1a1c3ef52a3440",
					"type": "block",
					"coords": [
						940.3313321555149,
						1034.1215359302414
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"6029bfd8df1a1c3ef52a343d",
							"604131014aa5dd22c250a5bc"
						]
					}
				},
				"6029c021df1a1c3ef52a3449": {
					"nodeID": "6029c021df1a1c3ef52a3449",
					"type": "block",
					"coords": [
						1482.9507547902854,
						269.538507404664
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"6029bf08df1a1c3ef52a33c4",
							"602c0efd700a1b5e325f085e"
						]
					}
				},
				"602c0a5e700a1b5e325f0851": {
					"nodeID": "602c0a5e700a1b5e325f0851",
					"type": "speak",
					"data": {
						"randomize": false,
						"dialogs": [
							{
								"voice": "Alexa",
								"content": "Sounds good. I'll talk to you {{[resB].resB}} at {{[res].res}}:{{[resC].resC}}. In the meantime, please remember to follow the CDC guidelines to protect yourself and others from COVID-19.  These include:  washing your hands often, wearing a mask, avoiding crowds, and staying at least six feet away from others who don’t live with you.  Please take good care of yourself and have a great day!"
							}
						],
						"ports": [
							{
								"type": "",
								"target": "6032cd084e7285bfd4ca6326",
								"id": "602c0a5e700a1b5e325f0852"
							}
						]
					}
				},
				"602c0a5e700a1b5e325f084f": {
					"nodeID": "602c0a5e700a1b5e325f084f",
					"type": "block",
					"coords": [
						4543.733225059745,
						-54.96860866695525
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"6049a877985392d18145265b",
							"602c0a5e700a1b5e325f0851",
							"6032cd084e7285bfd4ca6326"
						]
					}
				},
				"602c0efd700a1b5e325f085e": {
					"nodeID": "602c0efd700a1b5e325f085e",
					"type": "code",
					"data": {
						"code": "resB = weekday;\nresB == \"M\"\n  ? (resB = \"MO\")\n  : resB == \"T\"\n  ? (resB = \"TU\")\n  : resB == \"W\"\n  ? (resB = \"WE\")\n  : resB == \"Th\"\n  ? (resB = \"TH\")\n  : resB == \"F\"\n  ? (resB = \"FR\")\n  : resB == \"Sa\"\n  ? (resB = \"SA\")\n  : resB == \"Su\"\n  ? (resB = \"Su\")\n  : null;",
						"ports": [
							{
								"type": "",
								"target": "6029bf63df1a1c3ef52a33f9",
								"id": "602c0efd700a1b5e325f0861"
							},
							{
								"type": "fail",
								"target": null,
								"id": "602c0efd700a1b5e325f0862"
							}
						]
					}
				},
				"60300d28e9dfa47e4778c7af": {
					"nodeID": "60300d28e9dfa47e4778c7af",
					"type": "if",
					"data": {
						"expressions": [
							{
								"type": "not",
								"value": {
									"type": "variable",
									"value": "flag",
									"depth": 1
								},
								"depth": 0
							}
						],
						"ports": [
							{
								"type": "",
								"target": "5ff8f03ba13f5c2464ab8863",
								"id": "60300d28e9dfa47e4778c7b0"
							},
							{
								"type": "",
								"target": "5ff8f03ba13f5c2464ab8873",
								"id": "60300d28e9dfa47e4778c7b1"
							}
						]
					}
				},
				"60300d28e9dfa47e4778c7ac": {
					"nodeID": "60300d28e9dfa47e4778c7ac",
					"type": "directive",
					"data": {
						"directive": "{\n  \"query\": [\"SELECT \\\"dailystatus\\\" FROM \\\"users\\\" WHERE \\\"userid\\\" = $1;\"],\n  \"params\": [\"_cognitoId\"],\n  \"to\": \"flag\"\n}",
						"ports": [
							{
								"type": "",
								"target": "60300d28e9dfa47e4778c7af",
								"id": "60300d28e9dfa47e4778c7ad"
							}
						]
					}
				},
				"60300d28e9dfa47e4778c7aa": {
					"nodeID": "60300d28e9dfa47e4778c7aa",
					"type": "block",
					"coords": [
						94.9904621711335,
						356.9655479810531
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"60300d28e9dfa47e4778c7ac",
							"60300d28e9dfa47e4778c7af"
						]
					}
				},
				"6032cd084e7285bfd4ca6326": {
					"nodeID": "6032cd084e7285bfd4ca6326",
					"type": "exit",
					"data": {
						"ports": []
					}
				},
				"603607239ebf9102df39f583": {
					"nodeID": "603607239ebf9102df39f583",
					"type": "flow",
					"data": {
						"diagramID": "604fb4537dbea8004948e250",
						"variableMap": null,
						"ports": [
							{
								"type": "",
								"target": "60300d28e9dfa47e4778c7ac",
								"id": "603607239ebf9102df39f585"
							}
						]
					}
				},
				"603607239ebf9102df39f586": {
					"nodeID": "603607239ebf9102df39f586",
					"type": "block",
					"coords": [
						-308.4416273580585,
						397.30875693397235
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"603607239ebf9102df39f583"
						]
					}
				},
				"603607b19ebf9102df39f590": {
					"nodeID": "603607b19ebf9102df39f590",
					"type": "code",
					"data": {
						"code": "resB == \"M\"\n  ? (resB = \"MO\")\n  : resB == \"T\"\n  ? (resB = \"TU\")\n  : resB == \"W\"\n  ? (resB = \"WE\")\n  : resB == \"Th\"\n  ? (resB = \"TH\")\n  : resB == \"F\"\n  ? (resB = \"FR\")\n  : resB == \"Sa\"\n  ? (resB = \"SA\")\n  : resB == \"Su\"\n  ? (resB = \"Su\")\n  : null;",
						"ports": [
							{
								"type": "",
								"target": "6029bf63df1a1c3ef52a33f9",
								"id": "603607b19ebf9102df39f593"
							},
							{
								"type": "fail",
								"target": null,
								"id": "603607b19ebf9102df39f594"
							}
						]
					}
				},
				"604131014aa5dd22c250a5bc": {
					"nodeID": "604131014aa5dd22c250a5bc",
					"type": "exit",
					"data": {
						"ports": []
					}
				},
				"60499c94b22cd43ae29d1823": {
					"nodeID": "60499c94b22cd43ae29d1823",
					"type": "reminder",
					"data": {
						"reminder": {
							"name": "Reminder",
							"type": "SCHEDULED_ABSOLUTE",
							"text": "Hey! It's time for your check-in with the ARIC Study. To talk to us, please approach your Alexa and say, 'Alexa, open ARIC Study'",
							"time": {
								"h": "{{[resB].resB}}",
								"m": "{{[resC].resC}}",
								"s": "0"
							},
							"date": "",
							"timezone": "User Timezone",
							"recurrence": {
								"freq": "DAILY",
								"byDay": "SA"
							},
							"recurrenceBool": true
						},
						"ports": [
							{
								"type": "",
								"target": "5ff8f03ba13f5c2464ab8859",
								"id": "60499c94b22cd43ae29d1824"
							},
							{
								"type": "fail",
								"target": "60499c94b22cd43ae29d181e",
								"id": "60499c94b22cd43ae29d1825"
							}
						]
					}
				},
				"60499c94b22cd43ae29d1821": {
					"nodeID": "60499c94b22cd43ae29d1821",
					"type": "exit",
					"data": {
						"ports": []
					}
				},
				"60499c94b22cd43ae29d181e": {
					"nodeID": "60499c94b22cd43ae29d181e",
					"type": "speak",
					"data": {
						"randomize": false,
						"dialogs": [
							{
								"voice": "Alexa",
								"content": "There was a problem creating the reminder."
							}
						],
						"ports": [
							{
								"type": "",
								"target": "60499c94b22cd43ae29d1821",
								"id": "60499c94b22cd43ae29d181f"
							}
						]
					}
				},
				"60499c94b22cd43ae29d181a": {
					"nodeID": "60499c94b22cd43ae29d181a",
					"type": "code",
					"data": {
						"code": "resC = res.split(\":\")[1];\nresB = res.split(\":\")[0];",
						"ports": [
							{
								"type": "",
								"target": "604fb2a55b79f1b1ef214691",
								"id": "60499c94b22cd43ae29d181b"
							},
							{
								"type": "fail",
								"target": "60499c94b22cd43ae29d181e",
								"id": "60499c94b22cd43ae29d181c"
							}
						]
					}
				},
				"60499c94b22cd43ae29d1818": {
					"nodeID": "60499c94b22cd43ae29d1818",
					"type": "block",
					"coords": [
						3262.7709274037697,
						656.6597640602164
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"60499c94b22cd43ae29d1823"
						]
					}
				},
				"60499c94b22cd43ae29d1816": {
					"nodeID": "60499c94b22cd43ae29d1816",
					"type": "block",
					"coords": [
						3264.9617939459104,
						912.9911494908823
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"60499c94b22cd43ae29d181e",
							"60499c94b22cd43ae29d1821"
						]
					}
				},
				"60499c94b22cd43ae29d1814": {
					"nodeID": "60499c94b22cd43ae29d1814",
					"type": "block",
					"coords": [
						2317.488134891691,
						731.7108133260379
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"60499c94b22cd43ae29d181a"
						]
					}
				},
				"6049a045d008e0b9ee8495ee": {
					"nodeID": "6049a045d008e0b9ee8495ee",
					"type": "exit",
					"data": {
						"ports": []
					}
				},
				"6049a045d008e0b9ee8495eb": {
					"nodeID": "6049a045d008e0b9ee8495eb",
					"type": "speak",
					"data": {
						"randomize": false,
						"dialogs": [
							{
								"voice": "Alexa",
								"content": "There was a problem creating the reminder."
							}
						],
						"ports": [
							{
								"type": "",
								"target": "6049a045d008e0b9ee8495ee",
								"id": "6049a045d008e0b9ee8495ec"
							}
						]
					}
				},
				"6049a045d008e0b9ee8495e7": {
					"nodeID": "6049a045d008e0b9ee8495e7",
					"type": "reminder",
					"data": {
						"reminder": {
							"name": "Reminder",
							"type": "SCHEDULED_ABSOLUTE",
							"text": "Hey! It's time for your check-in with the ARIC Study. To talk to us, please approach your Alexa and say, 'Alexa, open ARIC Study'",
							"time": {
								"h": "{{[resB].resB}}",
								"m": "{{[resC].resC}}",
								"s": "0"
							},
							"date": "",
							"timezone": "User Timezone",
							"recurrence": {
								"freq": "WEEKLY",
								"byDay": "SA"
							},
							"recurrenceBool": true
						},
						"ports": [
							{
								"type": "",
								"target": "6049a877985392d18145265b",
								"id": "6049a045d008e0b9ee8495e8"
							},
							{
								"type": "fail",
								"target": "6049a045d008e0b9ee8495eb",
								"id": "6049a045d008e0b9ee8495e9"
							}
						]
					}
				},
				"6049a045d008e0b9ee8495dc": {
					"nodeID": "6049a045d008e0b9ee8495dc",
					"type": "code",
					"data": {
						"code": "resC = res.split(\":\")[1];\nlet a = resB;\nresB = res.split(\":\")[0];\nres = a;",
						"ports": [
							{
								"type": "",
								"target": "604fb2535b79f1b1ef214675",
								"id": "6049a045d008e0b9ee8495dd"
							},
							{
								"type": "fail",
								"target": "6049a045d008e0b9ee8495eb",
								"id": "6049a045d008e0b9ee8495de"
							}
						]
					}
				},
				"6049a045d008e0b9ee8495d7": {
					"nodeID": "6049a045d008e0b9ee8495d7",
					"type": "block",
					"coords": [
						4130.813006818891,
						234.55732876539844
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"6049a045d008e0b9ee8495eb",
							"6049a045d008e0b9ee8495ee"
						]
					}
				},
				"6049a045d008e0b9ee8495d5": {
					"nodeID": "6049a045d008e0b9ee8495d5",
					"type": "block",
					"coords": [
						4109.264733638083,
						-53.2241341105456
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"6049a045d008e0b9ee8495e7"
						]
					}
				},
				"6049a67ad008e0b9ee84961b": {
					"nodeID": "6049a67ad008e0b9ee84961b",
					"type": "directive",
					"data": {
						"directive": "{\n  \"query\": [\"SELECT \\\"checkintime\\\" FROM \\\"users\\\" WHERE \\\"userid\\\" = $1\"],\n  \"params\": [\"_cognitoId\"],\n  \"to\": \"res\"\n}",
						"ports": [
							{
								"type": "",
								"target": "6049a045d008e0b9ee8495dc",
								"id": "6049a67ad008e0b9ee84961e"
							}
						]
					}
				},
				"6049a877985392d18145265b": {
					"nodeID": "6049a877985392d18145265b",
					"type": "code",
					"data": {
						"code": "resB = weekday;\nresB == \"MO\"\n  ? (resB = \"Monday\")\n  : resB == \"TU\"\n  ? (resB = \"Tuesday\")\n  : resB == \"WE\"\n  ? (resB = \"Wednesday\")\n  : resB == \"TH\"\n  ? (resB = \"Thursday\")\n  : resB == \"FR\"\n  ? (resB = \"Friday\")\n  : resB == \"SA\"\n  ? (resB = \"Saturday\")\n  : resB == \"SU\"\n  ? (resB = \"Sunday\")\n  : null;",
						"ports": [
							{
								"type": "",
								"target": "602c0a5e700a1b5e325f0851",
								"id": "6049a877985392d18145265c"
							},
							{
								"type": "fail",
								"target": "602c0a5e700a1b5e325f0851",
								"id": "6049a877985392d18145265d"
							}
						]
					}
				},
				"604fb2535b79f1b1ef214678": {
					"nodeID": "604fb2535b79f1b1ef214678",
					"type": "interaction",
					"data": {
						"name": "Choice",
						"else": {
							"type": "reprompt",
							"randomize": false,
							"reprompts": [
								{
									"voice": "Alexa",
									"content": "If you would like to be reminded before your next checkin, please say, \"yes\""
								},
								{
									"voice": "Alexa",
									"content": "Im sorry, I was looking for, \"yes\" or \"no\"."
								},
								{
									"voice": "Alexa",
									"content": "Hmm, I didn't understand that. Would you like to be reminded before your weekly checkins?"
								}
							]
						},
						"choices": [
							{
								"intent": "AMAZON.YesIntent",
								"mappings": []
							},
							{
								"intent": "AMAZON.NoIntent",
								"mappings": []
							}
						],
						"reprompt": null,
						"chips": null,
						"ports": [
							{
								"type": "",
								"target": null,
								"id": "604fb2535b79f1b1ef214679"
							},
							{
								"type": "",
								"target": "6049a045d008e0b9ee8495e7",
								"id": "604fb2535b79f1b1ef21467a"
							},
							{
								"type": 2,
								"target": "6049a877985392d18145265b",
								"id": "604fb2535b79f1b1ef21467b"
							}
						]
					}
				},
				"604fb2535b79f1b1ef214675": {
					"nodeID": "604fb2535b79f1b1ef214675",
					"type": "speak",
					"data": {
						"randomize": false,
						"dialogs": [
							{
								"voice": "Alexa",
								"content": "Would you like to update your existing reminders?<break strength=\"x-strong\" />"
							}
						],
						"ports": [
							{
								"type": "",
								"target": "604fb2535b79f1b1ef214678",
								"id": "604fb2535b79f1b1ef214676"
							}
						]
					}
				},
				"604fb2535b79f1b1ef214670": {
					"nodeID": "604fb2535b79f1b1ef214670",
					"type": "block",
					"coords": [
						3708.9839025609563,
						-2.9273273935930266
					],
					"data": {
						"name": "Ending",
						"color": "standard",
						"steps": [
							"604fb2535b79f1b1ef214675",
							"604fb2535b79f1b1ef214678"
						]
					}
				},
				"604fb2a55b79f1b1ef214694": {
					"nodeID": "604fb2a55b79f1b1ef214694",
					"type": "interaction",
					"data": {
						"name": "Choice",
						"else": {
							"type": "reprompt",
							"randomize": false,
							"reprompts": [
								{
									"voice": "Alexa",
									"content": "If you would like to be reminded before your next checkin, please say, \"yes\""
								},
								{
									"voice": "Alexa",
									"content": "Im sorry, I was looking for, \"yes\" or \"no\"."
								},
								{
									"voice": "Alexa",
									"content": "Hmm, I didn't understand that. Would you like to be reminded before your weekly checkins?"
								}
							]
						},
						"choices": [
							{
								"intent": "AMAZON.YesIntent",
								"mappings": []
							},
							{
								"intent": "AMAZON.NoIntent",
								"mappings": []
							}
						],
						"reprompt": null,
						"chips": null,
						"ports": [
							{
								"type": "",
								"target": null,
								"id": "604fb2a55b79f1b1ef214695"
							},
							{
								"type": "",
								"target": "60499c94b22cd43ae29d1823",
								"id": "604fb2a55b79f1b1ef214696"
							},
							{
								"type": 2,
								"target": "5ff8f03ba13f5c2464ab8859",
								"id": "604fb2a55b79f1b1ef214697"
							}
						]
					}
				},
				"604fb2a55b79f1b1ef214691": {
					"nodeID": "604fb2a55b79f1b1ef214691",
					"type": "speak",
					"data": {
						"randomize": false,
						"dialogs": [
							{
								"voice": "Alexa",
								"content": "Would you like to update your existing reminders?<break strength=\"x-strong\" />"
							}
						],
						"ports": [
							{
								"type": "",
								"target": "604fb2a55b79f1b1ef214694",
								"id": "604fb2a55b79f1b1ef214692"
							}
						]
					}
				},
				"604fb2a55b79f1b1ef21468f": {
					"nodeID": "604fb2a55b79f1b1ef21468f",
					"type": "block",
					"coords": [
						2787.220751660496,
						639.0117470498898
					],
					"data": {
						"name": "Ending",
						"color": "standard",
						"steps": [
							"604fb2a55b79f1b1ef214691",
							"604fb2a55b79f1b1ef214694"
						]
					}
				}
			},
			"versionID": "604fb4535e10aa001b8f200e",
			"creatorID": 55093,
			"name": "Reschedule Flow",
			"modified": 1615836243
		},
		"604fb4537dbea8004948e25a": {
			"_id": "604fb4537dbea8004948e25a",
			"offsetX": 230.3373769398213,
			"offsetY": 153.28215262944656,
			"zoom": 47.671342019197034,
			"variables": [],
			"children": [],
			"nodes": {
				"6020707ee8d06e389ce199e6": {
					"nodeID": "6020707ee8d06e389ce199e6",
					"type": "start",
					"coords": [
						-370.4179340191079,
						116.25641798024259
					],
					"data": {
						"name": "Start",
						"color": "standard",
						"ports": [
							{
								"type": "",
								"target": "602876b62818e16673da2c69",
								"id": "60207085e8d06e389ce199f1"
							}
						],
						"steps": []
					}
				},
				"602075ade8d06e389ce19cca": {
					"nodeID": "602075ade8d06e389ce19cca",
					"type": "directive",
					"data": {
						"directive": "{\n  \"query\": [\"SELECT \\\"streak\\\" FROM \\\"users\\\" WHERE \\\"userid\\\" = $1;\"],\n  \"params\": [\"_cognitoId\"],\n  \"to\": \"res\"\n  \n}",
						"ports": [
							{
								"type": "",
								"target": "602731af2818e16673da2889",
								"id": "602075ade8d06e389ce19ccc"
							}
						]
					}
				},
				"602075ade8d06e389ce19ccd": {
					"nodeID": "602075ade8d06e389ce19ccd",
					"type": "block",
					"coords": [
						825,
						118.99999999999999
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"602075ade8d06e389ce19cca"
						]
					}
				},
				"60207620e8d06e389ce19cd5": {
					"nodeID": "60207620e8d06e389ce19cd5",
					"type": "if",
					"data": {
						"expressions": [
							{
								"type": "equals",
								"value": [
									{
										"type": "variable",
										"value": "res",
										"depth": 1
									},
									{
										"type": "value",
										"value": "-1",
										"depth": 1
									}
								],
								"depth": 0
							},
							{
								"type": "greater",
								"value": [
									{
										"type": "variable",
										"value": "res",
										"depth": 1
									},
									{
										"type": "value",
										"value": "1",
										"depth": 1
									}
								],
								"depth": 0
							}
						],
						"ports": [
							{
								"type": "",
								"target": "602734142818e16673da2982",
								"id": "60207620e8d06e389ce19cd7"
							},
							{
								"type": "",
								"target": "602733982818e16673da2967",
								"id": "60207620e8d06e389ce19cd8"
							},
							{
								"type": 2,
								"target": "602734142818e16673da2976",
								"id": "60207650e8d06e389ce19ce1"
							}
						]
					}
				},
				"60207620e8d06e389ce19cd9": {
					"nodeID": "60207620e8d06e389ce19cd9",
					"type": "block",
					"coords": [
						1719.2234243906476,
						55.85895504939351
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"60207620e8d06e389ce19cd5"
						]
					}
				},
				"602731af2818e16673da2889": {
					"nodeID": "602731af2818e16673da2889",
					"type": "code",
					"data": {
						"code": "flag = !questionnaire[\"symptoms\"][\"1\"].value;\nif (!flag) {\n  flag = true;\n  for (let i = 3; i <= 16; i = i + 1){\n    if (questionnaire[\"symptoms\"][i][\"value\"]) {\n      flag = false;\n    }\n  }\n}\nif(!res){\n  res = 0;\n}",
						"ports": [
							{
								"type": "",
								"target": "60207620e8d06e389ce19cd5",
								"id": "602731af2818e16673da288b"
							},
							{
								"type": "fail",
								"target": "6027375e2818e16673da298e",
								"id": "602731af2818e16673da288c"
							}
						]
					}
				},
				"602731af2818e16673da288d": {
					"nodeID": "602731af2818e16673da288d",
					"type": "block",
					"coords": [
						1246.6029889133433,
						64.63538004401745
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"602731af2818e16673da2889"
						]
					}
				},
				"602733982818e16673da2967": {
					"nodeID": "602733982818e16673da2967",
					"type": "if",
					"data": {
						"expressions": [
							{
								"type": "not",
								"value": {
									"type": "variable",
									"value": "flag",
									"depth": 1
								},
								"depth": 0
							}
						],
						"ports": [
							{
								"type": "",
								"target": "602864012818e16673da29a4",
								"id": "602733982818e16673da2969"
							},
							{
								"type": "",
								"target": null,
								"id": "602733982818e16673da296a"
							}
						]
					}
				},
				"602733982818e16673da296b": {
					"nodeID": "602733982818e16673da296b",
					"type": "block",
					"coords": [
						2266.729089297232,
						-188.05640628960685
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"602733982818e16673da2967"
						]
					}
				},
				"602734142818e16673da2976": {
					"nodeID": "602734142818e16673da2976",
					"type": "if",
					"data": {
						"expressions": [
							{
								"type": "not",
								"value": {
									"type": "variable",
									"value": "flag",
									"depth": 1
								},
								"depth": 0
							}
						],
						"ports": [
							{
								"type": "",
								"target": "602864012818e16673da29a4",
								"id": "602734142818e16673da2977"
							},
							{
								"type": "",
								"target": "60286ee12818e16673da2a1c",
								"id": "602734142818e16673da2978"
							}
						]
					}
				},
				"602734142818e16673da2974": {
					"nodeID": "602734142818e16673da2974",
					"type": "block",
					"coords": [
						2272.3444623268656,
						96.45582721195542
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"602734142818e16673da2976"
						]
					}
				},
				"602734142818e16673da2982": {
					"nodeID": "602734142818e16673da2982",
					"type": "if",
					"data": {
						"expressions": [
							{
								"type": "not",
								"value": {
									"type": "variable",
									"value": "flag",
									"depth": 1
								},
								"depth": 0
							}
						],
						"ports": [
							{
								"type": "",
								"target": "60286fb12818e16673da2a36",
								"id": "602734142818e16673da2983"
							},
							{
								"type": "",
								"target": "60286ee12818e16673da2a1c",
								"id": "602734142818e16673da2984"
							}
						]
					}
				},
				"602734142818e16673da2980": {
					"nodeID": "602734142818e16673da2980",
					"type": "block",
					"coords": [
						2283.5752083861394,
						365.9937326344875
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"602734142818e16673da2982"
						]
					}
				},
				"6027375e2818e16673da298e": {
					"nodeID": "6027375e2818e16673da298e",
					"type": "speak",
					"data": {
						"randomize": false,
						"dialogs": [
							{
								"voice": "Alexa",
								"content": "Problem retrieving flag"
							}
						],
						"ports": [
							{
								"type": "",
								"target": null,
								"id": "6027375e2818e16673da2990"
							}
						]
					}
				},
				"6027375e2818e16673da2991": {
					"nodeID": "6027375e2818e16673da2991",
					"type": "block",
					"coords": [
						1722.0379054225316,
						313.58358435788557
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"6027375e2818e16673da298e"
						]
					}
				},
				"602864012818e16673da29a4": {
					"nodeID": "602864012818e16673da29a4",
					"type": "directive",
					"data": {
						"directive": "{\n  \"query\": \"UPDATE \\\"users\\\" SET (\\\"dailystatus\\\", \\\"dcheckintime\\\", \\\"streak\\\") = ('f', null, '0') WHERE \\\"userid\\\" = $1\",\n  \"params\": [\"_cognitoId\"]\n}\n",
						"ports": [
							{
								"type": "",
								"target": "6028766f2818e16673da2c2b",
								"id": "602864012818e16673da29a6"
							}
						]
					}
				},
				"602864012818e16673da29a7": {
					"nodeID": "602864012818e16673da29a7",
					"type": "block",
					"coords": [
						3030.41982132775,
						8.48164974765664
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"602864012818e16673da29a4",
							"6028766f2818e16673da2c2b"
						]
					}
				},
				"60286aba2818e16673da29fe": {
					"nodeID": "60286aba2818e16673da29fe",
					"type": "directive",
					"data": {
						"directive": "{\n  \"query\": [\"SELECT CURRENT_DATE::DATE - \\\"datestart\\\"::DATE AS \\\"days\\\" FROM \\\"users\\\" WHERE \\\"userid\\\" = $1;\"],\n  \"to\": \"days\",\n  \"params\": [\"_cognitoId\"]\n}",
						"ports": [
							{
								"type": "",
								"target": "60286e452818e16673da2a13",
								"id": "60286aba2818e16673da2a00"
							}
						]
					}
				},
				"60286aba2818e16673da2a01": {
					"nodeID": "60286aba2818e16673da2a01",
					"type": "block",
					"coords": [
						3497.8512148089826,
						274.0500678135262
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"60286aba2818e16673da29fe",
							"60286e452818e16673da2a13"
						]
					}
				},
				"60286e452818e16673da2a13": {
					"nodeID": "60286e452818e16673da2a13",
					"type": "if",
					"data": {
						"expressions": [
							{
								"type": "greater",
								"value": [
									{
										"type": "variable",
										"value": "days",
										"depth": 1
									},
									{
										"type": "value",
										"value": "14",
										"depth": 1
									}
								],
								"depth": 0
							}
						],
						"ports": [
							{
								"type": "",
								"target": null,
								"id": "60286e452818e16673da2a16"
							},
							{
								"type": "",
								"target": "602876522818e16673da2c23",
								"id": "60286e452818e16673da2a17"
							}
						]
					}
				},
				"60286ee12818e16673da2a1c": {
					"nodeID": "60286ee12818e16673da2a1c",
					"type": "directive",
					"data": {
						"directive": "{\n  \"query\": \"UPDATE \\\"users\\\" SET \\\"streak\\\" = '0' WHERE \\\"userid\\\" = $1\",\n  \"params\": [\"_cognitoId\"]\n}",
						"ports": [
							{
								"type": "",
								"target": "6028767c2818e16673da2c3f",
								"id": "60286ee12818e16673da2a1e"
							}
						]
					}
				},
				"60286ee12818e16673da2a1f": {
					"nodeID": "60286ee12818e16673da2a1f",
					"type": "block",
					"coords": [
						3030.4198213277414,
						214.37866083431325
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"60286ee12818e16673da2a1c",
							"6028767c2818e16673da2c3f"
						]
					}
				},
				"60286f132818e16673da2a2b": {
					"nodeID": "60286f132818e16673da2a2b",
					"type": "directive",
					"data": {
						"directive": "{\n  \"query\": \"UPDATE \\\"users\\\" SET \\\"streak\\\" = $2 WHERE \\\"userid\\\" = $1\",\n  \"params\": [\"_cognitoId\", \"_res\"]\n}",
						"ports": [
							{
								"type": "",
								"target": "6028767d2818e16673da2c49",
								"id": "60286f132818e16673da2a2c"
							}
						]
					}
				},
				"60286f132818e16673da2a29": {
					"nodeID": "60286f132818e16673da2a29",
					"type": "block",
					"coords": [
						3030.419821327744,
						422.14746293084914
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"60286fb12818e16673da2a36",
							"60286f132818e16673da2a2b",
							"6028767d2818e16673da2c49"
						]
					}
				},
				"60286fb12818e16673da2a36": {
					"nodeID": "60286fb12818e16673da2a36",
					"type": "set",
					"data": {
						"sets": [
							{
								"variable": "res",
								"expression": {
									"type": "plus",
									"value": [
										{
											"type": "variable",
											"value": "res",
											"depth": 1
										},
										{
											"type": "value",
											"value": "1",
											"depth": 1
										}
									],
									"depth": 0
								}
							}
						],
						"ports": [
							{
								"type": "",
								"target": "60286f132818e16673da2a2b",
								"id": "60286fb12818e16673da2a39"
							}
						]
					}
				},
				"602870162818e16673da2a40": {
					"nodeID": "602870162818e16673da2a40",
					"type": "block",
					"coords": [
						3928.879506069538,
						427.7628359604865
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"602876522818e16673da2c23"
						]
					}
				},
				"602876522818e16673da2c23": {
					"nodeID": "602876522818e16673da2c23",
					"type": "set",
					"data": {
						"sets": [
							{
								"variable": "mFlag",
								"expression": {
									"type": "value",
									"value": "0",
									"depth": 0
								}
							}
						],
						"ports": [
							{
								"type": "",
								"target": null,
								"id": "602876522818e16673da2c26"
							}
						]
					}
				},
				"6028766f2818e16673da2c2b": {
					"nodeID": "6028766f2818e16673da2c2b",
					"type": "set",
					"data": {
						"sets": [
							{
								"variable": "flag",
								"expression": {
									"type": "value",
									"value": "0",
									"depth": 0
								}
							}
						],
						"ports": [
							{
								"type": "",
								"target": null,
								"id": "6028766f2818e16673da2c2e"
							}
						]
					}
				},
				"6028767c2818e16673da2c3f": {
					"nodeID": "6028767c2818e16673da2c3f",
					"type": "set",
					"data": {
						"sets": [
							{
								"variable": "flag",
								"expression": {
									"type": "value",
									"value": "1",
									"depth": 0
								}
							}
						],
						"ports": [
							{
								"type": "",
								"target": "60286aba2818e16673da29fe",
								"id": "6028767c2818e16673da2c40"
							}
						]
					}
				},
				"6028767d2818e16673da2c49": {
					"nodeID": "6028767d2818e16673da2c49",
					"type": "set",
					"data": {
						"sets": [
							{
								"variable": "flag",
								"expression": {
									"type": "value",
									"value": "1",
									"depth": 0
								}
							}
						],
						"ports": [
							{
								"type": "",
								"target": "60286aba2818e16673da29fe",
								"id": "6028767d2818e16673da2c4a"
							}
						]
					}
				},
				"602876b62818e16673da2c69": {
					"nodeID": "602876b62818e16673da2c69",
					"type": "set",
					"data": {
						"sets": [
							{
								"variable": "mFlag",
								"expression": {
									"type": "value",
									"value": "1",
									"depth": 0
								}
							}
						],
						"ports": [
							{
								"type": "",
								"target": "604facd79ba3af75ec8b9625",
								"id": "602876b62818e16673da2c6b"
							}
						]
					}
				},
				"602876b62818e16673da2c6c": {
					"nodeID": "602876b62818e16673da2c6c",
					"type": "block",
					"coords": [
						0.08709515615658603,
						119.14322466740586
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"602876b62818e16673da2c69"
						]
					}
				},
				"604facd79ba3af75ec8b962c": {
					"nodeID": "604facd79ba3af75ec8b962c",
					"type": "if",
					"data": {
						"expressions": [
							{
								"type": "greater",
								"value": [
									{
										"type": "variable",
										"value": "res",
										"depth": 1
									},
									{
										"type": "value",
										"value": "0",
										"depth": 1
									}
								],
								"depth": 0
							}
						],
						"ports": [
							{
								"type": "",
								"target": "604fad7f9ba3af75ec8b963b",
								"id": "604facd79ba3af75ec8b962d"
							},
							{
								"type": "",
								"target": "602075ade8d06e389ce19cca",
								"id": "604facd79ba3af75ec8b962e"
							}
						]
					}
				},
				"604facd79ba3af75ec8b9628": {
					"nodeID": "604facd79ba3af75ec8b9628",
					"type": "code",
					"data": {
						"code": "res = parseInt(res);",
						"ports": [
							{
								"type": "",
								"target": "604facd79ba3af75ec8b962c",
								"id": "604facd79ba3af75ec8b9629"
							},
							{
								"type": "fail",
								"target": "604facd79ba3af75ec8b962c",
								"id": "604facd79ba3af75ec8b962a"
							}
						]
					}
				},
				"604facd79ba3af75ec8b9625": {
					"nodeID": "604facd79ba3af75ec8b9625",
					"type": "directive",
					"data": {
						"directive": "{\n  \"query\": [\"SELECT (CURRENT_DATE::DATE - DATE(\\\"timestamp\\\")) AS \\\"val\\\" FROM \\\"checkin\\\" WHERE \\\"userid\\\" = $1 AND \\\"checkinid\\\" IN (SELECT \\\"checkinid\\\" FROM \\\"symptoms\\\") UNION ALL SELECT '1' WHERE NOT EXISTS (SELECT \\\"timestamp\\\" FROM \\\"checkin\\\" WHERE \\\"userid\\\" = $1 AND \\\"checkinid\\\" IN (SELECT \\\"checkinid\\\" FROM \\\"symptoms\\\")) ORDER BY \\\"val\\\" ASC;\"],\n  \"params\": [\"_cognitoId\"],\n  \"to\": \"res\"\n}",
						"ports": [
							{
								"type": "",
								"target": "604facd79ba3af75ec8b9628",
								"id": "604facd79ba3af75ec8b9626"
							}
						]
					}
				},
				"604facd79ba3af75ec8b9623": {
					"nodeID": "604facd79ba3af75ec8b9623",
					"type": "block",
					"coords": [
						410.4407695956749,
						116.8791248799249
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"604facd79ba3af75ec8b9625",
							"604facd79ba3af75ec8b9628",
							"604facd79ba3af75ec8b962c"
						]
					}
				},
				"604fad7f9ba3af75ec8b963b": {
					"nodeID": "604fad7f9ba3af75ec8b963b",
					"type": "set",
					"data": {
						"sets": [
							{
								"variable": "flag",
								"expression": {
									"type": "value",
									"value": "1",
									"depth": 0
								}
							}
						],
						"ports": [
							{
								"type": "",
								"target": null,
								"id": "604fad7f9ba3af75ec8b963d"
							}
						]
					}
				},
				"604fad7f9ba3af75ec8b963e": {
					"nodeID": "604fad7f9ba3af75ec8b963e",
					"type": "block",
					"coords": [
						832.077735299427,
						295.18331435663544
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"604fad7f9ba3af75ec8b963b"
						]
					}
				}
			},
			"versionID": "604fb4535e10aa001b8f200e",
			"creatorID": 55093,
			"name": "Streak Check",
			"modified": 1615836243
		},
		"604fb4537dbea8004948e251": {
			"_id": "604fb4537dbea8004948e251",
			"offsetX": 137.3046449321955,
			"offsetY": 246.18822574848576,
			"zoom": 21.41631645503255,
			"variables": [],
			"children": [
				"604fb4537dbea8004948e256"
			],
			"nodes": {
				"5fe9edc555a6159ee6d99005": {
					"nodeID": "5fe9edc555a6159ee6d99005",
					"type": "start",
					"coords": [
						360,
						120
					],
					"data": {
						"name": "Start",
						"color": "standard",
						"ports": [
							{
								"type": "",
								"target": "5ff5ca87be758f364404dc8b",
								"id": "5fe9edc655a6159ee6d99006"
							}
						],
						"steps": []
					}
				},
				"5ff5ca87be758f364404dc8f": {
					"nodeID": "5ff5ca87be758f364404dc8f",
					"type": "flow",
					"data": {
						"diagramID": "604fb4537dbea8004948e256",
						"variableMap": null,
						"ports": [
							{
								"type": "",
								"target": "602ed052700a1b5e325f1fbd",
								"id": "5ff5ca87be758f364404dc90"
							}
						]
					}
				},
				"5ff5ca87be758f364404dc8b": {
					"nodeID": "5ff5ca87be758f364404dc8b",
					"type": "code",
					"data": {
						"code": "questionSeries = questionnaire['monthlyReminder']",
						"ports": [
							{
								"type": "",
								"target": "5ff5ca87be758f364404dc8f",
								"id": "5ff5ca87be758f364404dc8c"
							},
							{
								"type": "fail",
								"target": null,
								"id": "5ff5ca87be758f364404dc8d"
							}
						]
					}
				},
				"5ff5ca87be758f364404dc87": {
					"nodeID": "5ff5ca87be758f364404dc87",
					"type": "code",
					"data": {
						"code": "questionSeries.modified = false\nquestionnaire['monthlyReminder'] = questionSeries\nquestionSeries = JSON.stringify(questionSeries)",
						"ports": [
							{
								"type": "",
								"target": null,
								"id": "5ff5ca87be758f364404dc88"
							},
							{
								"type": "fail",
								"target": null,
								"id": "5ff5ca87be758f364404dc89"
							}
						]
					}
				},
				"5ff5ca87be758f364404dc85": {
					"nodeID": "5ff5ca87be758f364404dc85",
					"type": "block",
					"coords": [
						1219.375,
						112.12499999999994
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"5ff5ca87be758f364404dc8f"
						]
					}
				},
				"5ff5ca87be758f364404dc83": {
					"nodeID": "5ff5ca87be758f364404dc83",
					"type": "block",
					"coords": [
						765.625,
						78.37499999999994
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"5ff5ca87be758f364404dc8b"
						]
					}
				},
				"5ff5ca87be758f364404dc81": {
					"nodeID": "5ff5ca87be758f364404dc81",
					"type": "block",
					"coords": [
						3942.28486924955,
						106.22453196356666
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"5ff5ca87be758f364404dc87"
						]
					}
				},
				"602ed052700a1b5e325f1fc5": {
					"nodeID": "602ed052700a1b5e325f1fc5",
					"type": "directive",
					"data": {
						"directive": "{\n  \"query\": \"UPDATE \\\"users\\\" SET (\\\"checkinday\\\", \\\"checkintime\\\") = ($2, $3) WHERE \\\"userid\\\" = $1;\",\n  \"params\": [\"_cognitoId\", \"_res\", \"_resB\"]\n}",
						"ports": [
							{
								"type": "",
								"target": "604998a2b22cd43ae29d143d",
								"id": "602ed052700a1b5e325f1fc6"
							}
						]
					}
				},
				"602ed052700a1b5e325f1fc1": {
					"nodeID": "602ed052700a1b5e325f1fc1",
					"type": "if",
					"data": {
						"expressions": [
							{
								"type": "not",
								"value": {
									"type": "variable",
									"value": "flag",
									"depth": 2
								},
								"depth": 0
							}
						],
						"ports": [
							{
								"type": "",
								"target": "602ed052700a1b5e325f1fb6",
								"id": "602ed052700a1b5e325f1fc2"
							},
							{
								"type": "",
								"target": "602ed052700a1b5e325f1fc5",
								"id": "602ed052700a1b5e325f1fc3"
							}
						]
					}
				},
				"602ed052700a1b5e325f1fbd": {
					"nodeID": "602ed052700a1b5e325f1fbd",
					"type": "code",
					"data": {
						"code": "flag = questionSeries[1].value || questionSeries[7].value;\nmFlag = questionSeries[4].value || questionSeries[12].value;\nif (flag){\n  if(questionSeries[1].value){\n    res = \"Friday\";\n    if(questionSeries[2].value == -1){\n      questionSeries[2].value = \"11:00\";\n    }\n    resB = questionSeries[2].value;\n  } else {\n    res = questionSeries[9].value\n    if(questionSeries[10].value == -1){\n      questionSeries[10].value = \"11:00\";\n    }\n    resB = questionSeries[10].value;\n  }\n  mFlag = questionSeries[4].value || questionSeries[12].value;\n  res == \"Monday\"\n    ? (res = \"M\")\n    : res == \"Tuesday\"\n    ? (res = \"T\")\n    : res == \"Wednesday\"\n    ? (res = \"W\")\n    : res == \"Thursday\"\n    ? (res = \"Th\")\n    : res == \"Friday\"\n    ? (res = \"F\")\n    : res == \"Saturday\"\n    ? (res = \"Sa\")\n    : res == \"Sunday\"\n    ? (res = \"Su\")\n    : null;\n}\nflag = !flag;",
						"ports": [
							{
								"type": "",
								"target": "602ed052700a1b5e325f1fc1",
								"id": "602ed052700a1b5e325f1fbe"
							},
							{
								"type": "fail",
								"target": "602ed052700a1b5e325f1fc1",
								"id": "602ed052700a1b5e325f1fbf"
							}
						]
					}
				},
				"602ed052700a1b5e325f1fb6": {
					"nodeID": "602ed052700a1b5e325f1fb6",
					"type": "directive",
					"data": {
						"directive": "{\n  \"query\": \"INSERT INTO \\\"contactalerts\\\" (\\\"checkinid\\\",\\\"type\\\") VALUES ($1,'Refused monthly checkin.')\",\n  \"params\": [\"_checkinId\"]\n}",
						"ports": [
							{
								"type": "",
								"target": "602ed532700a1b5e325f2118",
								"id": "602ed052700a1b5e325f1fb7"
							}
						]
					}
				},
				"602ed052700a1b5e325f1fb4": {
					"nodeID": "602ed052700a1b5e325f1fb4",
					"type": "block",
					"coords": [
						2069.4496941934217,
						58.541105821928205
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"602ed052700a1b5e325f1fc5"
						]
					}
				},
				"602ed052700a1b5e325f1fb2": {
					"nodeID": "602ed052700a1b5e325f1fb2",
					"type": "block",
					"coords": [
						1648.678769002173,
						67.61532277939432
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"602ed052700a1b5e325f1fbd",
							"602ed052700a1b5e325f1fc1"
						]
					}
				},
				"602ed052700a1b5e325f1fae": {
					"nodeID": "602ed052700a1b5e325f1fae",
					"type": "block",
					"coords": [
						2067.123907339726,
						260.4981158452901
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"602ed052700a1b5e325f1fb6",
							"602ed532700a1b5e325f2118"
						]
					}
				},
				"602ed532700a1b5e325f2118": {
					"nodeID": "602ed532700a1b5e325f2118",
					"type": "exit",
					"data": {
						"ports": []
					}
				},
				"60493b29b22cd43ae29d0edb": {
					"nodeID": "60493b29b22cd43ae29d0edb",
					"type": "code",
					"data": {
						"code": "res == \"M\"\n  ? (res = \"MO\")\n  : res == \"T\"\n  ? (res = \"TU\")\n  : res == \"W\"\n  ? (res = \"WE\")\n  : res == \"Th\"\n  ? (res = \"TH\")\n  : res == \"F\"\n  ? (res = \"FR\")\n  : res == \"Sa\"\n  ? (res = \"SA\")\n  : res == \"Su\"\n  ? (res = \"SU\")\n  : (res = \"FR\");\nresC = resB.split(\":\")[1];\nresB = resB.split(\":\")[0];",
						"ports": [
							{
								"type": "",
								"target": "60496fa6b22cd43ae29d1185",
								"id": "60493b29b22cd43ae29d0edd"
							},
							{
								"type": "fail",
								"target": "604945aeb22cd43ae29d0eea",
								"id": "60493b29b22cd43ae29d0ede"
							}
						]
					}
				},
				"60493b29b22cd43ae29d0edf": {
					"nodeID": "60493b29b22cd43ae29d0edf",
					"type": "block",
					"coords": [
						3005.469878588863,
						-278.65369759487515
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"60493b29b22cd43ae29d0edb"
						]
					}
				},
				"604945aeb22cd43ae29d0eea": {
					"nodeID": "604945aeb22cd43ae29d0eea",
					"type": "speak",
					"data": {
						"randomize": false,
						"dialogs": [
							{
								"voice": "Alexa",
								"content": "There was a problem creating the reminder."
							}
						],
						"ports": [
							{
								"type": "",
								"target": "604945c6b22cd43ae29d0ef6",
								"id": "604945aeb22cd43ae29d0eec"
							}
						]
					}
				},
				"604945aeb22cd43ae29d0eed": {
					"nodeID": "604945aeb22cd43ae29d0eed",
					"type": "block",
					"coords": [
						3463.3609858966265,
						-52.99444375420576
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"604945aeb22cd43ae29d0eea",
							"604945c6b22cd43ae29d0ef6"
						]
					}
				},
				"604945c6b22cd43ae29d0ef6": {
					"nodeID": "604945c6b22cd43ae29d0ef6",
					"type": "exit",
					"data": {
						"ports": []
					}
				},
				"60496fa6b22cd43ae29d1185": {
					"nodeID": "60496fa6b22cd43ae29d1185",
					"type": "reminder",
					"data": {
						"reminder": {
							"name": "Reminder",
							"type": "SCHEDULED_ABSOLUTE",
							"text": "This is a reminder",
							"time": {
								"h": "{{[resB].resB}}",
								"m": "{{[resC].resC}}",
								"s": "0"
							},
							"date": "",
							"timezone": "User Timezone",
							"recurrence": {
								"freq": "WEEKLY",
								"byDay": "SA"
							},
							"recurrenceBool": true
						},
						"ports": [
							{
								"type": "",
								"target": "5ff5ca87be758f364404dc87",
								"id": "60496fa6b22cd43ae29d1187"
							},
							{
								"type": "fail",
								"target": "604945aeb22cd43ae29d0eea",
								"id": "60496fa6b22cd43ae29d1188"
							}
						]
					}
				},
				"60496fa6b22cd43ae29d1189": {
					"nodeID": "60496fa6b22cd43ae29d1189",
					"type": "block",
					"coords": [
						3461.170119354486,
						-309.32582918486895
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"60496fa6b22cd43ae29d1185"
						]
					}
				},
				"604998a2b22cd43ae29d143d": {
					"nodeID": "604998a2b22cd43ae29d143d",
					"type": "if",
					"data": {
						"expressions": [
							{
								"type": "not",
								"value": {
									"type": "variable",
									"value": "flag",
									"depth": 2
								},
								"depth": 0
							}
						],
						"ports": [
							{
								"type": "",
								"target": "5ff5ca87be758f364404dc87",
								"id": "604998a2b22cd43ae29d143e"
							},
							{
								"type": "",
								"target": "60493b29b22cd43ae29d0edb",
								"id": "604998a2b22cd43ae29d143f"
							}
						]
					}
				},
				"604998a2b22cd43ae29d1437": {
					"nodeID": "604998a2b22cd43ae29d1437",
					"type": "block",
					"coords": [
						2523.4792393175294,
						54.35801681077298
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"604998a2b22cd43ae29d143d"
						]
					}
				}
			},
			"versionID": "604fb4535e10aa001b8f200e",
			"creatorID": 55093,
			"name": "Monthly Reminders",
			"modified": 1615836243
		},
		"604fb4537dbea8004948e24b": {
			"_id": "604fb4537dbea8004948e24b",
			"offsetX": -220,
			"offsetY": 156.6,
			"zoom": 80,
			"variables": [],
			"children": [
				"604fb4537dbea8004948e256"
			],
			"nodes": {
				"5ff3f37bda27927c0bb382bd": {
					"nodeID": "5ff3f37bda27927c0bb382bd",
					"type": "start",
					"coords": [
						360,
						120
					],
					"data": {
						"name": "Start",
						"color": "standard",
						"ports": [
							{
								"type": "",
								"target": "5ff3f37dda27927c0bb382cf",
								"id": "5ff3f37cda27927c0bb382be"
							}
						],
						"steps": []
					}
				},
				"5ff3f37dda27927c0bb382cf": {
					"nodeID": "5ff3f37dda27927c0bb382cf",
					"type": "code",
					"data": {
						"code": "questionSeries = questionnaire['vaccination']",
						"ports": [
							{
								"type": "",
								"target": "5ff3f37dda27927c0bb382cc",
								"id": "5ff3f37dda27927c0bb382d0"
							},
							{
								"type": "fail",
								"target": null,
								"id": "5ff3f37dda27927c0bb382d1"
							}
						]
					}
				},
				"5ff3f37dda27927c0bb382cc": {
					"nodeID": "5ff3f37dda27927c0bb382cc",
					"type": "flow",
					"data": {
						"diagramID": "604fb4537dbea8004948e256",
						"variableMap": null,
						"ports": [
							{
								"type": "",
								"target": "5ff3f37dda27927c0bb382c8",
								"id": "5ff3f37dda27927c0bb382cd"
							}
						]
					}
				},
				"5ff3f37dda27927c0bb382c8": {
					"nodeID": "5ff3f37dda27927c0bb382c8",
					"type": "code",
					"data": {
						"code": "questionSeries.modified = true\nquestionnaire['vaccination'] = questionSeries\nquestionSeries = JSON.stringify(questionSeries)",
						"ports": [
							{
								"type": "",
								"target": null,
								"id": "5ff3f37dda27927c0bb382c9"
							},
							{
								"type": "fail",
								"target": null,
								"id": "5ff3f37dda27927c0bb382ca"
							}
						]
					}
				},
				"5ff3f37dda27927c0bb382c6": {
					"nodeID": "5ff3f37dda27927c0bb382c6",
					"type": "block",
					"coords": [
						764.375,
						64.87499999999997
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"5ff3f37dda27927c0bb382cf"
						]
					}
				},
				"5ff3f37dda27927c0bb382c4": {
					"nodeID": "5ff3f37dda27927c0bb382c4",
					"type": "block",
					"coords": [
						1174.375,
						102.375
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"5ff3f37dda27927c0bb382cc"
						]
					}
				},
				"5ff3f37dda27927c0bb382c2": {
					"nodeID": "5ff3f37dda27927c0bb382c2",
					"type": "block",
					"coords": [
						1695.625,
						63.62499999999997
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"5ff3f37dda27927c0bb382c8"
						]
					}
				}
			},
			"versionID": "604fb4535e10aa001b8f200e",
			"creatorID": 55093,
			"name": "Vaccine Check",
			"modified": 1615836243
		},
		"604fb4537dbea8004948e254": {
			"_id": "604fb4537dbea8004948e254",
			"name": "Help User",
			"offsetX": 196.5723910133667,
			"offsetY": 143.32399142840148,
			"zoom": 76.41405779564307,
			"variables": [],
			"nodes": {
				"5f9f562f11b31520c2a2a6e1": {
					"nodeID": "5f9f562f11b31520c2a2a6e1",
					"type": "start",
					"coords": [
						360,
						120
					],
					"data": {
						"name": "Start",
						"color": "standard",
						"ports": [
							{
								"type": "",
								"target": "5f9f562f11b31520c2a2a6e2",
								"id": "5fde75904a001a20aa671626"
							}
						],
						"steps": []
					}
				},
				"5f9f562f11b31520c2a2a6e2": {
					"nodeID": "5f9f562f11b31520c2a2a6e2",
					"type": "speak",
					"data": {
						"randomize": false,
						"dialogs": [
							{
								"voice": "Alexa",
								"content": "You said help. Do you want to continue?"
							}
						],
						"ports": [
							{
								"type": "",
								"target": "5f9f562f11b31520c2a2a6e4",
								"id": "5fde75904a001a20aa671627"
							}
						]
					}
				},
				"5f9f562f11b31520c2a2a6e3": {
					"nodeID": "5f9f562f11b31520c2a2a6e3",
					"type": "block",
					"coords": [
						808.6506721313523,
						121.24568139701532
					],
					"data": {
						"name": "Help Message",
						"color": "standard",
						"steps": [
							"5f9f562f11b31520c2a2a6e2",
							"5f9f562f11b31520c2a2a6e4"
						]
					}
				},
				"5f9f562f11b31520c2a2a6e4": {
					"nodeID": "5f9f562f11b31520c2a2a6e4",
					"type": "interaction",
					"data": {
						"name": "Choice",
						"else": {
							"type": "reprompt",
							"randomize": false,
							"reprompts": [
								{
									"voice": "Alexa",
									"content": "Do you want to continue?"
								},
								{
									"voice": "Alexa",
									"content": "Please say yes or no."
								}
							]
						},
						"choices": [
							{
								"intent": "AMAZON.YesIntent",
								"mappings": []
							},
							{
								"intent": "AMAZON.NoIntent",
								"mappings": []
							}
						],
						"reprompt": null,
						"ports": [
							{
								"type": "",
								"target": null,
								"id": "5fde75904a001a20aa671628"
							},
							{
								"type": "",
								"target": null,
								"id": "5fde75904a001a20aa671629"
							},
							{
								"type": 2,
								"target": "5f9f562f11b31520c2a2a6e6",
								"id": "5fde75904a001a20aa67162a"
							}
						]
					}
				},
				"5f9f562f11b31520c2a2a6e5": {
					"nodeID": "5f9f562f11b31520c2a2a6e5",
					"type": "exit",
					"data": {
						"ports": []
					}
				},
				"5f9f562f11b31520c2a2a6e6": {
					"nodeID": "5f9f562f11b31520c2a2a6e6",
					"type": "block",
					"coords": [
						1295.0066750587603,
						408.4923354011805
					],
					"data": {
						"name": "Exit",
						"color": "red",
						"steps": [
							"5fde75c44a001a20aa67166d",
							"5f9f562f11b31520c2a2a6e5"
						]
					}
				},
				"5fde75c44a001a20aa67166d": {
					"nodeID": "5fde75c44a001a20aa67166d",
					"type": "speak",
					"data": {
						"randomize": false,
						"dialogs": [
							{
								"voice": "Alexa",
								"content": "Bye for now."
							}
						],
						"ports": [
							{
								"type": "",
								"target": "5f9f562f11b31520c2a2a6e5",
								"id": "5fde75c44a001a20aa671670"
							}
						]
					}
				}
			},
			"children": [],
			"versionID": "604fb4535e10aa001b8f200e",
			"creatorID": 55093,
			"modified": 1615836243
		},
		"604fb4537dbea8004948e246": {
			"_id": "604fb4537dbea8004948e246",
			"name": "ROOT",
			"offsetX": 183.19693606745994,
			"offsetY": 140.00923439114166,
			"zoom": 28.520046699098028,
			"variables": [],
			"nodes": {
				"5f9f562f11b31520c2a2a6de": {
					"nodeID": "5f9f562f11b31520c2a2a6de",
					"type": "start",
					"coords": [
						-1.6452313544210142,
						-362.16489255811683
					],
					"data": {
						"name": "Start",
						"color": "standard",
						"ports": [
							{
								"type": "",
								"target": "60360e69d2edd91b9d90c00a",
								"id": "5fde6fac5bc1c56319fad39b"
							}
						],
						"steps": [
							"5f9f562f11b31520c2a2a6df",
							"5f9f562f11b31520c2a2a6e0",
							"5fde6fb05bc1c56319fad3a0",
							"5ff4e3ca0b705cf6befcf4ce"
						]
					}
				},
				"5f9f562f11b31520c2a2a6df": {
					"nodeID": "5f9f562f11b31520c2a2a6df",
					"type": "command",
					"data": {
						"name": "Help",
						"intent": "AMAZON.HelpIntent",
						"diagramID": "604fb4537dbea8004948e254",
						"mappings": [],
						"next": null,
						"ports": []
					}
				},
				"5f9f562f11b31520c2a2a6e0": {
					"nodeID": "5f9f562f11b31520c2a2a6e0",
					"type": "command",
					"data": {
						"name": "Stop",
						"intent": "AMAZON.StopIntent",
						"diagramID": "604fb4537dbea8004948e247",
						"mappings": [],
						"next": null,
						"ports": []
					}
				},
				"5fde6fb05bc1c56319fad3a0": {
					"nodeID": "5fde6fb05bc1c56319fad3a0",
					"type": "command",
					"data": {
						"name": "Cancel",
						"intent": "AMAZON.CancelIntent",
						"diagramID": "604fb4537dbea8004948e247",
						"mappings": [],
						"next": null,
						"ports": []
					}
				},
				"5fe9ed8555a6159ee6d98fd9": {
					"nodeID": "5fe9ed8555a6159ee6d98fd9",
					"type": "speak",
					"data": {
						"randomize": false,
						"dialogs": [
							{
								"voice": "Alexa",
								"content": "Welcome to the ARIC Study's Alexa Skill! With this skill, ARIC can check up on your health at times that are convenient to you. Using alexa, you will be able to make appointments, report your symptoms, and ask questions without contacting ARIC. I will start off by setting up a time to check-in on you. Then, I will begin to ask a few questions about your health. All in all, this should take about ten minutes. Lets get started. <break strength=\"x-strong\" />"
							}
						],
						"ports": [
							{
								"type": "",
								"target": "5fe9edb355a6159ee6d98ffb",
								"id": "5fe9ed8555a6159ee6d98fda"
							}
						]
					}
				},
				"5fe9ed8555a6159ee6d98fcd": {
					"nodeID": "5fe9ed8555a6159ee6d98fcd",
					"type": "block",
					"coords": [
						1699.8641214280592,
						-358.14333795665937
					],
					"data": {
						"name": "First Time User",
						"color": "standard",
						"steps": [
							"5fe9ed8555a6159ee6d98fd9",
							"5fe9edb355a6159ee6d98ffb",
							"601a16eab0f5e32def4d647a"
						]
					}
				},
				"5fe9edb355a6159ee6d98ffb": {
					"nodeID": "5fe9edb355a6159ee6d98ffb",
					"type": "flow",
					"data": {
						"diagramID": "604fb4537dbea8004948e251",
						"variableMap": null,
						"ports": [
							{
								"type": "",
								"target": "601a16eab0f5e32def4d647a",
								"id": "5fe9edb355a6159ee6d98ffe"
							}
						]
					}
				},
				"5fe9ef5a55a6159ee6d9910f": {
					"nodeID": "5fe9ef5a55a6159ee6d9910f",
					"type": "speak",
					"data": {
						"randomize": false,
						"dialogs": [
							{
								"voice": "Alexa",
								"content": "I understand that you recently tested positive for COVID-19, is that right?"
							}
						],
						"ports": [
							{
								"type": "",
								"target": "5fe9ef6155a6159ee6d9911a",
								"id": "5fe9ef5a55a6159ee6d99111"
							}
						]
					}
				},
				"5fe9ef5a55a6159ee6d99112": {
					"nodeID": "5fe9ef5a55a6159ee6d99112",
					"type": "block",
					"coords": [
						2662.9931553115434,
						-170.34758735242886
					],
					"data": {
						"name": "CConfirm",
						"color": "standard",
						"steps": [
							"5fe9ef5a55a6159ee6d9910f",
							"5fe9ef6155a6159ee6d9911a"
						]
					}
				},
				"5fe9ef6155a6159ee6d9911a": {
					"nodeID": "5fe9ef6155a6159ee6d9911a",
					"type": "interaction",
					"data": {
						"name": "Choice",
						"else": {
							"type": "reprompt",
							"randomize": false,
							"reprompts": [
								{
									"voice": "Alexa",
									"content": "Hmm... I didn't understand that. I was looking for an answer of yes or no."
								},
								{
									"voice": "Alexa",
									"content": "Hmm. I still did not get that. If you would like to hear my question again, please say, \"Could you repeat that?\" Otherwise, please answer with yes or no."
								}
							]
						},
						"choices": [
							{
								"intent": "AMAZON.YesIntent",
								"mappings": []
							},
							{
								"intent": "AMAZON.NoIntent",
								"mappings": []
							}
						],
						"reprompt": null,
						"chips": null,
						"ports": [
							{
								"type": "",
								"target": null,
								"id": "5fe9ef6155a6159ee6d9911d"
							},
							{
								"type": "",
								"target": "5fe9f27555a6159ee6d99189",
								"id": "5fe9ef6155a6159ee6d9911e"
							},
							{
								"type": 2,
								"target": "5fe9f22b55a6159ee6d99133",
								"id": "5fe9f07255a6159ee6d9912a"
							}
						]
					}
				},
				"5fe9f22b55a6159ee6d99133": {
					"nodeID": "5fe9f22b55a6159ee6d99133",
					"type": "flow",
					"data": {
						"diagramID": "604fb4537dbea8004948e253",
						"variableMap": null,
						"ports": [
							{
								"type": "",
								"target": null,
								"id": "5fe9f22b55a6159ee6d99135"
							}
						]
					}
				},
				"5fe9f22b55a6159ee6d99136": {
					"nodeID": "5fe9f22b55a6159ee6d99136",
					"type": "block",
					"coords": [
						3119.6596787831204,
						-9.851982201824125
					],
					"data": {
						"name": "Block",
						"color": "red",
						"steps": [
							"5fe9f22b55a6159ee6d99133"
						]
					}
				},
				"5fe9f27555a6159ee6d9918e": {
					"nodeID": "5fe9f27555a6159ee6d9918e",
					"type": "interaction",
					"data": {
						"name": "Choice",
						"else": {
							"type": "reprompt",
							"randomize": false,
							"reprompts": [
								{
									"voice": "Alexa",
									"content": "Hmm... I didn't understand that. I was looking for an answer of yes or no."
								},
								{
									"voice": "Alexa",
									"content": "Hmm. I still did not get that. If you would like to hear my question again, please say, \"Could you repeat that?\" Otherwise, please answer with yes or no."
								}
							]
						},
						"choices": [
							{
								"intent": "AMAZON.YesIntent",
								"mappings": []
							},
							{
								"intent": "AMAZON.NoIntent",
								"mappings": []
							}
						],
						"reprompt": null,
						"chips": null,
						"ports": [
							{
								"type": "",
								"target": null,
								"id": "5fe9f27555a6159ee6d9918f"
							},
							{
								"type": "",
								"target": "5fe9f2e055a6159ee6d991ff",
								"id": "5fe9f27555a6159ee6d99190"
							},
							{
								"type": 2,
								"target": "5fe9f29955a6159ee6d9919e",
								"id": "5fe9f27555a6159ee6d99191"
							}
						]
					}
				},
				"5fe9f27555a6159ee6d9918b": {
					"nodeID": "5fe9f27555a6159ee6d9918b",
					"type": "speak",
					"data": {
						"randomize": false,
						"dialogs": [
							{
								"voice": "Alexa",
								"content": "Is it okay if I ask you a few questions about your health? "
							}
						],
						"ports": [
							{
								"type": "",
								"target": "5fe9f27555a6159ee6d9918e",
								"id": "5fe9f27555a6159ee6d9918c"
							}
						]
					}
				},
				"5fe9f27555a6159ee6d99189": {
					"nodeID": "5fe9f27555a6159ee6d99189",
					"type": "block",
					"coords": [
						3120.9096787831204,
						-339.6031574237731
					],
					"data": {
						"name": "Entry",
						"color": "standard",
						"steps": [
							"5fe9f27555a6159ee6d9918b",
							"5fe9f27555a6159ee6d9918e"
						]
					}
				},
				"5fe9f29955a6159ee6d9919e": {
					"nodeID": "5fe9f29955a6159ee6d9919e",
					"type": "flow",
					"data": {
						"diagramID": "604fb4537dbea8004948e24d",
						"variableMap": null,
						"ports": [
							{
								"type": "",
								"target": null,
								"id": "5fe9f29955a6159ee6d9919f"
							}
						]
					}
				},
				"5fe9f29955a6159ee6d9919c": {
					"nodeID": "5fe9f29955a6159ee6d9919c",
					"type": "block",
					"coords": [
						3544.5142800359154,
						-200.89794277255976
					],
					"data": {
						"name": "Block",
						"color": "red",
						"steps": [
							"5fe9f29955a6159ee6d9919e"
						]
					}
				},
				"5fe9f2e055a6159ee6d991ff": {
					"nodeID": "5fe9f2e055a6159ee6d991ff",
					"type": "flow",
					"data": {
						"diagramID": "604fb4537dbea8004948e25b",
						"variableMap": null,
						"ports": [
							{
								"type": "",
								"target": "6020706ce8d06e389ce199df",
								"id": "5fe9f2e055a6159ee6d99201"
							}
						]
					}
				},
				"5fe9f2e055a6159ee6d99202": {
					"nodeID": "5fe9f2e055a6159ee6d99202",
					"type": "block",
					"coords": [
						3540.5139721634214,
						-536.2080520610164
					],
					"data": {
						"name": "Symptom",
						"color": "standard",
						"steps": [
							"5fe9f2e055a6159ee6d991ff",
							"6020706ce8d06e389ce199df",
							"60207083e8d06e389ce199e8"
						]
					}
				},
				"5fe9f51c55a6159ee6d99272": {
					"nodeID": "5fe9f51c55a6159ee6d99272",
					"type": "speak",
					"data": {
						"randomize": false,
						"dialogs": [
							{
								"voice": "Alexa",
								"content": "Thanks so much for taking the time to answer these questions. It seems like you haven’t had COVID-19 symptoms for a while. That’s great news. We will continue our weekly check-ins. Would you like to be reminded before your checkins?<break strength=\"x-strong\" />"
							}
						],
						"ports": [
							{
								"type": "",
								"target": "604faa379ba3af75ec8b9379",
								"id": "5fe9f51c55a6159ee6d99274"
							}
						]
					}
				},
				"5fe9f51c55a6159ee6d99275": {
					"nodeID": "5fe9f51c55a6159ee6d99275",
					"type": "block",
					"coords": [
						3971.368970573649,
						-861.036961418792
					],
					"data": {
						"name": "Ending",
						"color": "standard",
						"steps": [
							"5fe9f51c55a6159ee6d99272",
							"604faa379ba3af75ec8b9379"
						]
					}
				},
				"5fe9f52a55a6159ee6d9927c": {
					"nodeID": "5fe9f52a55a6159ee6d9927c",
					"type": "speak",
					"data": {
						"randomize": false,
						"dialogs": [
							{
								"voice": "Alexa",
								"content": "Thanks so much for taking the time to answer these questions. We will keep checking in on you until you are symptom-free for three days in a row. <break strength=\"x-strong\" />"
							}
						],
						"ports": [
							{
								"type": "",
								"target": "5fe9f83b55a6159ee6d995f9",
								"id": "5fe9f52a55a6159ee6d9927e"
							}
						]
					}
				},
				"5fe9f61255a6159ee6d993b5": {
					"nodeID": "5fe9f61255a6159ee6d993b5",
					"type": "flow",
					"data": {
						"diagramID": "604fb4537dbea8004948e24d",
						"variableMap": null,
						"ports": [
							{
								"type": "",
								"target": null,
								"id": "5fe9f61255a6159ee6d993b6"
							}
						]
					}
				},
				"5fe9f61255a6159ee6d993b3": {
					"nodeID": "5fe9f61255a6159ee6d993b3",
					"type": "block",
					"coords": [
						3070.2066620217893,
						610.5634220931117
					],
					"data": {
						"name": "Block",
						"color": "red",
						"steps": [
							"5fe9f61255a6159ee6d993b5"
						]
					}
				},
				"5fe9f61e55a6159ee6d993c2": {
					"nodeID": "5fe9f61e55a6159ee6d993c2",
					"type": "interaction",
					"data": {
						"name": "Choice",
						"else": {
							"type": "reprompt",
							"randomize": false,
							"reprompts": [
								{
									"voice": "Alexa",
									"content": "Hmm... I didn't understand that. I was looking for an answer of yes or no."
								},
								{
									"voice": "Alexa",
									"content": "Hmm. I still did not get that. If you would like to hear my question again, please say, \"Could you repeat that?\" Otherwise, please answer with yes or no."
								}
							]
						},
						"choices": [
							{
								"intent": "AMAZON.YesIntent",
								"mappings": []
							},
							{
								"intent": "AMAZON.NoIntent",
								"mappings": []
							}
						],
						"reprompt": null,
						"chips": null,
						"ports": [
							{
								"type": "",
								"target": null,
								"id": "5fe9f61e55a6159ee6d993c3"
							},
							{
								"type": "",
								"target": "5fe9f66b55a6159ee6d993d1",
								"id": "5fe9f61e55a6159ee6d993c4"
							},
							{
								"type": 2,
								"target": "5fe9f61255a6159ee6d993b5",
								"id": "5fe9f61e55a6159ee6d993c5"
							}
						]
					}
				},
				"5fe9f61e55a6159ee6d993bf": {
					"nodeID": "5fe9f61e55a6159ee6d993bf",
					"type": "speak",
					"data": {
						"randomize": false,
						"dialogs": [
							{
								"voice": "Alexa",
								"content": "Is it okay if I ask you a few questions about your health? "
							}
						],
						"ports": [
							{
								"type": "",
								"target": "5fe9f61e55a6159ee6d993c2",
								"id": "5fe9f61e55a6159ee6d993c0"
							}
						]
					}
				},
				"5fe9f61e55a6159ee6d993bd": {
					"nodeID": "5fe9f61e55a6159ee6d993bd",
					"type": "block",
					"coords": [
						2658.956106445743,
						396.56426421416967
					],
					"data": {
						"name": "Entry",
						"color": "standard",
						"steps": [
							"5fe9f61e55a6159ee6d993bf",
							"5fe9f61e55a6159ee6d993c2"
						]
					}
				},
				"5fe9f66b55a6159ee6d993d6": {
					"nodeID": "5fe9f66b55a6159ee6d993d6",
					"type": "interaction",
					"data": {
						"name": "Choice",
						"else": {
							"type": "reprompt",
							"randomize": false,
							"reprompts": [
								{
									"voice": "Alexa",
									"content": "Hmm... I didn't understand that. I was looking for an answer of yes or no."
								},
								{
									"voice": "Alexa",
									"content": "Hmm. I still did not get that. If you would like to hear my question again, please say, \"Could you repeat that?\" Otherwise, please answer with yes or no."
								}
							]
						},
						"choices": [
							{
								"intent": "AMAZON.YesIntent",
								"mappings": []
							},
							{
								"intent": "AMAZON.NoIntent",
								"mappings": []
							}
						],
						"reprompt": null,
						"chips": null,
						"ports": [
							{
								"type": "",
								"target": null,
								"id": "5fe9f66b55a6159ee6d993d7"
							},
							{
								"type": "",
								"target": "5fe9f69d55a6159ee6d993e4",
								"id": "5fe9f66b55a6159ee6d993d8"
							},
							{
								"type": 2,
								"target": "5fe9f71355a6159ee6d99406",
								"id": "5fe9f66b55a6159ee6d993d9"
							}
						]
					}
				},
				"5fe9f66b55a6159ee6d993d3": {
					"nodeID": "5fe9f66b55a6159ee6d993d3",
					"type": "speak",
					"data": {
						"randomize": false,
						"dialogs": [
							{
								"voice": "Alexa",
								"content": "Is it okay if I start out by asking you a few questions about COVID-19?"
							}
						],
						"ports": [
							{
								"type": "",
								"target": "5fe9f66b55a6159ee6d993d6",
								"id": "5fe9f66b55a6159ee6d993d4"
							}
						]
					}
				},
				"5fe9f66b55a6159ee6d993d1": {
					"nodeID": "5fe9f66b55a6159ee6d993d1",
					"type": "block",
					"coords": [
						3070.2066620217993,
						322.1297745171464
					],
					"data": {
						"name": "Entry",
						"color": "standard",
						"steps": [
							"5fe9f66b55a6159ee6d993d3",
							"5fe9f66b55a6159ee6d993d6"
						]
					}
				},
				"5fe9f69d55a6159ee6d993e9": {
					"nodeID": "5fe9f69d55a6159ee6d993e9",
					"type": "interaction",
					"data": {
						"name": "Choice",
						"else": {
							"type": "reprompt",
							"randomize": false,
							"reprompts": [
								{
									"voice": "Alexa",
									"content": "Hmm... I didn't understand that. I was looking for an answer of yes or no."
								},
								{
									"voice": "Alexa",
									"content": "Hmm. I still did not get that. If you would like to hear my question again, please say, \"Could you repeat that?\" Otherwise, please answer with yes or no."
								}
							]
						},
						"choices": [
							{
								"intent": "AMAZON.YesIntent",
								"mappings": []
							},
							{
								"intent": "AMAZON.NoIntent",
								"mappings": []
							}
						],
						"reprompt": null,
						"chips": null,
						"ports": [
							{
								"type": "",
								"target": null,
								"id": "5fe9f69d55a6159ee6d993ea"
							},
							{
								"type": "",
								"target": "5fe9f78655a6159ee6d994a4",
								"id": "5fe9f69d55a6159ee6d993eb"
							},
							{
								"type": 2,
								"target": "5fe9f6ea55a6159ee6d993fa",
								"id": "5fe9f69d55a6159ee6d993ec"
							}
						]
					}
				},
				"5fe9f69d55a6159ee6d993e6": {
					"nodeID": "5fe9f69d55a6159ee6d993e6",
					"type": "speak",
					"data": {
						"randomize": false,
						"dialogs": [
							{
								"voice": "Alexa",
								"content": "Since the last time we spoke on {{[lastInteraction].lastInteraction}}, have you had COVID-19?"
							}
						],
						"ports": [
							{
								"type": "",
								"target": "5fe9f69d55a6159ee6d993e9",
								"id": "5fe9f69d55a6159ee6d993e7"
							}
						]
					}
				},
				"5fe9f69d55a6159ee6d993e4": {
					"nodeID": "5fe9f69d55a6159ee6d993e4",
					"type": "block",
					"coords": [
						3479.5963553554207,
						193.73027978978115
					],
					"data": {
						"name": "CEntry",
						"color": "standard",
						"steps": [
							"5ff3f35fda27927c0bb382b7",
							"5fe9f69d55a6159ee6d993e6",
							"5fe9f69d55a6159ee6d993e9"
						]
					}
				},
				"5fe9f6ea55a6159ee6d993f6": {
					"nodeID": "5fe9f6ea55a6159ee6d993f6",
					"type": "code",
					"data": {
						"code": "//code here",
						"ports": [
							{
								"type": "",
								"target": "5fe9f71355a6159ee6d99406",
								"id": "5fe9f6ea55a6159ee6d993f8"
							},
							{
								"type": "fail",
								"target": null,
								"id": "5fe9f6ea55a6159ee6d993f9"
							}
						]
					}
				},
				"5fe9f6ea55a6159ee6d993fa": {
					"nodeID": "5fe9f6ea55a6159ee6d993fa",
					"type": "block",
					"coords": [
						3874.099150749647,
						634.7546312446443
					],
					"data": {
						"name": "Stage Negative",
						"color": "standard",
						"steps": [
							"5ff87555e7b840f3a1b90ed3",
							"5fe9f6ea55a6159ee6d993f6"
						]
					}
				},
				"5fe9f71355a6159ee6d99403": {
					"nodeID": "5fe9f71355a6159ee6d99403",
					"type": "flow",
					"data": {
						"diagramID": "604fb4537dbea8004948e24a",
						"variableMap": null,
						"ports": [
							{
								"type": "",
								"target": "5fe9f83b55a6159ee6d995f9",
								"id": "5fe9f71355a6159ee6d99405"
							}
						]
					}
				},
				"5fe9f71355a6159ee6d99406": {
					"nodeID": "5fe9f71355a6159ee6d99406",
					"type": "block",
					"coords": [
						4831.550338188875,
						521.9041952537169
					],
					"data": {
						"name": "Health Check",
						"color": "standard",
						"steps": [
							"5fe9f71355a6159ee6d99403",
							"5fe9f83b55a6159ee6d995f9",
							"601a1539b0f5e32def4d6460"
						]
					}
				},
				"5fe9f78655a6159ee6d994a1": {
					"nodeID": "5fe9f78655a6159ee6d994a1",
					"type": "flow",
					"data": {
						"diagramID": "604fb4537dbea8004948e24f",
						"variableMap": null,
						"ports": [
							{
								"type": "",
								"target": "5fe9f7b855a6159ee6d99543",
								"id": "5fe9f78655a6159ee6d994a3"
							}
						]
					}
				},
				"5fe9f78655a6159ee6d994a4": {
					"nodeID": "5fe9f78655a6159ee6d994a4",
					"type": "block",
					"coords": [
						3865.687851036489,
						124.16396762085917
					],
					"data": {
						"name": "Positive",
						"color": "standard",
						"steps": [
							"5fe9f78655a6159ee6d994a1",
							"5fe9f7b855a6159ee6d99543",
							"5fe9f81c55a6159ee6d995ef"
						]
					}
				},
				"5fe9f7b855a6159ee6d99543": {
					"nodeID": "5fe9f7b855a6159ee6d99543",
					"type": "flow",
					"data": {
						"diagramID": "604fb4537dbea8004948e25b",
						"variableMap": null,
						"ports": [
							{
								"type": "",
								"target": "5fe9f81c55a6159ee6d995ef",
								"id": "5fe9f7b855a6159ee6d99546"
							}
						]
					}
				},
				"5fe9f81c55a6159ee6d995ef": {
					"nodeID": "5fe9f81c55a6159ee6d995ef",
					"type": "code",
					"data": {
						"code": "// //today's date\n// dateCheck = new Date();\n// //subtract two weeks\n// dateCheck.setDate(dateCheck.getDate()-14);\n\n// //get either answer 2 or answer 3 (whichever one is not null)\n// dateContract = questionnaire[\"newDiagnosis\"][2].value\n// if(!dateContract){\n//   dateContract = questionnaire[\"newDiagnosis\"][3].value\n// }\n// dateContract = new Date(dateContract);\n// if(dateContract < dateCheck){\n//   throw \"More than two weeks ago\"\n// }",
						"ports": [
							{
								"type": "",
								"target": "5ff876ece7b840f3a1b911db",
								"id": "5fe9f81c55a6159ee6d995f2"
							},
							{
								"type": "fail",
								"target": "5fe9f83b55a6159ee6d995f9",
								"id": "5fe9f81c55a6159ee6d995f3"
							}
						]
					}
				},
				"5fe9f83b55a6159ee6d995f9": {
					"nodeID": "5fe9f83b55a6159ee6d995f9",
					"type": "code",
					"data": {
						"code": "//Logging/Handling COVID Information",
						"ports": [
							{
								"type": "",
								"target": "601a1539b0f5e32def4d6460",
								"id": "5fe9f83b55a6159ee6d995fc"
							},
							{
								"type": "fail",
								"target": "601a1539b0f5e32def4d6460",
								"id": "5fe9f83b55a6159ee6d995fd"
							}
						]
					}
				},
				"5fe9f93e55a6159ee6d996aa": {
					"nodeID": "5fe9f93e55a6159ee6d996aa",
					"type": "interaction",
					"data": {
						"name": "Choice",
						"else": {
							"type": "reprompt",
							"randomize": false,
							"reprompts": [
								{
									"voice": "Alexa",
									"content": "Hmm... I didn't understand that. I was looking for an answer of yes or no."
								},
								{
									"voice": "Alexa",
									"content": "Hmm. I still did not get that. If you would like to hear my question again, please say, \"Could you repeat that?\" Otherwise, please answer with yes or no."
								}
							]
						},
						"choices": [
							{
								"intent": "AMAZON.YesIntent",
								"mappings": []
							},
							{
								"intent": "AMAZON.NoIntent",
								"mappings": []
							}
						],
						"reprompt": null,
						"chips": null,
						"ports": [
							{
								"type": "",
								"target": null,
								"id": "5fe9f93e55a6159ee6d996ab"
							},
							{
								"type": "",
								"target": "5fe9fcdf55a6159ee6d996ba",
								"id": "5fe9f93e55a6159ee6d996ac"
							},
							{
								"type": 2,
								"target": "5fe9fcef55a6159ee6d996c2",
								"id": "5fe9f93e55a6159ee6d996ad"
							}
						]
					}
				},
				"5fe9f93e55a6159ee6d996a7": {
					"nodeID": "5fe9f93e55a6159ee6d996a7",
					"type": "speak",
					"data": {
						"randomize": false,
						"dialogs": [
							{
								"voice": "Alexa",
								"content": "Is it okay if I ask you some questions about your mood?"
							}
						],
						"ports": [
							{
								"type": "",
								"target": "5fe9f93e55a6159ee6d996aa",
								"id": "5fe9f93e55a6159ee6d996a8"
							}
						]
					}
				},
				"5fe9f93e55a6159ee6d996a5": {
					"nodeID": "5fe9f93e55a6159ee6d996a5",
					"type": "block",
					"coords": [
						5691.798671391378,
						596.2382152258481
					],
					"data": {
						"name": "MEntry",
						"color": "standard",
						"steps": [
							"5fe9f93e55a6159ee6d996a7",
							"5fe9f93e55a6159ee6d996aa"
						]
					}
				},
				"5fe9fcdf55a6159ee6d996b7": {
					"nodeID": "5fe9fcdf55a6159ee6d996b7",
					"type": "flow",
					"data": {
						"diagramID": "604fb4537dbea8004948e252",
						"variableMap": null,
						"ports": [
							{
								"type": "",
								"target": "5fe9fcef55a6159ee6d996c2",
								"id": "5fe9fcdf55a6159ee6d996b9"
							}
						]
					}
				},
				"5fe9fcdf55a6159ee6d996ba": {
					"nodeID": "5fe9fcdf55a6159ee6d996ba",
					"type": "block",
					"coords": [
						6127.550632447446,
						726.9946451151482
					],
					"data": {
						"name": "Mental Health",
						"color": "standard",
						"steps": [
							"5fe9fcdf55a6159ee6d996b7",
							"5fe9fcef55a6159ee6d996c2"
						]
					}
				},
				"5fe9fcef55a6159ee6d996c2": {
					"nodeID": "5fe9fcef55a6159ee6d996c2",
					"type": "code",
					"data": {
						"code": "//Stage Mental Health",
						"ports": [
							{
								"type": "",
								"target": "5fe9fd6c55a6159ee6d99786",
								"id": "5fe9fcef55a6159ee6d996c5"
							},
							{
								"type": "fail",
								"target": null,
								"id": "5fe9fcef55a6159ee6d996c6"
							}
						]
					}
				},
				"5fe9fd6c55a6159ee6d99792": {
					"nodeID": "5fe9fd6c55a6159ee6d99792",
					"type": "interaction",
					"data": {
						"name": "Choice",
						"else": {
							"type": "reprompt",
							"randomize": false,
							"reprompts": [
								{
									"voice": "Alexa",
									"content": "Hmm... I didn't understand that. I was looking for an answer of yes or no."
								},
								{
									"voice": "Alexa",
									"content": "Hmm. I still did not get that. If you would like to hear my question again, please say, \"Could you repeat that?\" Otherwise, please answer with yes or no."
								}
							]
						},
						"choices": [
							{
								"intent": "AMAZON.YesIntent",
								"mappings": []
							},
							{
								"intent": "AMAZON.NoIntent",
								"mappings": []
							}
						],
						"reprompt": null,
						"chips": null,
						"ports": [
							{
								"type": "",
								"target": null,
								"id": "5fe9fd6c55a6159ee6d99793"
							},
							{
								"type": "",
								"target": "5fe9fd6c55a6159ee6d99784",
								"id": "5fe9fd6c55a6159ee6d99794"
							},
							{
								"type": 2,
								"target": "5fe9fd6c55a6159ee6d9978b",
								"id": "5fe9fd6c55a6159ee6d99795"
							}
						]
					}
				},
				"5fe9fd6c55a6159ee6d9978f": {
					"nodeID": "5fe9fd6c55a6159ee6d9978f",
					"type": "speak",
					"data": {
						"randomize": false,
						"dialogs": [
							{
								"voice": "Alexa",
								"content": "Thanks so much for taking the time to answer these questions. Would you be willing to give ARIC some feedback?"
							}
						],
						"ports": [
							{
								"type": "",
								"target": "5fe9fd6c55a6159ee6d99792",
								"id": "5fe9fd6c55a6159ee6d99790"
							}
						]
					}
				},
				"5fe9fd6c55a6159ee6d9978b": {
					"nodeID": "5fe9fd6c55a6159ee6d9978b",
					"type": "code",
					"data": {
						"code": "//Stage Feedback",
						"ports": [
							{
								"type": "",
								"target": "601a14e2b0f5e32def4d6457",
								"id": "5fe9fd6c55a6159ee6d9978c"
							},
							{
								"type": "fail",
								"target": "601a14e2b0f5e32def4d6457",
								"id": "5fe9fd6c55a6159ee6d9978d"
							}
						]
					}
				},
				"5fe9fd6c55a6159ee6d99788": {
					"nodeID": "5fe9fd6c55a6159ee6d99788",
					"type": "flow",
					"data": {
						"diagramID": "604fb4537dbea8004948e255",
						"variableMap": null,
						"ports": [
							{
								"type": "",
								"target": "5fe9fd6c55a6159ee6d9978b",
								"id": "5fe9fd6c55a6159ee6d99789"
							}
						]
					}
				},
				"5fe9fd6c55a6159ee6d99786": {
					"nodeID": "5fe9fd6c55a6159ee6d99786",
					"type": "block",
					"coords": [
						6538.369922379352,
						601.6058223507421
					],
					"data": {
						"name": "FEntry",
						"color": "standard",
						"steps": [
							"601a1650b0f5e32def4d6473",
							"5fe9fd6c55a6159ee6d9978f",
							"5fe9fd6c55a6159ee6d99792"
						]
					}
				},
				"5fe9fd6c55a6159ee6d99784": {
					"nodeID": "5fe9fd6c55a6159ee6d99784",
					"type": "block",
					"coords": [
						6983.3358961206195,
						677.0781761288474
					],
					"data": {
						"name": "Feedback",
						"color": "standard",
						"steps": [
							"5fe9fd6c55a6159ee6d99788",
							"5fe9fd6c55a6159ee6d9978b",
							"601a14e2b0f5e32def4d6457"
						]
					}
				},
				"5ff3c719073bf193e32d7193": {
					"nodeID": "5ff3c719073bf193e32d7193",
					"type": "block",
					"coords": [
						1207.4099071455285,
						-361.2389973251709
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"60206c84e8d06e389ce1967c",
							"601217fd25343e75f7bedac3"
						]
					}
				},
				"5ff3f35fda27927c0bb382b7": {
					"nodeID": "5ff3f35fda27927c0bb382b7",
					"type": "flow",
					"data": {
						"diagramID": "604fb4537dbea8004948e24b",
						"variableMap": null,
						"ports": [
							{
								"type": "",
								"target": "5fe9f69d55a6159ee6d993e6",
								"id": "5ff3f35fda27927c0bb382ba"
							}
						]
					}
				},
				"5ff4e3ca0b705cf6befcf4ce": {
					"nodeID": "5ff4e3ca0b705cf6befcf4ce",
					"type": "command",
					"data": {
						"name": "Reschedule Flow",
						"intent": "3kan3y5f",
						"diagramID": "604fb4537dbea8004948e257",
						"mappings": [],
						"next": null,
						"ports": []
					}
				},
				"5ff714d7b187aa94d2180759": {
					"nodeID": "5ff714d7b187aa94d2180759",
					"type": "speak",
					"data": {
						"randomize": false,
						"dialogs": [
							{
								"voice": "Alexa",
								"content": "Thank you very much for your time today.  I’ll be contacting you again soon.  In the meantime, please remember to follow the CDC guidelines to protect yourself and others from COVID-19.  These include:  washing your hands often, wearing a mask, avoiding crowds, and staying at least six feet away from others who don’t live with you.  Please take good care of yourself and have a great day!"
							}
						],
						"ports": [
							{
								"type": "",
								"target": null,
								"id": "5ff714d7b187aa94d218075b"
							}
						]
					}
				},
				"5ff714d7b187aa94d218075c": {
					"nodeID": "5ff714d7b187aa94d218075c",
					"type": "block",
					"coords": [
						7432.006938137733,
						687.9286261875774
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"5ff714d7b187aa94d2180759"
						]
					}
				},
				"5ff7316fb187aa94d2180b01": {
					"nodeID": "5ff7316fb187aa94d2180b01",
					"type": "block",
					"coords": [
						4383.96526758891,
						-151.7883961545758
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"5fe9f52a55a6159ee6d9927c"
						]
					}
				},
				"5ff73232b187aa94d2180b1b": {
					"nodeID": "5ff73232b187aa94d2180b1b",
					"type": "interaction",
					"data": {
						"name": "Choice",
						"else": {
							"type": "reprompt",
							"randomize": false,
							"reprompts": [
								{
									"voice": "Alexa",
									"content": ""
								}
							]
						},
						"choices": [
							{
								"intent": "AMAZON.YesIntent",
								"mappings": []
							},
							{
								"intent": "AMAZON.NoIntent",
								"mappings": []
							}
						],
						"reprompt": null,
						"chips": null,
						"ports": [
							{
								"type": "",
								"target": null,
								"id": "5ff73232b187aa94d2180b1c"
							},
							{
								"type": "",
								"target": "60499d0dd008e0b9ee8494d8",
								"id": "5ff73232b187aa94d2180b1d"
							},
							{
								"type": 2,
								"target": "5ff732e2b187aa94d2180b40",
								"id": "5ff73232b187aa94d2180b1e"
							}
						]
					}
				},
				"5ff73232b187aa94d2180b18": {
					"nodeID": "5ff73232b187aa94d2180b18",
					"type": "speak",
					"data": {
						"randomize": false,
						"dialogs": [
							{
								"voice": "Alexa",
								"content": "Thank you for checking in with us for two weeks. As you have not been asymptomatic for three days in a row, we will continue to check-in with you. Would you like to transition to a weekly check-in instead?"
							}
						],
						"ports": [
							{
								"type": "",
								"target": "5ff73232b187aa94d2180b1b",
								"id": "5ff73232b187aa94d2180b19"
							}
						]
					}
				},
				"5ff73232b187aa94d2180b16": {
					"nodeID": "5ff73232b187aa94d2180b16",
					"type": "block",
					"coords": [
						4380.161192455979,
						-536.5591533779194
					],
					"data": {
						"name": "Continuing",
						"color": "standard",
						"steps": [
							"5ff73232b187aa94d2180b18",
							"5ff73232b187aa94d2180b1b"
						]
					}
				},
				"5ff73286b187aa94d2180b2a": {
					"nodeID": "5ff73286b187aa94d2180b2a",
					"type": "speak",
					"data": {
						"randomize": false,
						"dialogs": [
							{
								"voice": "Alexa",
								"content": "Okay. We will continue to talk to you on {{[res].res}} for your check-ins."
							}
						],
						"ports": [
							{
								"type": "",
								"target": "5fe9f83b55a6159ee6d995f9",
								"id": "5ff73286b187aa94d2180b2b"
							}
						]
					}
				},
				"5ff73286b187aa94d2180b28": {
					"nodeID": "5ff73286b187aa94d2180b28",
					"type": "block",
					"coords": [
						4801.985211521895,
						-817.5255909433411
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"60499d0dd008e0b9ee8494d8",
							"60499b95b22cd43ae29d173a",
							"6028776c2818e16673da2fbe",
							"60499d68d008e0b9ee8494ed"
						]
					}
				},
				"5ff732e2b187aa94d2180b40": {
					"nodeID": "5ff732e2b187aa94d2180b40",
					"type": "speak",
					"data": {
						"randomize": false,
						"dialogs": [
							{
								"voice": "Alexa",
								"content": "Okay. Speak to you tomorrow!"
							}
						],
						"ports": [
							{
								"type": "",
								"target": "5fe9f83b55a6159ee6d995f9",
								"id": "5ff732e2b187aa94d2180b41"
							}
						]
					}
				},
				"5ff732e2b187aa94d2180b3a": {
					"nodeID": "5ff732e2b187aa94d2180b3a",
					"type": "block",
					"coords": [
						4791.001306813544,
						-268.37185650562134
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"5ff732e2b187aa94d2180b40"
						]
					}
				},
				"5ff766f0e7b840f3a1b8dd76": {
					"nodeID": "5ff766f0e7b840f3a1b8dd76",
					"type": "intent",
					"data": {
						"intent": "3kan3y5f",
						"mappings": [],
						"ports": [
							{
								"type": "",
								"target": "60360ac1d2edd91b9d90bfe1",
								"id": "5ff766f0e7b840f3a1b8dd77"
							}
						]
					}
				},
				"5ff766f0e7b840f3a1b8dd78": {
					"nodeID": "5ff766f0e7b840f3a1b8dd78",
					"type": "block",
					"coords": [
						24.93741298004929,
						841.0516261085352
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"5ff766f0e7b840f3a1b8dd76"
						]
					}
				},
				"5ff7673ee7b840f3a1b8dd7e": {
					"nodeID": "5ff7673ee7b840f3a1b8dd7e",
					"type": "intent",
					"data": {
						"intent": "kiap3yhz",
						"mappings": [],
						"ports": [
							{
								"type": "",
								"target": "60360e6dd2edd91b9d90c014",
								"id": "5ff7673ee7b840f3a1b8dd7f"
							}
						]
					}
				},
				"5ff7673ee7b840f3a1b8dd80": {
					"nodeID": "5ff7673ee7b840f3a1b8dd80",
					"type": "block",
					"coords": [
						34.11203569681492,
						1081.9535131155108
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"5ff7673ee7b840f3a1b8dd7e"
						]
					}
				},
				"5ff7675ee7b840f3a1b8dd8c": {
					"nodeID": "5ff7675ee7b840f3a1b8dd8c",
					"type": "speak",
					"data": {
						"randomize": false,
						"dialogs": [
							{
								"voice": "Alexa",
								"content": "Hey there! Since the last time we spoke on {{[lastInteraction].lastInteraction}} have you had COVID-19?"
							}
						],
						"ports": [
							{
								"type": "",
								"target": "5ff8a6db393d3fb0af48760e",
								"id": "5ff7675ee7b840f3a1b8dd8d"
							}
						]
					}
				},
				"5ff7675ee7b840f3a1b8dd87": {
					"nodeID": "5ff7675ee7b840f3a1b8dd87",
					"type": "block",
					"coords": [
						1501.5107193014683,
						999.903713471063
					],
					"data": {
						"name": "CEntry",
						"color": "standard",
						"steps": [
							"5ff7675ee7b840f3a1b8dd8c",
							"5ff8a6db393d3fb0af48760e"
						]
					}
				},
				"5ff767c2e7b840f3a1b8ddba": {
					"nodeID": "5ff767c2e7b840f3a1b8ddba",
					"type": "flow",
					"data": {
						"diagramID": "604fb4537dbea8004948e250",
						"variableMap": null,
						"ports": [
							{
								"type": "",
								"target": "60206c84e8d06e389ce1967c",
								"id": "5ff767c2e7b840f3a1b8ddbc"
							}
						]
					}
				},
				"5ff767c2e7b840f3a1b8ddbd": {
					"nodeID": "5ff767c2e7b840f3a1b8ddbd",
					"type": "block",
					"coords": [
						772.5278103380931,
						-360.86107304620214
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"5ff767c2e7b840f3a1b8ddba"
						]
					}
				},
				"5ff767f9e7b840f3a1b8e02c": {
					"nodeID": "5ff767f9e7b840f3a1b8e02c",
					"type": "flow",
					"data": {
						"diagramID": "604fb4537dbea8004948e250",
						"variableMap": null,
						"ports": [
							{
								"type": "",
								"target": "5ff7675ee7b840f3a1b8dd8c",
								"id": "5ff767f9e7b840f3a1b8e02d"
							}
						]
					}
				},
				"5ff767f9e7b840f3a1b8e02a": {
					"nodeID": "5ff767f9e7b840f3a1b8e02a",
					"type": "block",
					"coords": [
						929.720447873493,
						999.9334034817709
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"5ff767f9e7b840f3a1b8e02c"
						]
					}
				},
				"5ff7680be7b840f3a1b8e035": {
					"nodeID": "5ff7680be7b840f3a1b8e035",
					"type": "speak",
					"data": {
						"randomize": false,
						"dialogs": [
							{
								"voice": "Alexa",
								"content": "Okay. Goodbye!"
							}
						],
						"ports": [
							{
								"type": "",
								"target": null,
								"id": "5ff7680be7b840f3a1b8e037"
							}
						]
					}
				},
				"5ff7680be7b840f3a1b8e038": {
					"nodeID": "5ff7680be7b840f3a1b8e038",
					"type": "block",
					"coords": [
						1926.0553287009602,
						1207.5917960957895
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"5ff7680be7b840f3a1b8e035"
						]
					}
				},
				"5ff7756ce7b840f3a1b8f79d": {
					"nodeID": "5ff7756ce7b840f3a1b8f79d",
					"type": "speak",
					"data": {
						"randomize": false,
						"dialogs": [
							{
								"voice": "Alexa",
								"content": "Thank you for speaking with me! Thank you very much for your time today.  I’ll be contacting you again soon.  In the meantime, please remember to follow the CDC guidelines to protect yourself and others from COVID-19.  These include:  washing your hands often, wearing a mask, avoiding crowds, and staying at least six feet away from others who don’t live with you.  Please take good care of yourself and have a great day!"
							}
						],
						"ports": [
							{
								"type": "",
								"target": null,
								"id": "5ff7756ce7b840f3a1b8f79e"
							}
						]
					}
				},
				"5ff7756ce7b840f3a1b8f79b": {
					"nodeID": "5ff7756ce7b840f3a1b8f79b",
					"type": "block",
					"coords": [
						2749.6804297694102,
						1064.2009437354202
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"601a156eb0f5e32def4d6469",
							"5ff7756ce7b840f3a1b8f79d"
						]
					}
				},
				"5ff87555e7b840f3a1b90ed3": {
					"nodeID": "5ff87555e7b840f3a1b90ed3",
					"type": "speak",
					"data": {
						"randomize": false,
						"dialogs": [
							{
								"voice": "Alexa",
								"content": "OK. Please let us know if you contract COVID-19, since the ARIC Study is working hard to understand the impact of the pandemic on our participants."
							}
						],
						"ports": [
							{
								"type": "",
								"target": "5fe9f6ea55a6159ee6d993f6",
								"id": "5ff87555e7b840f3a1b90ed6"
							}
						]
					}
				},
				"5ff876ece7b840f3a1b911db": {
					"nodeID": "5ff876ece7b840f3a1b911db",
					"type": "flow",
					"data": {
						"diagramID": "604fb4537dbea8004948e24c",
						"variableMap": null,
						"ports": [
							{
								"type": "",
								"target": "5fe9f83b55a6159ee6d995f9",
								"id": "5ff876ece7b840f3a1b911dd"
							}
						]
					}
				},
				"5ff876ece7b840f3a1b911de": {
					"nodeID": "5ff876ece7b840f3a1b911de",
					"type": "block",
					"coords": [
						4240.303032130154,
						301.32042777833584
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"5ff876ece7b840f3a1b911db"
						]
					}
				},
				"5ff88610e7b840f3a1b91370": {
					"nodeID": "5ff88610e7b840f3a1b91370",
					"type": "flow",
					"data": {
						"diagramID": "604fb4537dbea8004948e24c",
						"variableMap": null,
						"ports": [
							{
								"type": "",
								"target": "601a156eb0f5e32def4d6469",
								"id": "5ff88610e7b840f3a1b91371"
							}
						]
					}
				},
				"5ff88610e7b840f3a1b9136c": {
					"nodeID": "5ff88610e7b840f3a1b9136c",
					"type": "block",
					"coords": [
						2326.824006486271,
						1006.5069247134855
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"5ff88610e7b840f3a1b91370"
						]
					}
				},
				"5ff8a4e6393d3fb0af48702d": {
					"nodeID": "5ff8a4e6393d3fb0af48702d",
					"type": "code",
					"data": {
						"code": "// flag = 0\n\n// //today's date\n// dateCheck = new Date();\n// //subtract two weeks\n// dateCheck.setDate(dateCheck.getDate()-14);\n\n// //get either answer 2 or answer 3 (whichever one is not null)\n// dateContract = questionnaire[\"newDiagnosis\"][2].value\n// if(!dateContract){\n//   dateContract = questionnaire[\"newDiagnosis\"][3].value\n// }\n// dateContract = new Date(dateContract);\n// if(dateContract < dateCheck){\n//   flag = 1\n// }\nflag = 1",
						"ports": [
							{
								"type": "",
								"target": "5ff8a78a393d3fb0af48761c",
								"id": "5ff8a4e6393d3fb0af48702e"
							},
							{
								"type": "fail",
								"target": "5ff8a78a393d3fb0af48761c",
								"id": "5ff8a4e6393d3fb0af48702f"
							}
						]
					}
				},
				"5ff8a4e6393d3fb0af48702a": {
					"nodeID": "5ff8a4e6393d3fb0af48702a",
					"type": "flow",
					"data": {
						"diagramID": "604fb4537dbea8004948e25b",
						"variableMap": null,
						"ports": [
							{
								"type": "",
								"target": "5ff8a4e6393d3fb0af48702d",
								"id": "5ff8a4e6393d3fb0af48702b"
							}
						]
					}
				},
				"5ff8a4e6393d3fb0af487027": {
					"nodeID": "5ff8a4e6393d3fb0af487027",
					"type": "flow",
					"data": {
						"diagramID": "604fb4537dbea8004948e24f",
						"variableMap": null,
						"ports": [
							{
								"type": "",
								"target": "5ff8a4e6393d3fb0af48702a",
								"id": "5ff8a4e6393d3fb0af487028"
							}
						]
					}
				},
				"5ff8a4e6393d3fb0af487023": {
					"nodeID": "5ff8a4e6393d3fb0af487023",
					"type": "block",
					"coords": [
						1923.6633969413963,
						815.8892619211591
					],
					"data": {
						"name": "Positive",
						"color": "standard",
						"steps": [
							"5ff8a4e6393d3fb0af487027",
							"5ff8a4e6393d3fb0af48702a",
							"5ff8a4e6393d3fb0af48702d",
							"5ff8a78a393d3fb0af48761c"
						]
					}
				},
				"5ff8a6db393d3fb0af48760e": {
					"nodeID": "5ff8a6db393d3fb0af48760e",
					"type": "interaction",
					"data": {
						"name": "Choice",
						"else": {
							"type": "reprompt",
							"randomize": false,
							"reprompts": [
								{
									"voice": "Alexa",
									"content": "If you had COVID since we last spoke, say \"yes\""
								},
								{
									"voice": "Alexa",
									"content": "I'm looking for a \"yes\" or \"no\" in this question."
								},
								{
									"voice": "Alexa",
									"content": "Since the last time we spoke, have you had COVID19?"
								}
							]
						},
						"choices": [
							{
								"intent": "AMAZON.YesIntent",
								"mappings": []
							},
							{
								"intent": "AMAZON.NoIntent",
								"mappings": []
							}
						],
						"reprompt": null,
						"chips": null,
						"ports": [
							{
								"type": "",
								"target": null,
								"id": "5ff8a6db393d3fb0af487611"
							},
							{
								"type": "",
								"target": "5ff8a4e6393d3fb0af487027",
								"id": "5ff8a6db393d3fb0af487612"
							},
							{
								"type": 2,
								"target": "5ff7680be7b840f3a1b8e035",
								"id": "5ff8a6e1393d3fb0af487616"
							}
						]
					}
				},
				"5ff8a78a393d3fb0af48761c": {
					"nodeID": "5ff8a78a393d3fb0af48761c",
					"type": "if",
					"data": {
						"expressions": [
							{
								"type": "variable",
								"value": "flag",
								"depth": 0
							}
						],
						"ports": [
							{
								"type": "",
								"target": "601a156eb0f5e32def4d6469",
								"id": "5ff8a78a393d3fb0af48761e"
							},
							{
								"type": "",
								"target": "5ff88610e7b840f3a1b91370",
								"id": "5ff8a78a393d3fb0af48761f"
							}
						]
					}
				},
				"5ff8f09ea13f5c2464ab8a26": {
					"nodeID": "5ff8f09ea13f5c2464ab8a26",
					"type": "flow",
					"data": {
						"diagramID": "604fb4537dbea8004948e257",
						"variableMap": null,
						"ports": [
							{
								"type": "",
								"target": null,
								"id": "5ff8f09ea13f5c2464ab8a28"
							}
						]
					}
				},
				"5ff8f09ea13f5c2464ab8a29": {
					"nodeID": "5ff8f09ea13f5c2464ab8a29",
					"type": "block",
					"coords": [
						774.7150134470895,
						340.4436070951532
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"5ff8f09ea13f5c2464ab8a26"
						]
					}
				},
				"601217fd25343e75f7bedac3": {
					"nodeID": "601217fd25343e75f7bedac3",
					"type": "if",
					"data": {
						"expressions": [
							{
								"type": "not",
								"value": {
									"type": "variable",
									"value": "flag",
									"depth": 1
								},
								"depth": 0
							}
						],
						"ports": [
							{
								"type": "",
								"target": "6032cdc54e7285bfd4ca6489",
								"id": "601217fd25343e75f7bedac6"
							},
							{
								"type": "",
								"target": "5fe9ed8555a6159ee6d98fd9",
								"id": "601217fd25343e75f7bedac7"
							}
						]
					}
				},
				"601a14e2b0f5e32def4d6457": {
					"nodeID": "601a14e2b0f5e32def4d6457",
					"type": "directive",
					"data": {
						"directive": "{\n  \"query\": \"update\"\n}",
						"ports": [
							{
								"type": "",
								"target": "5ff714d7b187aa94d2180759",
								"id": "601a14e2b0f5e32def4d645a"
							}
						]
					}
				},
				"601a1539b0f5e32def4d6460": {
					"nodeID": "601a1539b0f5e32def4d6460",
					"type": "directive",
					"data": {
						"directive": "{\n  \"query\": \"update\"\n}",
						"ports": [
							{
								"type": "",
								"target": "60288156df1a1c3ef52a276a",
								"id": "601a1539b0f5e32def4d6463"
							}
						]
					}
				},
				"601a156eb0f5e32def4d6469": {
					"nodeID": "601a156eb0f5e32def4d6469",
					"type": "directive",
					"data": {
						"directive": "{\n  \"query\": \"update\"\n}",
						"ports": [
							{
								"type": "",
								"target": "5ff7756ce7b840f3a1b8f79d",
								"id": "601a156eb0f5e32def4d646c"
							}
						]
					}
				},
				"601a1650b0f5e32def4d6473": {
					"nodeID": "601a1650b0f5e32def4d6473",
					"type": "directive",
					"data": {
						"directive": "{\n  \"query\": \"update\"\n}",
						"ports": [
							{
								"type": "",
								"target": "5fe9fd6c55a6159ee6d9978f",
								"id": "601a1650b0f5e32def4d6476"
							}
						]
					}
				},
				"601a16eab0f5e32def4d647a": {
					"nodeID": "601a16eab0f5e32def4d647a",
					"type": "directive",
					"data": {
						"directive": "{\n  \"query\": \"update\"\n}",
						"ports": [
							{
								"type": "",
								"target": "60206eafe8d06e389ce199a7",
								"id": "601a16eab0f5e32def4d647d"
							}
						]
					}
				},
				"60206c84e8d06e389ce1967c": {
					"nodeID": "60206c84e8d06e389ce1967c",
					"type": "directive",
					"data": {
						"directive": "{\n  \"query\": [\"SELECT \\\"productive\\\" FROM \\\"checkin\\\" WHERE \\\"userid\\\" = $1 ORDER BY \\\"productive\\\" DESC;\"],\n  \"params\": [\"_cognitoId\"],\n  \"to\": \"flag\"\n}",
						"ports": [
							{
								"type": "",
								"target": "601217fd25343e75f7bedac3",
								"id": "60206c84e8d06e389ce1967f"
							}
						]
					}
				},
				"60206eafe8d06e389ce199a7": {
					"nodeID": "60206eafe8d06e389ce199a7",
					"type": "directive",
					"data": {
						"directive": "{\n  \"query\": [\"SELECT \\\"dailystatus\\\" FROM \\\"users\\\" WHERE \\\"userid\\\" = $1;\"],\n  \"params\": [\"_cognitoId\"],\n  \"to\": \"flag\"\n}",
						"ports": [
							{
								"type": "",
								"target": "60206f4be8d06e389ce199b2",
								"id": "60206eafe8d06e389ce199a9"
							}
						]
					}
				},
				"60206eafe8d06e389ce199aa": {
					"nodeID": "60206eafe8d06e389ce199aa",
					"type": "block",
					"coords": [
						2187.198779974716,
						212.1181667426027
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"60206eafe8d06e389ce199a7",
							"60206f4be8d06e389ce199b2"
						]
					}
				},
				"60206f4be8d06e389ce199b2": {
					"nodeID": "60206f4be8d06e389ce199b2",
					"type": "if",
					"data": {
						"expressions": [
							{
								"type": "not",
								"value": {
									"type": "not",
									"value": {
										"type": "variable",
										"value": "flag",
										"depth": 2
									},
									"depth": 1
								},
								"depth": 0
							}
						],
						"ports": [
							{
								"type": "",
								"target": "5fe9f61e55a6159ee6d993bf",
								"id": "60206f4be8d06e389ce199b5"
							},
							{
								"type": "",
								"target": "5fe9ef5a55a6159ee6d9910f",
								"id": "60206f4be8d06e389ce199b6"
							}
						]
					}
				},
				"6020706ce8d06e389ce199df": {
					"nodeID": "6020706ce8d06e389ce199df",
					"type": "flow",
					"data": {
						"diagramID": "604fb4537dbea8004948e25a",
						"variableMap": null,
						"ports": [
							{
								"type": "",
								"target": "60207083e8d06e389ce199e8",
								"id": "6020706ce8d06e389ce199e2"
							}
						]
					}
				},
				"60207083e8d06e389ce199e8": {
					"nodeID": "60207083e8d06e389ce199e8",
					"type": "if",
					"data": {
						"expressions": [
							{
								"type": "not",
								"value": {
									"type": "variable",
									"value": "flag",
									"depth": 1
								},
								"depth": 0
							}
						],
						"ports": [
							{
								"type": "",
								"target": "6028770e2818e16673da2dde",
								"id": "60207083e8d06e389ce199eb"
							},
							{
								"type": "",
								"target": "5fe9f51c55a6159ee6d99272",
								"id": "60207083e8d06e389ce199ec"
							}
						]
					}
				},
				"6028770e2818e16673da2dde": {
					"nodeID": "6028770e2818e16673da2dde",
					"type": "if",
					"data": {
						"expressions": [
							{
								"type": "not",
								"value": {
									"type": "variable",
									"value": "mFlag",
									"depth": 1
								},
								"depth": 0
							}
						],
						"ports": [
							{
								"type": "",
								"target": "5fe9f52a55a6159ee6d9927c",
								"id": "6028770e2818e16673da2de0"
							},
							{
								"type": "",
								"target": "5ff73232b187aa94d2180b18",
								"id": "6028770e2818e16673da2de1"
							}
						]
					}
				},
				"6028770e2818e16673da2de2": {
					"nodeID": "6028770e2818e16673da2de2",
					"type": "block",
					"coords": [
						3985.449075363562,
						-362.5929686721846
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"6028770e2818e16673da2dde"
						]
					}
				},
				"6028776c2818e16673da2fbe": {
					"nodeID": "6028776c2818e16673da2fbe",
					"type": "directive",
					"data": {
						"directive": "{\n  \"query\": \"UPDATE \\\"users\\\" SET (\\\"dcheckintime\\\", \\\"streak\\\") = (null, '-1') WHERE \\\"userid\\\" = $1 RETURNING \\\"checkinday\\\"\",\n  \"params\": [\"_cognitoId\"],\n  \"to\": \"res\"\n}",
						"ports": [
							{
								"type": "",
								"target": "60499d68d008e0b9ee8494ed",
								"id": "6028776c2818e16673da2fc1"
							}
						]
					}
				},
				"602878fd2818e16673da2fc6": {
					"nodeID": "602878fd2818e16673da2fc6",
					"type": "code",
					"data": {
						"code": "res == \"MO\"\r\n  ? (res = \"Mondays\")\r\n  : res == \"TU\"\r\n  ? (res = \"Tuesdays\")\r\n  : res == \"WE\"\r\n  ? (res = \"Wednesdays\")\r\n  : res == \"TH\"\r\n  ? (res = \"Thursdays\")\r\n  : res == \"FR\"\r\n  ? (res = \"Fridays\")\r\n  : res == \"SA\"\r\n  ? (res = \"Saturdays\")\r\n  : res == \"SU\"\r\n  ? (res = \"Sundays\")\r\n  : null;",
						"ports": [
							{
								"type": "",
								"target": "5ff73286b187aa94d2180b2a",
								"id": "602878fd2818e16673da2fc9"
							},
							{
								"type": "fail",
								"target": "5ff73286b187aa94d2180b2a",
								"id": "602878fd2818e16673da2fca"
							}
						]
					}
				},
				"60288156df1a1c3ef52a276a": {
					"nodeID": "60288156df1a1c3ef52a276a",
					"type": "directive",
					"data": {
						"directive": "{\n  \"query\": [\"SELECT (CURRENT_DATE::DATE - DATE(\\\"timestamp\\\")) AS \\\"val\\\" FROM \\\"checkin\\\" WHERE \\\"userid\\\" = $1 AND \\\"checkinid\\\" IN (SELECT \\\"checkinid\\\" FROM \\\"mentalhealth\\\") UNION ALL SELECT '29' WHERE NOT EXISTS (SELECT \\\"timestamp\\\" FROM \\\"checkin\\\" WHERE \\\"userid\\\" = $1 AND \\\"checkinid\\\" IN (SELECT \\\"checkinid\\\" FROM \\\"mentalhealth\\\")) ORDER BY \\\"val\\\" ASC;\"],\n  \"params\": [\"_cognitoId\"],\n  \"to\": \"res\"\n}",
						"ports": [
							{
								"type": "",
								"target": "603755408b1ed55880fc2095",
								"id": "60288156df1a1c3ef52a276c"
							}
						]
					}
				},
				"60288156df1a1c3ef52a276d": {
					"nodeID": "60288156df1a1c3ef52a276d",
					"type": "block",
					"coords": [
						5280.507587247419,
						531.6557420134517
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"60288156df1a1c3ef52a276a",
							"603755408b1ed55880fc2095",
							"602881c5df1a1c3ef52a294b"
						]
					}
				},
				"602881c5df1a1c3ef52a294b": {
					"nodeID": "602881c5df1a1c3ef52a294b",
					"type": "if",
					"data": {
						"expressions": [
							{
								"type": "greater",
								"value": [
									{
										"type": "variable",
										"value": "res",
										"depth": 1
									},
									{
										"type": "value",
										"value": "27",
										"depth": 1
									}
								],
								"depth": 0
							}
						],
						"ports": [
							{
								"type": "",
								"target": "5fe9fd6c55a6159ee6d9978f",
								"id": "602881c5df1a1c3ef52a294e"
							},
							{
								"type": "",
								"target": "5fe9f93e55a6159ee6d996a7",
								"id": "602881c5df1a1c3ef52a294f"
							}
						]
					}
				},
				"6032cdc54e7285bfd4ca648c": {
					"nodeID": "6032cdc54e7285bfd4ca648c",
					"type": "if",
					"data": {
						"expressions": [
							{
								"type": "not",
								"value": {
									"type": "variable",
									"value": "flag",
									"depth": 1
								},
								"depth": 0
							}
						],
						"ports": [
							{
								"type": "",
								"target": "6032cdc74e7285bfd4ca649a",
								"id": "6032cdc54e7285bfd4ca648d"
							},
							{
								"type": "",
								"target": "5fe9ed8555a6159ee6d98fd9",
								"id": "6032cdc54e7285bfd4ca648e"
							}
						]
					}
				},
				"6032cdc54e7285bfd4ca6489": {
					"nodeID": "6032cdc54e7285bfd4ca6489",
					"type": "directive",
					"data": {
						"directive": "{\n  \"query\": [\"SELECT \\\"checkintime\\\" FROM \\\"users\\\" WHERE \\\"userid\\\" = $1;\"],\n  \"params\": [\"_cognitoId\"],\n  \"to\": \"flag\"\n}",
						"ports": [
							{
								"type": "",
								"target": "6032cdc54e7285bfd4ca648c",
								"id": "6032cdc54e7285bfd4ca648a"
							}
						]
					}
				},
				"6032cdc54e7285bfd4ca6487": {
					"nodeID": "6032cdc54e7285bfd4ca6487",
					"type": "block",
					"coords": [
						1209.1242959392134,
						-88.33014281681339
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"6032cdc54e7285bfd4ca6489",
							"6032cdc54e7285bfd4ca648c"
						]
					}
				},
				"6032cdc74e7285bfd4ca649d": {
					"nodeID": "6032cdc74e7285bfd4ca649d",
					"type": "if",
					"data": {
						"expressions": [
							{
								"type": "not",
								"value": {
									"type": "variable",
									"value": "flag",
									"depth": 1
								},
								"depth": 0
							}
						],
						"ports": [
							{
								"type": "",
								"target": "6032dc89d8b4f6a1a62b6594",
								"id": "6032cdc74e7285bfd4ca649e"
							},
							{
								"type": "",
								"target": "5fe9ed8555a6159ee6d98fd9",
								"id": "6032cdc74e7285bfd4ca649f"
							}
						]
					}
				},
				"6032cdc74e7285bfd4ca649a": {
					"nodeID": "6032cdc74e7285bfd4ca649a",
					"type": "directive",
					"data": {
						"directive": "{\n  \"query\": [\"SELECT \\\"checkinday\\\" FROM \\\"users\\\" WHERE \\\"userid\\\" = $1;\"],\n  \"params\": [\"_cognitoId\"],\n  \"to\": \"flag\"\n}",
						"ports": [
							{
								"type": "",
								"target": "6032cdc74e7285bfd4ca649d",
								"id": "6032cdc74e7285bfd4ca649b"
							}
						]
					}
				},
				"6032cdc74e7285bfd4ca6498": {
					"nodeID": "6032cdc74e7285bfd4ca6498",
					"type": "block",
					"coords": [
						1207.3881461683604,
						186.06564799345836
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"6032cdc74e7285bfd4ca649a",
							"6032cdc74e7285bfd4ca649d"
						]
					}
				},
				"6032dc89d8b4f6a1a62b6591": {
					"nodeID": "6032dc89d8b4f6a1a62b6591",
					"type": "speak",
					"data": {
						"randomize": false,
						"dialogs": [
							{
								"voice": "Alexa",
								"content": "Hey there! Thanks for checking in with me. "
							}
						],
						"ports": [
							{
								"type": "",
								"target": "60206eafe8d06e389ce199a7",
								"id": "6032dc89d8b4f6a1a62b6593"
							}
						]
					}
				},
				"6032dc89d8b4f6a1a62b6594": {
					"nodeID": "6032dc89d8b4f6a1a62b6594",
					"type": "block",
					"coords": [
						1699.782601860784,
						349.0832341542207
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"6032dc89d8b4f6a1a62b6591"
						]
					}
				},
				"603609dd9ebf9102df39f707": {
					"nodeID": "603609dd9ebf9102df39f707",
					"type": "if",
					"data": {
						"expressions": [
							{
								"type": "equals",
								"value": [
									{
										"type": "variable",
										"value": "intentMemory",
										"depth": 1
									},
									{
										"type": "value",
										"value": "o",
										"depth": 1
									}
								],
								"depth": 0
							},
							{
								"type": "equals",
								"value": [
									{
										"type": "variable",
										"value": "intentMemory",
										"depth": 1
									},
									{
										"type": "value",
										"value": "s",
										"depth": 1
									}
								],
								"depth": 0
							},
							{
								"type": "equals",
								"value": [
									{
										"type": "variable",
										"value": "intentMemory",
										"depth": 1
									},
									{
										"type": "value",
										"value": "r",
										"depth": 1
									}
								],
								"depth": 0
							},
							{
								"type": "equals",
								"value": [
									{
										"type": "variable",
										"value": "intentMemory",
										"depth": 1
									},
									{
										"type": "value",
										"value": "d",
										"depth": 1
									}
								],
								"depth": 0
							}
						],
						"ports": [
							{
								"type": "",
								"target": "603755708b1ed55880fc209f",
								"id": "603609dd9ebf9102df39f709"
							},
							{
								"type": "",
								"target": "5ff767c2e7b840f3a1b8ddba",
								"id": "603609dd9ebf9102df39f70a"
							},
							{
								"type": 3,
								"target": "5ff8f09ea13f5c2464ab8a26",
								"id": "60360a119ebf9102df39f715"
							},
							{
								"type": 3,
								"target": "5ff767f9e7b840f3a1b8e02c",
								"id": "60360eaed2edd91b9d90c023"
							},
							{
								"type": 4,
								"target": "604fb1fa5b79f1b1ef214579",
								"id": "6049ab05985392d181452839"
							}
						]
					}
				},
				"603609dd9ebf9102df39f70b": {
					"nodeID": "603609dd9ebf9102df39f70b",
					"type": "block",
					"coords": [
						297.644664720396,
						311.1204220914402
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"603609dd9ebf9102df39f707"
						]
					}
				},
				"60360a269ebf9102df39f717": {
					"nodeID": "60360a269ebf9102df39f717",
					"type": "event",
					"data": {
						"mappings": [
							{
								"path": "data.cause.result.status",
								"var": "res"
							},
							{
								"dispatchConfig": null,
								"_targetInst": null,
								"nativeEvent": null,
								"type": null,
								"target": null,
								"currentTarget": null,
								"eventPhase": null,
								"bubbles": null,
								"cancelable": null,
								"timeStamp": null,
								"defaultPrevented": null,
								"isTrusted": null,
								"view": null,
								"detail": null,
								"screenX": null,
								"screenY": null,
								"clientX": null,
								"clientY": null,
								"pageX": null,
								"pageY": null,
								"ctrlKey": null,
								"shiftKey": null,
								"altKey": null,
								"metaKey": null,
								"getModifierState": null,
								"button": null,
								"buttons": null,
								"relatedTarget": null,
								"movementX": null,
								"movementY": null,
								"_dispatchListeners": null,
								"_dispatchInstances": null,
								"path": "data",
								"var": "resB"
							},
							{
								"dispatchConfig": null,
								"_targetInst": null,
								"nativeEvent": null,
								"type": null,
								"target": null,
								"currentTarget": null,
								"eventPhase": null,
								"bubbles": null,
								"cancelable": null,
								"timeStamp": null,
								"defaultPrevented": null,
								"isTrusted": null,
								"view": null,
								"detail": null,
								"screenX": null,
								"screenY": null,
								"clientX": null,
								"clientY": null,
								"pageX": null,
								"pageY": null,
								"ctrlKey": null,
								"shiftKey": null,
								"altKey": null,
								"metaKey": null,
								"getModifierState": null,
								"button": null,
								"buttons": null,
								"relatedTarget": null,
								"movementX": null,
								"movementY": null,
								"_dispatchListeners": null,
								"_dispatchInstances": null,
								"path": "data.cause.token",
								"var": "intentMemory"
							}
						],
						"requestName": "SessionResumedRequest",
						"ports": [
							{
								"type": "",
								"target": "60360d50d2edd91b9d90bfeb",
								"id": "60360a269ebf9102df39f718"
							}
						]
					}
				},
				"60360a269ebf9102df39f719": {
					"nodeID": "60360a269ebf9102df39f719",
					"type": "block",
					"coords": [
						-532.0968599789086,
						362.35111256799274
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"60360a269ebf9102df39f717"
						]
					}
				},
				"60360ac1d2edd91b9d90bfe1": {
					"nodeID": "60360ac1d2edd91b9d90bfe1",
					"type": "directive",
					"data": {
						"directive": "{\n  \"type\": \"Connections.StartConnection\",\n  \"uri\": \"connection://AMAZON.VerifyPerson/2\",\n  \"input\": {\n     \"requestedAuthenticationConfidenceLevel\": {\n        \"level\": 400,\n        \"customPolicy\": {\n           \"policyName\": \"VOICE_PIN\"\n        }            \n     }\n  },\n  \"token\": \"s\"\n}",
						"ports": [
							{
								"type": "",
								"target": "6041313a4aa5dd22c250a77f",
								"id": "60360ac1d2edd91b9d90bfe3"
							}
						]
					}
				},
				"60360ac1d2edd91b9d90bfe4": {
					"nodeID": "60360ac1d2edd91b9d90bfe4",
					"type": "block",
					"coords": [
						393.86181513542164,
						843.2007933431635
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"60360ac1d2edd91b9d90bfe1",
							"6041313a4aa5dd22c250a77f"
						]
					}
				},
				"60360d50d2edd91b9d90bfeb": {
					"nodeID": "60360d50d2edd91b9d90bfeb",
					"type": "if",
					"data": {
						"expressions": [
							{
								"type": "equals",
								"value": [
									{
										"type": "variable",
										"value": "res",
										"depth": 1
									},
									{
										"type": "value",
										"value": "ACHIEVED",
										"depth": 1
									}
								],
								"depth": 0
							}
						],
						"ports": [
							{
								"type": "",
								"target": "60360d7fd2edd91b9d90bff9",
								"id": "60360d50d2edd91b9d90bfed"
							},
							{
								"type": "",
								"target": "603609dd9ebf9102df39f707",
								"id": "60360d50d2edd91b9d90bfee"
							}
						]
					}
				},
				"60360d50d2edd91b9d90bfef": {
					"nodeID": "60360d50d2edd91b9d90bfef",
					"type": "block",
					"coords": [
						-146.0598722992503,
						365.2307314840791
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"60360d50d2edd91b9d90bfeb"
						]
					}
				},
				"60360d7fd2edd91b9d90bff9": {
					"nodeID": "60360d7fd2edd91b9d90bff9",
					"type": "speak",
					"data": {
						"randomize": false,
						"dialogs": [
							{
								"voice": "Alexa",
								"content": "Error: {{[res].res}} "
							}
						],
						"ports": [
							{
								"type": "",
								"target": null,
								"id": "60360d7fd2edd91b9d90bffb"
							}
						]
					}
				},
				"60360d7fd2edd91b9d90bffc": {
					"nodeID": "60360d7fd2edd91b9d90bffc",
					"type": "block",
					"coords": [
						296.36391063174307,
						670.3669930123616
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"60360d7fd2edd91b9d90bff9"
						]
					}
				},
				"60360e69d2edd91b9d90c00a": {
					"nodeID": "60360e69d2edd91b9d90c00a",
					"type": "directive",
					"data": {
						"directive": "{\n  \"type\": \"Connections.StartConnection\",\n  \"uri\": \"connection://AMAZON.VerifyPerson/2\",\n  \"input\": {\n     \"requestedAuthenticationConfidenceLevel\": {\n        \"level\": 400,\n        \"customPolicy\": {\n           \"policyName\": \"VOICE_PIN\"\n        }            \n     }\n  },\n  \"token\": \"o\"\n}",
						"ports": [
							{
								"type": "",
								"target": "6038b02ca2c74fd4689e8910",
								"id": "60360e69d2edd91b9d90c00b"
							}
						]
					}
				},
				"60360e69d2edd91b9d90c008": {
					"nodeID": "60360e69d2edd91b9d90c008",
					"type": "block",
					"coords": [
						356.7318233919337,
						-361.937354293767
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"60360e69d2edd91b9d90c00a",
							"6038b02ca2c74fd4689e8910"
						]
					}
				},
				"60360e6dd2edd91b9d90c014": {
					"nodeID": "60360e6dd2edd91b9d90c014",
					"type": "directive",
					"data": {
						"directive": "{\n  \"type\": \"Connections.StartConnection\",\n  \"uri\": \"connection://AMAZON.VerifyPerson/2\",\n  \"input\": {\n     \"requestedAuthenticationConfidenceLevel\": {\n        \"level\": 400,\n        \"customPolicy\": {\n           \"policyName\": \"VOICE_PIN\"\n        }            \n     }\n  },\n  \"token\": \"r\"\n}",
						"ports": [
							{
								"type": "",
								"target": "6041313d4aa5dd22c250a787",
								"id": "60360e6dd2edd91b9d90c015"
							}
						]
					}
				},
				"60360e6dd2edd91b9d90c012": {
					"nodeID": "60360e6dd2edd91b9d90c012",
					"type": "block",
					"coords": [
						400.09587427442204,
						1081.1413874668053
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"60360e6dd2edd91b9d90c014",
							"6041313d4aa5dd22c250a787"
						]
					}
				},
				"60361a17d2edd91b9d90c211": {
					"nodeID": "60361a17d2edd91b9d90c211",
					"type": "flow",
					"data": {
						"diagramID": "604fb4537dbea8004948e258",
						"variableMap": null,
						"ports": [
							{
								"type": "",
								"target": null,
								"id": "60361a17d2edd91b9d90c213"
							}
						]
					}
				},
				"60361a17d2edd91b9d90c214": {
					"nodeID": "60361a17d2edd91b9d90c214",
					"type": "block",
					"coords": [
						-11.887755963115872,
						151.87866564616746
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"60361a17d2edd91b9d90c211"
						]
					}
				},
				"603755408b1ed55880fc2095": {
					"nodeID": "603755408b1ed55880fc2095",
					"type": "code",
					"data": {
						"code": "res = parseInt(res);",
						"ports": [
							{
								"type": "",
								"target": "602881c5df1a1c3ef52a294b",
								"id": "603755408b1ed55880fc2098"
							},
							{
								"type": "fail",
								"target": "602881c5df1a1c3ef52a294b",
								"id": "603755408b1ed55880fc2099"
							}
						]
					}
				},
				"603755708b1ed55880fc209f": {
					"nodeID": "603755708b1ed55880fc209f",
					"type": "speak",
					"data": {
						"randomize": false,
						"dialogs": [
							{
								"voice": "Alexa",
								"content": "{{[intentMemory].intentMemory}} "
							}
						],
						"ports": [
							{
								"type": "",
								"target": null,
								"id": "603755708b1ed55880fc20a1"
							}
						]
					}
				},
				"6038b02ca2c74fd4689e8910": {
					"nodeID": "6038b02ca2c74fd4689e8910",
					"type": "prompt",
					"data": {
						"ports": [],
						"reprompt": null,
						"noMatches": {
							"randomize": false,
							"reprompts": [
								{
									"voice": "Alexa",
									"content": ""
								}
							]
						},
						"chips": null
					}
				},
				"6041310c4aa5dd22c250a773": {
					"nodeID": "6041310c4aa5dd22c250a773",
					"type": "block",
					"coords": [
						779.8756226782135,
						473.696797360369
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"603755708b1ed55880fc209f"
						]
					}
				},
				"6041313a4aa5dd22c250a77f": {
					"nodeID": "6041313a4aa5dd22c250a77f",
					"type": "prompt",
					"data": {
						"ports": [],
						"reprompt": null,
						"noMatches": {
							"randomize": false,
							"reprompts": [
								{
									"voice": "Alexa",
									"content": ""
								}
							]
						},
						"chips": null
					}
				},
				"6041313d4aa5dd22c250a787": {
					"nodeID": "6041313d4aa5dd22c250a787",
					"type": "prompt",
					"data": {
						"ports": [],
						"reprompt": null,
						"noMatches": {
							"randomize": false,
							"reprompts": [
								{
									"voice": "Alexa",
									"content": ""
								}
							]
						},
						"chips": null
					}
				},
				"60499b95b22cd43ae29d1743": {
					"nodeID": "60499b95b22cd43ae29d1743",
					"type": "reminder",
					"data": {
						"reminder": {
							"name": "Reminder",
							"type": "SCHEDULED_ABSOLUTE",
							"text": "Hey! It's time for your check-in with the ARIC Study. To talk to us, please approach your Alexa and say, 'Alexa, open ARIC Study'",
							"time": {
								"h": "{{[resB].resB}}",
								"m": "{{[resC].resC}}",
								"s": "0"
							},
							"date": "",
							"timezone": "User Timezone",
							"recurrence": {
								"freq": "WEEKLY",
								"byDay": "SA"
							},
							"recurrenceBool": true
						},
						"ports": [
							{
								"type": "",
								"target": "60499cf2b22cd43ae29d19ed",
								"id": "60499b95b22cd43ae29d1744"
							},
							{
								"type": "fail",
								"target": "60499b95b22cd43ae29d173e",
								"id": "60499b95b22cd43ae29d1745"
							}
						]
					}
				},
				"60499b95b22cd43ae29d1741": {
					"nodeID": "60499b95b22cd43ae29d1741",
					"type": "exit",
					"data": {
						"ports": []
					}
				},
				"60499b95b22cd43ae29d173e": {
					"nodeID": "60499b95b22cd43ae29d173e",
					"type": "speak",
					"data": {
						"randomize": false,
						"dialogs": [
							{
								"voice": "Alexa",
								"content": "There was a problem creating the reminder."
							}
						],
						"ports": [
							{
								"type": "",
								"target": "60499b95b22cd43ae29d1741",
								"id": "60499b95b22cd43ae29d173f"
							}
						]
					}
				},
				"60499b95b22cd43ae29d173a": {
					"nodeID": "60499b95b22cd43ae29d173a",
					"type": "code",
					"data": {
						"code": "resC = res.split(\":\")[1];\nresB = res.split(\":\")[0];",
						"ports": [
							{
								"type": "",
								"target": "6028776c2818e16673da2fbe",
								"id": "60499b95b22cd43ae29d173b"
							},
							{
								"type": "fail",
								"target": "6028776c2818e16673da2fbe",
								"id": "60499b95b22cd43ae29d173c"
							}
						]
					}
				},
				"60499b95b22cd43ae29d1738": {
					"nodeID": "60499b95b22cd43ae29d1738",
					"type": "block",
					"coords": [
						5197.300633825923,
						-708.3983187047627
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"60499b95b22cd43ae29d1743"
						]
					}
				},
				"60499b95b22cd43ae29d1736": {
					"nodeID": "60499b95b22cd43ae29d1736",
					"type": "block",
					"coords": [
						5603.295957028668,
						-513.1689234266909
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"60499b95b22cd43ae29d173e",
							"60499b95b22cd43ae29d1741"
						]
					}
				},
				"60499cf2b22cd43ae29d19ed": {
					"nodeID": "60499cf2b22cd43ae29d19ed",
					"type": "block",
					"coords": [
						5204.327474254525,
						-266.7528504239599
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"602878fd2818e16673da2fc6",
							"5ff73286b187aa94d2180b2a"
						]
					}
				},
				"60499d0dd008e0b9ee8494d8": {
					"nodeID": "60499d0dd008e0b9ee8494d8",
					"type": "directive",
					"data": {
						"directive": "{\n  \"query\": [\"SELECT \\\"checkintime\\\" FROM \\\"users\\\" WHERE \\\"userid\\\" = $1\"],\n  \"params\": [\"_cognitoId\"],\n  \"to\": \"res\"\n}",
						"ports": [
							{
								"type": "",
								"target": "60499b95b22cd43ae29d173a",
								"id": "60499d0dd008e0b9ee8494db"
							}
						]
					}
				},
				"60499d68d008e0b9ee8494ed": {
					"nodeID": "60499d68d008e0b9ee8494ed",
					"type": "code",
					"data": {
						"code": "res == \"M\"\r\n  ? (res = \"MO\")\r\n  : res == \"T\"\r\n  ? (res = \"TU\")\r\n  : res == \"W\"\r\n  ? (res = \"WE\")\r\n  : res == \"Th\"\r\n  ? (res = \"TH\")\r\n  : res == \"F\"\r\n  ? (res = \"FR\")\r\n  : res == \"Sa\"\r\n  ? (res = \"SA\")\r\n  : res == \"Su\"\r\n  ? (res = \"SU\")\r\n  : null;",
						"ports": [
							{
								"type": "",
								"target": "60499b95b22cd43ae29d1743",
								"id": "60499d68d008e0b9ee8494ee"
							},
							{
								"type": "fail",
								"target": "60499b95b22cd43ae29d173e",
								"id": "60499d68d008e0b9ee8494ef"
							}
						]
					}
				},
				"6049aa96985392d181452823": {
					"nodeID": "6049aa96985392d181452823",
					"type": "intent",
					"data": {
						"intent": "0c5s34qz",
						"mappings": [],
						"ports": [
							{
								"type": "",
								"target": "6049aaf1985392d18145282e",
								"id": "6049aa96985392d181452824"
							}
						]
					}
				},
				"6049aa96985392d181452825": {
					"nodeID": "6049aa96985392d181452825",
					"type": "block",
					"coords": [
						28.318128167069617,
						1333.7825946571998
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"6049aa96985392d181452823"
						]
					}
				},
				"6049aaf1985392d181452831": {
					"nodeID": "6049aaf1985392d181452831",
					"type": "prompt",
					"data": {
						"ports": [],
						"reprompt": null,
						"noMatches": {
							"randomize": false,
							"reprompts": [
								{
									"voice": "Alexa",
									"content": ""
								}
							]
						},
						"chips": null
					}
				},
				"6049aaf1985392d18145282e": {
					"nodeID": "6049aaf1985392d18145282e",
					"type": "directive",
					"data": {
						"directive": "{\n  \"type\": \"Connections.StartConnection\",\n  \"uri\": \"connection://AMAZON.VerifyPerson/2\",\n  \"input\": {\n     \"requestedAuthenticationConfidenceLevel\": {\n        \"level\": 400,\n        \"customPolicy\": {\n           \"policyName\": \"VOICE_PIN\"\n        }            \n     }\n  },\n  \"token\": \"d\"\n}",
						"ports": [
							{
								"type": "",
								"target": "6049aaf1985392d181452831",
								"id": "6049aaf1985392d18145282f"
							}
						]
					}
				},
				"6049aaf1985392d18145282c": {
					"nodeID": "6049aaf1985392d18145282c",
					"type": "block",
					"coords": [
						391.763114547781,
						1341.7412439940038
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"6049aaf1985392d18145282e",
							"6049aaf1985392d181452831"
						]
					}
				},
				"6049ab5f985392d18145283b": {
					"nodeID": "6049ab5f985392d18145283b",
					"type": "reminder",
					"data": {
						"reminder": {
							"name": "Reminder",
							"type": "SCHEDULED_ABSOLUTE",
							"text": "delete",
							"time": {
								"h": "0",
								"m": "0",
								"s": "0"
							},
							"date": "delete",
							"timezone": "User Timezone",
							"recurrenceBool": false
						},
						"ports": [
							{
								"type": "",
								"target": "604f11c89ba3af75ec8b8ad6",
								"id": "6049ab5f985392d18145283d"
							},
							{
								"type": "fail",
								"target": "604fb1995b79f1b1ef2140ff",
								"id": "6049ab5f985392d18145283e"
							}
						]
					}
				},
				"6049ab5f985392d18145283f": {
					"nodeID": "6049ab5f985392d18145283f",
					"type": "block",
					"coords": [
						1646.2272508130393,
						1519.005550403494
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"6049ab5f985392d18145283b"
						]
					}
				},
				"604f11c89ba3af75ec8b8ad6": {
					"nodeID": "604f11c89ba3af75ec8b8ad6",
					"type": "speak",
					"data": {
						"randomize": false,
						"dialogs": [
							{
								"voice": "Alexa",
								"content": "Got it! Your reminders have been cleared."
							}
						],
						"ports": [
							{
								"type": "",
								"target": null,
								"id": "604f11c89ba3af75ec8b8ad9"
							}
						]
					}
				},
				"604faa379ba3af75ec8b9379": {
					"nodeID": "604faa379ba3af75ec8b9379",
					"type": "interaction",
					"data": {
						"name": "Choice",
						"else": {
							"type": "reprompt",
							"randomize": false,
							"reprompts": [
								{
									"voice": "Alexa",
									"content": "If you would like to be reminded before your next checkin, please say, \"yes\""
								},
								{
									"voice": "Alexa",
									"content": "Im sorry, I was looking for, \"yes\" or \"no\"."
								},
								{
									"voice": "Alexa",
									"content": "Hmm, I didn't understand that. Would you like to be reminded before your weekly checkins?"
								}
							]
						},
						"choices": [
							{
								"intent": "AMAZON.YesIntent",
								"mappings": []
							},
							{
								"intent": "AMAZON.NoIntent",
								"mappings": []
							}
						],
						"reprompt": null,
						"chips": null,
						"ports": [
							{
								"type": "",
								"target": null,
								"id": "604faa379ba3af75ec8b937a"
							},
							{
								"type": "",
								"target": "60499d0dd008e0b9ee8494d8",
								"id": "604faa379ba3af75ec8b937b"
							},
							{
								"type": 2,
								"target": "5ff732e2b187aa94d2180b40",
								"id": "604faa379ba3af75ec8b937c"
							}
						]
					}
				},
				"604fb1589ba3af75ec8b9c4b": {
					"nodeID": "604fb1589ba3af75ec8b9c4b",
					"type": "interaction",
					"data": {
						"name": "Choice",
						"else": {
							"type": "reprompt",
							"randomize": false,
							"reprompts": [
								{
									"voice": "Alexa",
									"content": "If you would like to be reminded before your next checkin, please say, \"yes\""
								},
								{
									"voice": "Alexa",
									"content": "Im sorry, I was looking for, \"yes\" or \"no\"."
								},
								{
									"voice": "Alexa",
									"content": "Hmm, I didn't understand that. Would you like to be reminded before your weekly checkins?"
								}
							]
						},
						"choices": [
							{
								"intent": "AMAZON.YesIntent",
								"mappings": []
							},
							{
								"intent": "AMAZON.NoIntent",
								"mappings": []
							}
						],
						"reprompt": null,
						"chips": null,
						"ports": [
							{
								"type": "",
								"target": null,
								"id": "604fb1589ba3af75ec8b9c4c"
							},
							{
								"type": "",
								"target": "6049ab5f985392d18145283b",
								"id": "604fb1589ba3af75ec8b9c4d"
							},
							{
								"type": 2,
								"target": "604fb2095b79f1b1ef214582",
								"id": "604fb1589ba3af75ec8b9c4e"
							}
						]
					}
				},
				"604fb1589ba3af75ec8b9c48": {
					"nodeID": "604fb1589ba3af75ec8b9c48",
					"type": "speak",
					"data": {
						"randomize": false,
						"dialogs": [
							{
								"voice": "Alexa",
								"content": "Are you sure you would like to delete all of your existing check-in reminders?<break strength=\"x-strong\" />"
							}
						],
						"ports": [
							{
								"type": "",
								"target": "604fb1589ba3af75ec8b9c4b",
								"id": "604fb1589ba3af75ec8b9c49"
							}
						]
					}
				},
				"604fb1589ba3af75ec8b9c46": {
					"nodeID": "604fb1589ba3af75ec8b9c46",
					"type": "block",
					"coords": [
						1216.116425244115,
						1504.10141048308
					],
					"data": {
						"name": "Ending",
						"color": "standard",
						"steps": [
							"604fb1589ba3af75ec8b9c48",
							"604fb1589ba3af75ec8b9c4b"
						]
					}
				},
				"604fb1995b79f1b1ef214102": {
					"nodeID": "604fb1995b79f1b1ef214102",
					"type": "exit",
					"data": {
						"ports": []
					}
				},
				"604fb1995b79f1b1ef2140ff": {
					"nodeID": "604fb1995b79f1b1ef2140ff",
					"type": "speak",
					"data": {
						"randomize": false,
						"dialogs": [
							{
								"voice": "Alexa",
								"content": "There was a problem creating the reminder. ARIC may contact you to try to resolve this issue."
							}
						],
						"ports": [
							{
								"type": "",
								"target": "604fb1e15b79f1b1ef21456d",
								"id": "604fb1995b79f1b1ef214100"
							}
						]
					}
				},
				"604fb1995b79f1b1ef2140fd": {
					"nodeID": "604fb1995b79f1b1ef2140fd",
					"type": "block",
					"coords": [
						2070.9139910903828,
						1814.4239591401406
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"604fb1995b79f1b1ef2140ff",
							"604fb1e15b79f1b1ef21456d",
							"604fb1995b79f1b1ef214102"
						]
					}
				},
				"604fb19d5b79f1b1ef214109": {
					"nodeID": "604fb19d5b79f1b1ef214109",
					"type": "block",
					"coords": [
						2073.7351051690835,
						1574.6292624505927
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"604f11c89ba3af75ec8b8ad6"
						]
					}
				},
				"604fb1e15b79f1b1ef21456d": {
					"nodeID": "604fb1e15b79f1b1ef21456d",
					"type": "directive",
					"data": {
						"directive": "{\n  \"query\": \"INSERT INTO \\\"contactalerts\\\" (\\\"checkinid\\\",\\\"type\\\") VALUES ($1,'Refused daily checkin.')\",\n  \"params\": [\"_checkinId\"]\n}",
						"ports": [
							{
								"type": "",
								"target": "604fb1995b79f1b1ef214102",
								"id": "604fb1e15b79f1b1ef21456e"
							}
						]
					}
				},
				"604fb1fa5b79f1b1ef214579": {
					"nodeID": "604fb1fa5b79f1b1ef214579",
					"type": "flow",
					"data": {
						"diagramID": "604fb4537dbea8004948e250",
						"variableMap": null,
						"ports": [
							{
								"type": "",
								"target": "604fb1589ba3af75ec8b9c48",
								"id": "604fb1fa5b79f1b1ef21457a"
							}
						]
					}
				},
				"604fb1fa5b79f1b1ef214577": {
					"nodeID": "604fb1fa5b79f1b1ef214577",
					"type": "block",
					"coords": [
						846.5504809343446,
						1498.4591823256792
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"604fb1fa5b79f1b1ef214579"
						]
					}
				},
				"604fb2095b79f1b1ef214582": {
					"nodeID": "604fb2095b79f1b1ef214582",
					"type": "speak",
					"data": {
						"randomize": false,
						"dialogs": [
							{
								"voice": "Alexa",
								"content": "Okay, no worries!"
							}
						],
						"ports": [
							{
								"type": "",
								"target": null,
								"id": "604fb2095b79f1b1ef214584"
							}
						]
					}
				},
				"604fb2095b79f1b1ef214585": {
					"nodeID": "604fb2095b79f1b1ef214585",
					"type": "block",
					"coords": [
						1650.5679933640006,
						1803.1395028253382
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"604fb2095b79f1b1ef214582"
						]
					}
				}
			},
			"children": [
				"604fb4537dbea8004948e254",
				"604fb4537dbea8004948e247",
				"604fb4537dbea8004948e251",
				"604fb4537dbea8004948e253",
				"604fb4537dbea8004948e24d",
				"604fb4537dbea8004948e25b",
				"604fb4537dbea8004948e24a",
				"604fb4537dbea8004948e24f",
				"604fb4537dbea8004948e252",
				"604fb4537dbea8004948e255",
				"604fb4537dbea8004948e24b",
				"604fb4537dbea8004948e257",
				"604fb4537dbea8004948e250",
				"604fb4537dbea8004948e24c",
				"604fb4537dbea8004948e25a",
				"604fb4537dbea8004948e258"
			],
			"versionID": "604fb4535e10aa001b8f200e",
			"creatorID": 55093,
			"modified": 1615836243
		},
		"604fb4537dbea8004948e250": {
			"_id": "604fb4537dbea8004948e250",
			"offsetX": -497.05699099107005,
			"offsetY": 124.61871699417514,
			"zoom": 56.37752179469085,
			"variables": [],
			"children": [
				"604fb4537dbea8004948e248"
			],
			"nodes": {
				"5ff767c9e7b840f3a1b8ddc4": {
					"nodeID": "5ff767c9e7b840f3a1b8ddc4",
					"type": "start",
					"coords": [
						-233.9242364950599,
						115.96253947570762
					],
					"data": {
						"name": "Start",
						"color": "standard",
						"ports": [
							{
								"type": "",
								"target": "6032c9fb4e7285bfd4ca5d7e",
								"id": "5ff767cbe7b840f3a1b8ddc5"
							}
						],
						"steps": []
					}
				},
				"5ff767dce7b840f3a1b8defa": {
					"nodeID": "5ff767dce7b840f3a1b8defa",
					"type": "code",
					"data": {
						"code": "mFlag = false;\ncognitoId = 0;\ncheckinId = 0;\nlastInteraction = 0;\ndeviceId = _system.device.deviceId;\napiAccessToken = _system.apiAccessToken;\napiEndpoint = _system.apiEndpoint;\nquestionnaire = {\n  \"vaccination\": {\n    \"1\": {\n      \"databaseName\": \"\",\n      \"text\": \"Since the last time we spoke, have you received a vaccine against COVID-19?\",\n      \"responseType\": \"Binary\",\n      \"condition\": \"\",\n      \"reproOne\": \"If you were vaccinated against COVID-19, please say, 'yes'\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'yes' or 'no'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't understand that. Since the last time we spoke, have you received a vaccine against COVID-19?\",\n      \"value\": null\n    },\n    \"2\": {\n      \"databaseName\": \"type\",\n      \"text\": \"Vaccines available now are made by Pfizer/BioNTech, Moderna, and Johnson and Johnson. Do you know which type of vaccine you got? If you don’t know, just say “I don’t know.”\",\n      \"responseType\": \"VaccineType\",\n      \"condition\": \"[1]\",\n      \"reproOne\": \"Please let me know if you recieved the Pfizer, Moderna, or Johnson and Johnson vaccine\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'Pfiezer', 'Moderna', 'Johnson and Johnson', or 'I don't know'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. Did you recieve a vaccine from Pfizer, Moderna, or Johnson and Johnson?\",\n      \"value\": null\n    },\n    \"3\": {\n      \"databaseName\": \"seconddose\",\n      \"text\": \"As of today, have you gotten your second dose?\",\n      \"responseType\": \"Binary\",\n      \"condition\": \"[1]\",\n      \"reproOne\": \"If you recieved two shots, please say, 'yes'\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'yes' or 'no'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. As of today, have you gotten your second dose?\",\n      \"value\": null\n    },\n    \"modified\": false\n  },\n  \"diagnosis\": {\n    \"1\": {\n      \"databaseName\": \"testedpositive\",\n      \"text\": \"Have you tested positive?\",\n      \"responseType\": \"Binary\",\n      \"condition\": \"\",\n      \"reproOne\": \"Say 'yes' if you recieved a positive COVID test diagnosis.\",\n      \"reproTwo\": \"Hmm. I didn't get that. Please let me know if you tested positive.\",\n      \"reproThree\": \"Hmm. I still didn't get that. Please let me know if you tested positive.\",\n      \"value\": null\n    },\n    \"2\": {\n      \"databaseName\": \"positivedate\",\n      \"text\": \"When did you test positive?\",\n      \"responseType\": \"Date\",\n      \"condition\": \"[1]\",\n      \"reproOne\": \"Please let me know when you tested positive for COVID. You can say 'last week' or a specific date, like 'March 13, 2021'\",\n      \"reproTwo\": \"I'm sorry, I was looking for a date. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. When did you test positive?\",\n      \"value\": null\n    },\n    \"3\": {\n      \"databaseName\": \"positivedate\",\n      \"text\": \"When do you think you got COVID-19?\",\n      \"responseType\": \"Date\",\n      \"condition\": \"![1]\",\n      \"reproOne\": \"Please let me know when you think you got COVID. You can say 'last week' or a specific date, like 'March 13, 2021'\",\n      \"reproTwo\": \"I'm sorry, I was looking for a date. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. When do you think you got COVID-19?\",\n      \"value\": null\n    },\n    \"4\": {\n      \"databaseName\": \"symptomatic\",\n      \"text\": \"Did you exhibit any symptoms of COVID-19 at any time?\",\n      \"responseType\": \"Binary\",\n      \"condition\": \"\",\n      \"reproOne\": \"If you had any symptoms you think may have been related to COVID-19 in the past two weeks, please say, 'yes'\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'yes' or 'no'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. In the past two weeks, did you have any symptoms that you think were related to COVID-19?\",\n      \"value\": null\n    },\n    \"5\": {\n      \"databaseName\": \"f\",\n      \"text\": \"I’m going to ask if you had some symptoms that have been linked to COVID-19 in the past two weeks. Please respond with yes or no for each one. Fever?\",\n      \"responseType\": \"Binary\",\n      \"condition\": \"[4]\",\n      \"reproOne\": \"If you have had a fever, please say, 'yes'\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'yes' or 'no'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. Did you have a fever since we last spoke?\",\n      \"value\": null\n    },\n    \"6\": {\n      \"databaseName\": \"sb\",\n      \"text\": \"Shortness of breath?\",\n      \"responseType\": \"Binary\",\n      \"condition\": \"[4]\",\n      \"reproOne\": \"If you have had shortness of breath, please say, 'yes'\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'yes' or 'no'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. Did you have a cough since we last spoke?\",\n      \"value\": null\n    },\n    \"7\": {\n      \"databaseName\": \"co\",\n      \"text\": \"Cough?\",\n      \"responseType\": \"Binary\",\n      \"condition\": \"[4]\",\n      \"reproOne\": \"If you have had a cough, please say, 'yes'\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'yes' or 'no'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. Did you have shortness of breath since we last spoke?\",\n      \"value\": null\n    },\n    \"8\": {\n      \"databaseName\": \"dp\",\n      \"text\": \"Digestive problems?\",\n      \"responseType\": \"Binary\",\n      \"condition\": \"[4]\",\n      \"reproOne\": \"If you have had digestive problems, please say, 'yes'\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'yes' or 'no'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. Did you have digestive problems since we last spoke?\",\n      \"value\": null\n    },\n    \"9\": {\n      \"databaseName\": \"h\",\n      \"text\": \"Headache?\",\n      \"responseType\": \"Binary\",\n      \"condition\": \"[4]\",\n      \"reproOne\": \"If you have had a headache, please say, 'yes'\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'yes' or 'no'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. Did you have a headache since we last spoke?\",\n      \"value\": null\n    },\n    \"10\": {\n      \"databaseName\": \"ba\",\n      \"text\": \"Body aches?\",\n      \"responseType\": \"Binary\",\n      \"condition\": \"[4]\",\n      \"reproOne\": \"If you have had body aches, please say, 'yes'\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'yes' or 'no'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. Did you have body aches since we last spoke?\",\n      \"value\": null\n    },\n    \"11\": {\n      \"databaseName\": \"cp\",\n      \"text\": \"Chest pain?\",\n      \"responseType\": \"Binary\",\n      \"condition\": \"[4]\",\n      \"reproOne\": \"If you have had chest pain, please say, 'yes'\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'yes' or 'no'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. Did you have chest pain since we last spoke?\",\n      \"value\": null\n    },\n    \"12\": {\n      \"databaseName\": \"fa\",\n      \"text\": \"Fatigue?\",\n      \"responseType\": \"Binary\",\n      \"condition\": \"[4]\",\n      \"reproOne\": \"If you have been fatigued, please say, 'yes'\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'yes' or 'no'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. Did you have fatigue since we last spoke?\",\n      \"value\": null\n    },\n    \"13\": {\n      \"databaseName\": \"tpa\",\n      \"text\": \"Trouble paying attention?\",\n      \"responseType\": \"Binary\",\n      \"condition\": \"[4]\",\n      \"reproOne\": \"If you have had trouble paying attention, please say, 'yes'\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'yes' or 'no'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. Did you have trouble paying attention since we last spoke?\",\n      \"value\": null\n    },\n    \"14\": {\n      \"databaseName\": \"cn\",\n      \"text\": \"Confusion?\",\n      \"responseType\": \"Binary\",\n      \"condition\": \"[4]\",\n      \"reproOne\": \"If you have felt confused, please say, 'yes'\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'yes' or 'no'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. Did you have confusion since we last spoke?\",\n      \"value\": null\n    },\n    \"15\": {\n      \"databaseName\": \"lf\",\n      \"text\": \"Lightheadedness or fainting?\",\n      \"responseType\": \"Binary\",\n      \"condition\": \"[4]\",\n      \"reproOne\": \"If you have been lightheaded or have fainted, please say, 'yes'\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'yes' or 'no'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. Did you have lightheadedness or fainting since we last spoke?\",\n      \"value\": null\n    },\n    \"16\": {\n      \"databaseName\": \"rhr\",\n      \"text\": \"Racing heart rate?\",\n      \"responseType\": \"Binary\",\n      \"condition\": \"[4]\",\n      \"reproOne\": \"If you have had a racing heart rate, please say, 'yes'\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'yes' or 'no'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. Did you have a racing heart rate since we last spoke?\",\n      \"value\": null\n    },\n    \"17\": {\n      \"databaseName\": \"ts\",\n      \"text\": \"Trouble sleeping?\",\n      \"responseType\": \"Binary\",\n      \"condition\": \"[4]\",\n      \"reproOne\": \"If you have had trouble sleeping, please say, 'yes'\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'yes' or 'no'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. Did you have trouble sleeping since we last spoke?\",\n      \"value\": null\n    },\n    \"18\": {\n      \"databaseName\": \"te\",\n      \"text\": \"Trouble doing your usual level of exercise and exertion?\",\n      \"responseType\": \"Binary\",\n      \"condition\": \"[4]\",\n      \"reproOne\": \"If you have had trouble doing your usual level of exercise and exersion, please say, 'yes'\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'yes' or 'no'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. Did you have trouble doing your usual level of exercise and exertion since we last spoke?\",\n      \"value\": null\n    },\n    \"19\": {\n      \"databaseName\": \"o\",\n      \"text\": \"If you are having any other symptoms that you would like to share, please contact ARIC. \",\n      \"responseType\": \"Open\",\n      \"condition\": \"[4]\",\n      \"reproOne\": \"\",\n      \"reproTwo\": \"\",\n      \"reproThree\": \"\",\n      \"value\": null\n    },\n    \"20\": {\n      \"databaseName\": \"hospitalized\",\n      \"text\": \"Have you been hospitalized or been seen in the Emergency Room because of COVID-19?\",\n      \"responseType\": \"Binary\",\n      \"condition\": \"\",\n      \"reproOne\": \"If you were hospitalized or seen in the Emergency Room, please say, 'yes'\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'yes' or 'no'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. Have you been hospitalized or been seen in the Emergency Room because of COVID-19?\",\n      \"value\": null\n    },\n    \"21\": {\n      \"databaseName\": \"\",\n      \"text\": \"I'm sorry to hear that. ARIC will contact you to talk about your experience.\",\n      \"responseType\": \"None\",\n      \"condition\": \"[20]\",\n      \"reproOne\": \"\",\n      \"reproTwo\": \"\",\n      \"reproThree\": \"\",\n      \"value\": null\n    },\n    \"22\": {\n      \"databaseName\": \"\",\n      \"text\": \"Thats good to hear. \",\n      \"responseType\": \"None\",\n      \"condition\": \"![20]\",\n      \"reproOne\": \"\",\n      \"reproTwo\": \"\",\n      \"reproThree\": \"\",\n      \"value\": null\n    },\n    \"modified\": false\n  },\n  \"symptoms\": {\n    \"1\": {\n      \"databaseName\": \"symptomatic\",\n      \"text\": \"Today, are you having any symptoms that you think are related to COVID-19?\",\n      \"responseType\": \"Binary\",\n      \"condition\": \"\",\n      \"reproOne\": \"If you have symptoms you think may be related to COVID-19, please say, 'yes'\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'yes' or 'no'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. Today, are you having any symptoms that you think are related to COVID-19?\",\n      \"value\": null\n    },\n    \"2\": {\n      \"databaseName\": \"\",\n      \"text\": \"That's great news. \",\n      \"responseType\": \"None\",\n      \"condition\": \"![1]\",\n      \"reproOne\": \"None\",\n      \"reproTwo\": \"None\",\n      \"reproThree\": \"None\",\n      \"value\": null\n    },\n    \"3\": {\n      \"databaseName\": \"f\",\n      \"text\": \"I’m going to ask if you had some symptoms that have been linked to COVID-19 since we last spoke. Please respond with yes or no for each one. Fever?\",\n      \"responseType\": \"Binary\",\n      \"condition\": \"[1]\",\n      \"reproOne\": \"If you have had a fever, please say, 'yes'\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'yes' or 'no'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. Did you have a fever since we last spoke?\",\n      \"value\": null\n    },\n    \"4\": {\n      \"databaseName\": \"sb\",\n      \"text\": \"Shortness of breath?\",\n      \"responseType\": \"Binary\",\n      \"condition\": \"[1]\",\n      \"reproOne\": \"If you have had shortness of breath, please say, 'yes'\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'yes' or 'no'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. Did you have a cough since we last spoke?\",\n      \"value\": null\n    },\n    \"5\": {\n      \"databaseName\": \"co\",\n      \"text\": \"Cough?\",\n      \"responseType\": \"Binary\",\n      \"condition\": \"[1]\",\n      \"reproOne\": \"If you have had a cough, please say, 'yes'\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'yes' or 'no'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. Did you have shortness of breath since we last spoke?\",\n      \"value\": null\n    },\n    \"6\": {\n      \"databaseName\": \"dp\",\n      \"text\": \"Digestive problems?\",\n      \"responseType\": \"Binary\",\n      \"condition\": \"[1]\",\n      \"reproOne\": \"If you have had digestive problems, please say, 'yes'\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'yes' or 'no'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. Did you have digestive problems since we last spoke?\",\n      \"value\": null\n    },\n    \"7\": {\n      \"databaseName\": \"h\",\n      \"text\": \"Headache?\",\n      \"responseType\": \"Binary\",\n      \"condition\": \"[1]\",\n      \"reproOne\": \"If you have had a headache, please say, 'yes'\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'yes' or 'no'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. Did you have a headache since we last spoke?\",\n      \"value\": null\n    },\n    \"8\": {\n      \"databaseName\": \"ba\",\n      \"text\": \"Body aches?\",\n      \"responseType\": \"Binary\",\n      \"condition\": \"[1]\",\n      \"reproOne\": \"If you have had body aches, please say, 'yes'\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'yes' or 'no'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. Did you have body aches since we last spoke?\",\n      \"value\": null\n    },\n    \"9\": {\n      \"databaseName\": \"cp\",\n      \"text\": \"Chest pain?\",\n      \"responseType\": \"Binary\",\n      \"condition\": \"[1]\",\n      \"reproOne\": \"If you have had chest pain, please say, 'yes'\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'yes' or 'no'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. Did you have chest pain since we last spoke?\",\n      \"value\": null\n    },\n    \"10\": {\n      \"databaseName\": \"fa\",\n      \"text\": \"Fatigue?\",\n      \"responseType\": \"Binary\",\n      \"condition\": \"[1]\",\n      \"reproOne\": \"If you have been fatigued, please say, 'yes'\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'yes' or 'no'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. Did you have fatigue since we last spoke?\",\n      \"value\": null\n    },\n    \"11\": {\n      \"databaseName\": \"tpa\",\n      \"text\": \"Trouble paying attention?\",\n      \"responseType\": \"Binary\",\n      \"condition\": \"[1]\",\n      \"reproOne\": \"If you have had trouble paying attention, please say, 'yes'\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'yes' or 'no'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. Did you have trouble paying attention since we last spoke?\",\n      \"value\": null\n    },\n    \"12\": {\n      \"databaseName\": \"cn\",\n      \"text\": \"Confusion?\",\n      \"responseType\": \"Binary\",\n      \"condition\": \"[1]\",\n      \"reproOne\": \"If you have felt confused, please say, 'yes'\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'yes' or 'no'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. Did you have confusion since we last spoke?\",\n      \"value\": null\n    },\n    \"13\": {\n      \"databaseName\": \"lf\",\n      \"text\": \"Lightheadedness or fainting?\",\n      \"responseType\": \"Binary\",\n      \"condition\": \"[1]\",\n      \"reproOne\": \"If you have been lightheaded or have fainted, please say, 'yes'\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'yes' or 'no'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. Did you have lightheadedness or fainting since we last spoke?\",\n      \"value\": null\n    },\n    \"14\": {\n      \"databaseName\": \"rhr\",\n      \"text\": \"Racing heart rate?\",\n      \"responseType\": \"Binary\",\n      \"condition\": \"[1]\",\n      \"reproOne\": \"If you have had a racing heart rate, please say, 'yes'\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'yes' or 'no'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. Did you have a racing heart rate since we last spoke?\",\n      \"value\": null\n    },\n    \"15\": {\n      \"databaseName\": \"ts\",\n      \"text\": \"Trouble sleeping?\",\n      \"responseType\": \"Binary\",\n      \"condition\": \"[1]\",\n      \"reproOne\": \"If you have had trouble sleeping, please say, 'yes'\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'yes' or 'no'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. Did you have trouble sleeping since we last spoke?\",\n      \"value\": null\n    },\n    \"16\": {\n      \"databaseName\": \"te\",\n      \"text\": \"Trouble doing your usual level of exercise and exertion?\",\n      \"responseType\": \"Binary\",\n      \"condition\": \"[1]\",\n      \"reproOne\": \"If you have had trouble doing your usual level of exercise and exersion, please say, 'yes'\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'yes' or 'no'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. Did you have trouble doing your usual level of exercise and exertion since we last spoke?\",\n      \"value\": null\n    },\n    \"17\": {\n      \"databaseName\": \"o\",\n      \"text\": \"If you are having any other symptoms that you would like to share, please contact ARIC. \",\n      \"responseType\": \"Open\",\n      \"condition\": \"[1]\",\n      \"reproOne\": \"None\",\n      \"reproTwo\": \"None\",\n      \"reproThree\": \"None\",\n      \"value\": null\n    },\n    \"18\": {\n      \"databaseName\": \"lc\",\n      \"text\": \"Some people have been reporting prolonged symptoms after COVID-infection, or what some are calling “long COVID.” Do you think you have “long COVID”?\",\n      \"responseType\": \"Binary\",\n      \"condition\": \"\",\n      \"reproOne\": \"If you think you have long COVID, please say, 'yes'\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'yes' or 'no'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. Some people have been reporting prolonged symptoms after COVID-infection, or what some are calling “long COVID.” Do you think you have “long COVID”?\",\n      \"value\": null\n    },\n    \"19\": {\n      \"databaseName\": \"lt\",\n      \"text\": \"On a scale of 1 to 10, where 1 is not worried and 10 is very worried, how concerned are you that COVID-19 might affect your health in the long-term?\",\n      \"responseType\": \"Numeric\",\n      \"condition\": \"\",\n      \"reproOne\": \"If you are moderately worried about how COVID will affect your health in the long-term, please say, 5\",\n      \"reproTwo\": \"I'm sorry, I was looking for a number from one to ten. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. On a scale of 1 to 10, where 1 is not worried and 10 is very worried, how concerned are you that COVID-19 might affect your health in the long-term?\",\n      \"value\": null\n    },\n    \"20\": {\n      \"databaseName\": \"lto\",\n      \"text\": \"If you would like to speak to someone about these concerns, please contact ARIC. \",\n      \"responseType\": \"Open\",\n      \"condition\": \"[19] > 5\",\n      \"reproOne\": \"None\",\n      \"reproTwo\": \"None\",\n      \"reproThree\": \"None\",\n      \"value\": null\n    },\n    \"modified\": false\n  },\n  \"health\": {\n    \"1\": {\n      \"databaseName\": \"f\",\n      \"text\": \"Now, I’m going to ask some questions about your general health. I’m going to list several symptoms, please respond yes or no for each one. Since we last spoke, have you had a fever?\",\n      \"responseType\": \"Binary\",\n      \"condition\": \"\",\n      \"reproOne\": \"If you have had a fever, please say, 'yes'\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'yes' or 'no'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. Did you have a fever since we last spoke?\",\n      \"value\": null\n    },\n    \"2\": {\n      \"databaseName\": \"ft\",\n      \"text\": \"Is this better, worse, or the same as your usual state of health?\",\n      \"responseType\": \"Triage\",\n      \"condition\": \"[1]\",\n      \"reproOne\": \"If this is worse than your regular state of health, please say, 'worse'. If you do not know, say 'I don't know'.\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'better', 'worse', or 'the same'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. Is this better, worse, or the same as your usual state of health?\",\n      \"value\": null\n    },\n    \"3\": {\n      \"databaseName\": \"sb\",\n      \"text\": \"Have you had shortness of breath?\",\n      \"responseType\": \"Binary\",\n      \"condition\": \"\",\n      \"reproOne\": \"If you have had shortness of breath, please say, 'yes'\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'yes' or 'no'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. Did you have shortness of breath since we last spoke?\",\n      \"value\": null\n    },\n    \"4\": {\n      \"databaseName\": \"sbt\",\n      \"text\": \"Is this better, worse, or the same as your usual state of health?\",\n      \"responseType\": \"Triage\",\n      \"condition\": \"[3]\",\n      \"reproOne\": \"If this is worse than your regular state of health, please say, 'worse'. If you do not know, say 'I don't know'.\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'better', 'worse', or 'the same'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. Is this better, worse, or the same as your usual state of health?\",\n      \"value\": null\n    },\n    \"5\": {\n      \"databaseName\": \"co\",\n      \"text\": \"Cough?\",\n      \"responseType\": \"Binary\",\n      \"condition\": \"\",\n      \"reproOne\": \"If you have had a cough, please say, 'yes'\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'yes' or 'no'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. Did you have a cough since we last spoke?\",\n      \"value\": null\n    },\n    \"6\": {\n      \"databaseName\": \"cot\",\n      \"text\": \"Is this better, worse, or the same as your usual state of health?\",\n      \"responseType\": \"Triage\",\n      \"condition\": \"[5]\",\n      \"reproOne\": \"If this is worse than your regular state of health, please say, 'worse'. If you do not know, say 'I don't know'.\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'better', 'worse', or 'the same'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. Is this better, worse, or the same as your usual state of health?\",\n      \"value\": null\n    },\n    \"7\": {\n      \"databaseName\": \"dp\",\n      \"text\": \"Digestive problems?\",\n      \"responseType\": \"Binary\",\n      \"condition\": \"\",\n      \"reproOne\": \"If you have had digestive problems, please say, 'yes'\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'yes' or 'no'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. Did you have digestive problems since we last spoke?\",\n      \"value\": null\n    },\n    \"8\": {\n      \"databaseName\": \"dpt\",\n      \"text\": \"Is this better, worse, or the same as your usual state of health?\",\n      \"responseType\": \"Triage\",\n      \"condition\": \"[7]\",\n      \"reproOne\": \"If this is worse than your regular state of health, please say, 'worse'. If you do not know, say 'I don't know'.\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'better', 'worse', or 'the same'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. Is this better, worse, or the same as your usual state of health?\",\n      \"value\": null\n    },\n    \"9\": {\n      \"databaseName\": \"h\",\n      \"text\": \"Headache?\",\n      \"responseType\": \"Binary\",\n      \"condition\": \"\",\n      \"reproOne\": \"If you have had a headache, please say, 'yes'\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'yes' or 'no'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. Did you have a headache since we last spoke?\",\n      \"value\": null\n    },\n    \"10\": {\n      \"databaseName\": \"ht\",\n      \"text\": \"Is this better, worse, or the same as your usual state of health?\",\n      \"responseType\": \"Triage\",\n      \"condition\": \"[9]\",\n      \"reproOne\": \"If this is worse than your regular state of health, please say, 'worse'. If you do not know, say 'I don't know'.\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'better', 'worse', or 'the same'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. Is this better, worse, or the same as your usual state of health?\",\n      \"value\": null\n    },\n    \"11\": {\n      \"databaseName\": \"ba\",\n      \"text\": \"Body aches?\",\n      \"responseType\": \"Binary\",\n      \"condition\": \"\",\n      \"reproOne\": \"If you have had body aches, please say, 'yes'\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'yes' or 'no'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. Did you have body aches since we last spoke?\",\n      \"value\": null\n    },\n    \"12\": {\n      \"databaseName\": \"bat\",\n      \"text\": \"Is this better, worse, or the same as your usual state of health?\",\n      \"responseType\": \"Triage\",\n      \"condition\": \"[11]\",\n      \"reproOne\": \"If this is worse than your regular state of health, please say, 'worse'. If you do not know, say 'I don't know'.\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'better', 'worse', or 'the same'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. Is this better, worse, or the same as your usual state of health?\",\n      \"value\": null\n    },\n    \"13\": {\n      \"databaseName\": \"cp\",\n      \"text\": \"Chest pain?\",\n      \"responseType\": \"Binary\",\n      \"condition\": \"\",\n      \"reproOne\": \"If you have had chest pain, please say, 'yes'\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'yes' or 'no'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. Did you have chest pain since we last spoke?\",\n      \"value\": null\n    },\n    \"14\": {\n      \"databaseName\": \"cpt\",\n      \"text\": \"Is this better, worse, or the same as your usual state of health?\",\n      \"responseType\": \"Triage\",\n      \"condition\": \"[13]\",\n      \"reproOne\": \"If this is worse than your regular state of health, please say, 'worse'. If you do not know, say 'I don't know'.\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'better', 'worse', or 'the same'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. Is this better, worse, or the same as your usual state of health?\",\n      \"value\": null\n    },\n    \"15\": {\n      \"databaseName\": \"fa\",\n      \"text\": \"Fatigue?\",\n      \"responseType\": \"Binary\",\n      \"condition\": \"\",\n      \"reproOne\": \"If you have been fatigued, please say, 'yes'\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'yes' or 'no'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. Did you have fatigue since we last spoke?\",\n      \"value\": null\n    },\n    \"16\": {\n      \"databaseName\": \"fat\",\n      \"text\": \"Is this better, worse, or the same as your usual state of health?\",\n      \"responseType\": \"Triage\",\n      \"condition\": \"[15]\",\n      \"reproOne\": \"If this is worse than your regular state of health, please say, 'worse'. If you do not know, say 'I don't know'.\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'better', 'worse', or 'the same'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. Is this better, worse, or the same as your usual state of health?\",\n      \"value\": null\n    },\n    \"17\": {\n      \"databaseName\": \"tpa\",\n      \"text\": \"Trouble paying attention?\",\n      \"responseType\": \"Binary\",\n      \"condition\": \"\",\n      \"reproOne\": \"If you have had trouble paying attention, please say, 'yes'\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'yes' or 'no'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. Did you have trouble paying attention since we last spoke?\",\n      \"value\": null\n    },\n    \"18\": {\n      \"databaseName\": \"tpat\",\n      \"text\": \"Is this better, worse, or the same as your usual state of health?\",\n      \"responseType\": \"Triage\",\n      \"condition\": \"[17]\",\n      \"reproOne\": \"If this is worse than your regular state of health, please say, 'worse'. If you do not know, say 'I don't know'.\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'better', 'worse', or 'the same'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. Is this better, worse, or the same as your usual state of health?\",\n      \"value\": null\n    },\n    \"19\": {\n      \"databaseName\": \"cn\",\n      \"text\": \"Confusion?\",\n      \"responseType\": \"Binary\",\n      \"condition\": \"\",\n      \"reproOne\": \"If you have felt confused, please say, 'yes'\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'yes' or 'no'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. Did you have confusion since we last spoke?\",\n      \"value\": null\n    },\n    \"20\": {\n      \"databaseName\": \"cnt\",\n      \"text\": \"Is this better, worse, or the same as your usual state of health?\",\n      \"responseType\": \"Triage\",\n      \"condition\": \"[19]\",\n      \"reproOne\": \"If this is worse than your regular state of health, please say, 'worse'. If you do not know, say 'I don't know'.\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'better', 'worse', or 'the same'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. Is this better, worse, or the same as your usual state of health?\",\n      \"value\": null\n    },\n    \"21\": {\n      \"databaseName\": \"lf\",\n      \"text\": \"Lightheadedness or fainting?\",\n      \"responseType\": \"Binary\",\n      \"condition\": \"\",\n      \"reproOne\": \"If you have been lightheaded or have fainted, please say, 'yes'\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'yes' or 'no'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. Did you have lightheadedness or fainting since we last spoke?\",\n      \"value\": null\n    },\n    \"22\": {\n      \"databaseName\": \"lft\",\n      \"text\": \"Is this better, worse, or the same as your usual state of health?\",\n      \"responseType\": \"Triage\",\n      \"condition\": \"[21]\",\n      \"reproOne\": \"If this is worse than your regular state of health, please say, 'worse'. If you do not know, say 'I don't know'.\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'better', 'worse', or 'the same'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. Is this better, worse, or the same as your usual state of health?\",\n      \"value\": null\n    },\n    \"23\": {\n      \"databaseName\": \"rhr\",\n      \"text\": \"Racing heart rate?\",\n      \"responseType\": \"Binary\",\n      \"condition\": \"\",\n      \"reproOne\": \"If you have had a racing heart rate, please say, 'yes'\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'yes' or 'no'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. Did you have a racing heart rate since we last spoke?\",\n      \"value\": null\n    },\n    \"24\": {\n      \"databaseName\": \"rhrt\",\n      \"text\": \"Is this better, worse, or the same as your usual state of health?\",\n      \"responseType\": \"Triage\",\n      \"condition\": \"[23]\",\n      \"reproOne\": \"If this is worse than your regular state of health, please say, 'worse'. If you do not know, say 'I don't know'.\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'better', 'worse', or 'the same'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. Is this better, worse, or the same as your usual state of health?\",\n      \"value\": null\n    },\n    \"25\": {\n      \"databaseName\": \"ts\",\n      \"text\": \"Trouble sleeping?\",\n      \"responseType\": \"Binary\",\n      \"condition\": \"\",\n      \"reproOne\": \"If you have had trouble sleeping, please say, 'yes'\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'yes' or 'no'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. Did you have trouble sleeping since we last spoke?\",\n      \"value\": null\n    },\n    \"26\": {\n      \"databaseName\": \"tst\",\n      \"text\": \"Is this better, worse, or the same as your usual state of health?\",\n      \"responseType\": \"Triage\",\n      \"condition\": \"[25]\",\n      \"reproOne\": \"If this is worse than your regular state of health, please say, 'worse'. If you do not know, say 'I don't know'.\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'better', 'worse', or 'the same'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. Is this better, worse, or the same as your usual state of health?\",\n      \"value\": null\n    },\n    \"27\": {\n      \"databaseName\": \"te\",\n      \"text\": \"Trouble doing your usual level of exercise and exertion?\",\n      \"responseType\": \"Binary\",\n      \"condition\": \"\",\n      \"reproOne\": \"If you have had trouble doing your usual level of exercise and exersion, please say, 'yes'\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'yes' or 'no'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. Did you have trouble doing your usual level of exercise and exertion since we last spoke?\",\n      \"value\": null\n    },\n    \"28\": {\n      \"databaseName\": \"tet\",\n      \"text\": \"Is this better, worse, or the same as your usual state of health?\",\n      \"responseType\": \"Triage\",\n      \"condition\": \"[27]\",\n      \"reproOne\": \"If this is worse than your regular state of health, please say, 'worse'. If you do not know, say 'I don't know'.\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'better', 'worse', or 'the same'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. Is this better, worse, or the same as your usual state of health?\",\n      \"value\": null\n    },\n    \"29\": {\n      \"databaseName\": \"ob\",\n      \"text\": \"Are you having any other symptoms that are bothersome to you?\",\n      \"responseType\": \"Binary\",\n      \"condition\": \"\",\n      \"reproOne\": \"If you are having any other bothersome symptoms, please say, 'yes'\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'yes' or 'no'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. Are you having any other symptoms that are bothersome to you?\",\n      \"value\": null\n    },\n    \"30\": {\n      \"databaseName\": \"o\",\n      \"text\": \"If you would like to communicate these symptoms, please contact Aric. \",\n      \"responseType\": \"Open\",\n      \"condition\": \"[29]\",\n      \"reproOne\": \"In ten seconds or less, please describe these symptoms, or say 'None'\",\n      \"reproTwo\": \"None\",\n      \"reproThree\": \"None\",\n      \"value\": null\n    },\n    \"modified\": false\n  },\n  \"mentalhealth\": {\n    \"1\": {\n      \"databaseName\": \"b\",\n      \"text\": \"I’m going to provide a list of some ways you might have felt or behaved in the past week. Please indicate how many days you have felt this way during the past week. Please answer with a round number, between zero days in the last week and seven days in the last week. I was bothered by things that usually don’t bother me.\",\n      \"responseType\": \"Numeric\",\n      \"condition\": \"\",\n      \"reproOne\": \"Please indicate how many days in the past week you were bothered by things that usually don't bother you.\",\n      \"reproTwo\": \"I'm sorry, I was looking for a number from one to seven. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. How many days this past week were you bothered by things that usually don't bother you? \",\n      \"value\": null\n    },\n    \"2\": {\n      \"databaseName\": \"mod\",\n      \"text\": \"I had trouble keeping my mind on what I was doing.\",\n      \"responseType\": \"Numeric\",\n      \"condition\": \"\",\n      \"reproOne\": \"Please indicate how many days in the past week you had trouble keeping your mind on what you were doing.\",\n      \"reproTwo\": \"I'm sorry, I was looking for a number from one to seven. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. How many days this past week did you have trouble keeping your mind on what you were doing? \",\n      \"value\": null\n    },\n    \"3\": {\n      \"databaseName\": \"d\",\n      \"text\": \"I felt depressed.\",\n      \"responseType\": \"Numeric\",\n      \"condition\": \"\",\n      \"reproOne\": \"Please indicate how many days in the past week you had felt depressed.\",\n      \"reproTwo\": \"I'm sorry, I was looking for a number from one to seven. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. How many days this past week did you feel depressed? \",\n      \"value\": null\n    },\n    \"4\": {\n      \"databaseName\": \"e\",\n      \"text\": \"I felt that everything I did was an eﬀort.\",\n      \"responseType\": \"Numeric\",\n      \"condition\": \"\",\n      \"reproOne\": \"Please indicate how many days in the past week you felt everything you did was an effort.\",\n      \"reproTwo\": \"I'm sorry, I was looking for a number from one to seven. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. How many days this past week did you feel everything you did was an effort? \",\n      \"value\": null\n    },\n    \"5\": {\n      \"databaseName\": \"fu\",\n      \"text\": \"I felt hopeful about the future.\",\n      \"responseType\": \"Numeric\",\n      \"condition\": \"\",\n      \"reproOne\": \"Please indicate how many days in the past week you felt hopeful about the future.\",\n      \"reproTwo\": \"I'm sorry, I was looking for a number from one to seven. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. How many days this past week did you feel hopeful about the future? \",\n      \"value\": null\n    },\n    \"6\": {\n      \"databaseName\": \"fe\",\n      \"text\": \"I felt fearful.\",\n      \"responseType\": \"Numeric\",\n      \"condition\": \"\",\n      \"reproOne\": \"Please indicate how many days in the past week you felt fearful.\",\n      \"reproTwo\": \"I'm sorry, I was looking for a number from one to seven. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. How many days this past week did you feel fearful? \",\n      \"value\": null\n    },\n    \"7\": {\n      \"databaseName\": \"r\",\n      \"text\": \"My sleep was restless.\",\n      \"responseType\": \"Numeric\",\n      \"condition\": \"\",\n      \"reproOne\": \"Please indicate how many nights in the past week you felt your sleep was restless.\",\n      \"reproTwo\": \"I'm sorry, I was looking for a number from one to seven. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. How many nights this past week was your sleep restless? \",\n      \"value\": null\n    },\n    \"8\": {\n      \"databaseName\": \"h\",\n      \"text\": \"I was happy.\",\n      \"responseType\": \"Numeric\",\n      \"condition\": \"\",\n      \"reproOne\": \"Please indicate how many days in the past week you were happy.\",\n      \"reproTwo\": \"I'm sorry, I was looking for a number from one to seven. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. How many days this past week were you happy? \",\n      \"value\": null\n    },\n    \"9\": {\n      \"databaseName\": \"l\",\n      \"text\": \"I felt lonely.\",\n      \"responseType\": \"Numeric\",\n      \"condition\": \"\",\n      \"reproOne\": \"Please indicate how many days in the past week you felt lonely.\",\n      \"reproTwo\": \"I'm sorry, I was looking for a number from one to seven. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. How many days this past week did you feel lonely? \",\n      \"value\": null\n    },\n    \"10\": {\n      \"databaseName\": \"gg\",\n      \"text\": \"I could not 'get going.'\",\n      \"responseType\": \"Numeric\",\n      \"condition\": \"\",\n      \"reproOne\": \"Please indicate how many days in the past week you felt you could not 'get going'.\",\n      \"reproTwo\": \"I'm sorry, I was looking for a number from one to seven. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. How many days this past week did you feel you could not 'get going'? \",\n      \"value\": null\n    },\n    \"11\": {\n      \"databaseName\": \"ow\",\n      \"text\": \"My worries overwhelmed me\",\n      \"responseType\": \"Numeric\",\n      \"condition\": \"\",\n      \"reproOne\": \"Please indicate how many days in the past week you felt your worries overwhelmed you.\",\n      \"reproTwo\": \"I'm sorry, I was looking for a number from one to seven. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. How many days this past week did your worries overwhelm you? \",\n      \"value\": null\n    },\n    \"12\": {\n      \"databaseName\": \"u\",\n      \"text\": \"I felt uneasy\",\n      \"responseType\": \"Numeric\",\n      \"condition\": \"\",\n      \"reproOne\": \"Please indicate how many days in the past week you felt uneasy.\",\n      \"reproTwo\": \"I'm sorry, I was looking for a number from one to seven. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. How many days this past week did you feel uneasy? \",\n      \"value\": null\n    },\n    \"13\": {\n      \"databaseName\": \"a\",\n      \"text\": \"I found it hard to focus on anything other than my anxiety\",\n      \"responseType\": \"Numeric\",\n      \"condition\": \"\",\n      \"reproOne\": \"Please indicate how many days in the past week you found it hard to focus on anything other than your anxiety.\",\n      \"reproTwo\": \"I'm sorry, I was looking for a number from one to seven. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. How many days this past week did you find it haard to focus on anything other than your anxiety? \",\n      \"value\": null\n    },\n    \"14\": {\n      \"databaseName\": \"fa\",\n      \"text\": \"I felt fatigued\",\n      \"responseType\": \"Numeric\",\n      \"condition\": \"\",\n      \"reproOne\": \"Please indicate how many days in the past week you felt fatigued.\",\n      \"reproTwo\": \"I'm sorry, I was looking for a number from one to seven. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. How many days this past week did you feel fatigued? \",\n      \"value\": null\n    },\n    \"15\": {\n      \"databaseName\": \"t\",\n      \"text\": \"I had trouble starting things because I was tired\",\n      \"responseType\": \"Numeric\",\n      \"condition\": \"\",\n      \"reproOne\": \"Please indicate how many days in the past week you had trouble starting things because you were tired.\",\n      \"reproTwo\": \"I'm sorry, I was looking for a number from one to seven. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. How many days this past week did you have trouble starting things because you were tired? \",\n      \"value\": null\n    },\n    \"16\": {\n      \"databaseName\": \"ov\",\n      \"text\": \"Overall, compared to your usual mood, are you feeling worse than usual?\",\n      \"responseType\": \"Binary\",\n      \"condition\": \"\",\n      \"reproOne\": \"If your mood is worse than usual please say, 'yes'\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'yes' or 'no'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. Overall, compared to your usual mood, are you feeling worse than usual?\",\n      \"value\": null\n    },\n    \"17\": {\n      \"databaseName\": \"o\",\n      \"text\": \"Thank you. \",\n      \"responseType\": \"Open\",\n      \"condition\": \"[16]\",\n      \"reproOne\": \"\",\n      \"reproTwo\": \"\",\n      \"reproThree\": \"\",\n      \"value\": null\n    },\n    \"18\": {\n      \"databaseName\": \"contact\",\n      \"text\": \"Would you like help in finding someone to talk with you about your mood?\",\n      \"responseType\": \"Binary\",\n      \"condition\": \"\",\n      \"reproOne\": \"If you would like help in finding someone to talk with about your mood, please say, 'yes'\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'yes' or 'no'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. Would you like help in finding someone to talk with you about your mood?\",\n      \"value\": null\n    },\n    \"19\": {\n      \"databaseName\": \"\",\n      \"text\": \"OK, ARIC will contact you to discuss the options.\",\n      \"responseType\": \"None\",\n      \"condition\": \"[18]\",\n      \"reproOne\": \"\",\n      \"reproTwo\": \"\",\n      \"reproThree\": \"\",\n      \"value\": null\n    },\n    \"20\": {\n      \"databaseName\": \"\",\n      \"text\": \"OK. If you change your mind, please contact ARIC.\",\n      \"responseType\": \"None\",\n      \"condition\": \"![18]\",\n      \"reproOne\": \"\",\n      \"reproTwo\": \"\",\n      \"reproThree\": \"\",\n      \"value\": null\n    },\n    \"modified\": false\n  },\n  \"feedback\": {\n    \"1\": {\n      \"databaseName\": \"o\",\n      \"text\": \"Great! \",\n      \"responseType\": \"Open\",\n      \"condition\": \"\",\n      \"reproOne\": \"In ten seconds or less, tell me what you thought about answering health questions with Alexa, or say, 'None'\",\n      \"reproTwo\": \"\",\n      \"reproThree\": \"\",\n      \"value\": null\n    },\n    \"2\": {\n      \"databaseName\": \"t\",\n      \"text\": \"Do you think taking questionnaires with Alexa is better, worse, or the same as doing them in person\",\n      \"responseType\": \"Triage\",\n      \"condition\": \"\",\n      \"reproOne\": \"If taking questionnaires with alexa is worse than doing them in person, please say 'worse'. If you do not know, say 'I don't know'.\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'better', 'worse', or 'the same'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. Do you think taking questionnaires with Alexa is better, worse, or the same as doing them in person\",\n      \"value\": null\n    },\n    \"3\": {\n      \"databaseName\": \"n\",\n      \"text\": \"On a scale of 1 to 10, please let me know how convenient answering healthcare questions using Alexa is.\",\n      \"responseType\": \"Numeric\",\n      \"condition\": \"\",\n      \"reproOne\": \"If answering healthcare questions using alexa is moderately convenient, please say 5\",\n      \"reproTwo\": \"I'm sorry, I was looking for a number between one and ten. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. On a scale of 1 to 10, please let me know how convenient answering healthcare questions using Alexa is.\",\n      \"value\": null\n    },\n    \"4\": {\n      \"databaseName\": \"b\",\n      \"text\": \"Would you be interested in doing more questionnaires with Alexa?\",\n      \"responseType\": \"Binary\",\n      \"condition\": \"\",\n      \"reproOne\": \"If you would be interested in doing more questionnaires with Alexa, please say yes\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'yes' or 'no'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. Would you be interested in doing more questionnaires with Alexa?\",\n      \"value\": null\n    },\n    \"modified\": false\n  },\n  \"dailyReminder\": {\n    \"1\": {\n      \"databaseName\": \"\",\n      \"text\": \"In order to better understand how people recover from COVID-19, ARIC would like to check in with you for the next few days until you are fully recovered. Is it okay if we talk again tomorrow?\",\n      \"responseType\": \"Binary\",\n      \"condition\": \"\",\n      \"reproOne\": \"If you would be okay speaking with me tomorrow, say 'yes'. Otherwise, say 'no'\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'yes' or 'no'. If you would like to speak to ARIC about these check-ins answer 'no'\",\n      \"reproThree\": \"I'm sorry, I didn't understand that. May I speak to you again tomorrow?\",\n      \"value\": null\n    },\n    \"2\": {\n      \"databaseName\": \"\",\n      \"text\": \"What time works for your check-in tomorrow?\",\n      \"responseType\": \"Time\",\n      \"condition\": \"[1]\",\n      \"reproOne\": \"Hmm. I didn't get that. What time works for your check-in tomorrow?\",\n      \"reproTwo\": \"Hmm. I still did not get that. What time works for your check-in tomorrow?\",\n      \"reproThree\": \"What time works for your check-in tomorrow?\",\n      \"value\": null\n    },\n    \"3\": {\n      \"databaseName\": \"\",\n      \"text\": \"Lets speak at 11:00.\",\n      \"responseType\": \"None\",\n      \"condition\": \"[2] == -1\",\n      \"reproOne\": \"\",\n      \"reproTwo\": \"\",\n      \"reproThree\": \"\",\n      \"value\": null\n    },\n    \"4\": {\n      \"databaseName\": \"\",\n      \"text\": \"Would you like to be reminded before your daily check-ins?\",\n      \"responseType\": \"Binary\",\n      \"condition\": \"[1]\",\n      \"reproOne\": \"If you would like me to remind you before our check-ins, say 'yes'. Otherwise say 'no'.\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'yes' or 'no'. If you would like to reschedule to a different time, answer 'no'\",\n      \"reproThree\": \"I'm sorry, I didn't understand that. Would you like to be reminded before our check-ins?\",\n      \"value\": null\n    },\n    \"5\": {\n      \"databaseName\": \"\",\n      \"text\": \"Awesome! I'll speak to you tomorrow!\",\n      \"responseType\": \"None\",\n      \"condition\": \"[1] && [4]\",\n      \"reproOne\": \"\",\n      \"reproTwo\": \"\",\n      \"reproThree\": \"\",\n      \"value\": null\n    },\n    \"6\": {\n      \"databaseName\": \"\",\n      \"text\": \"Okay got it. I'll speak to you tomorrow!\",\n      \"responseType\": \"None\",\n      \"condition\": \"[1] && ![4]\",\n      \"reproOne\": \"\",\n      \"reproTwo\": \"\",\n      \"reproThree\": \"\",\n      \"value\": null\n    },\n    \"7\": {\n      \"databaseName\": \"\",\n      \"text\": \"OK, got it. ARIC will contact you directly to find out what would work best for you.\",\n      \"responseType\": \"None\",\n      \"condition\": \"![1]\",\n      \"reproOne\": \"\",\n      \"reproTwo\": \"\",\n      \"reproThree\": \"\",\n      \"value\": null\n    },\n    \"modified\": false\n  },\n  \"monthlyReminder\": {\n    \"1\": {\n      \"databaseName\": \"\",\n      \"text\": \"In order to better understand COVID-19, ARIC would like to check in on your health one day each week. This can be done using your alexa. May I speak to you on Fridays?\",\n      \"responseType\": \"Binary\",\n      \"condition\": \"\",\n      \"reproOne\": \"If you would be okay speaking with me on the first Friday, Saturday, and Sunday of the month, say 'yes'. Otherwise, say 'no'\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'yes' or 'no'. If you would like to speak to ARIC or reschedule to a different day, answer 'no'\",\n      \"reproThree\": \"I'm sorry, I didn't understand that. May I speak to you on the first Friday, Saturday, and Sunday of the month?\",\n      \"value\": null\n    },\n    \"2\": {\n      \"databaseName\": \"\",\n      \"text\": \"Great! If you would like to change this day, just say 'Alexa, ask ARIC Study to change my check-in day.' What time works for your check-in?\",\n      \"responseType\": \"Time\",\n      \"condition\": \"[1]\",\n      \"reproOne\": \"Hmm. I didn't get that. What time works for your check-in?\",\n      \"reproTwo\": \"Hmm. I still did not get that. What time works for your check-in?\",\n      \"reproThree\": \"What time works for your check-in?\",\n      \"value\": null\n    },\n    \"3\": {\n      \"databaseName\": \"\",\n      \"text\": \"Lets speak at 11:00.\",\n      \"responseType\": \"None\",\n      \"condition\": \"[2] == -1\",\n      \"reproOne\": \"\",\n      \"reproTwo\": \"\",\n      \"reproThree\": \"\",\n      \"value\": null\n    },\n    \"4\": {\n      \"databaseName\": \"\",\n      \"text\": \"Would you like to be reminded before your check-ins?\",\n      \"responseType\": \"Binary\",\n      \"condition\": \"[1]\",\n      \"reproOne\": \"If you would like me to remind you before our check-ins, say 'yes'. Otherwise say 'no'.\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'yes' or 'no'. If you would like to reschedule to a different time, answer 'no'\",\n      \"reproThree\": \"I'm sorry, I didn't understand that. Would you like to be reminded before our check-ins?\",\n      \"value\": null\n    },\n    \"5\": {\n      \"databaseName\": \"\",\n      \"text\": \"Great! I will speak to you then!\",\n      \"responseType\": \"None\",\n      \"condition\": \"[1] && [4]\",\n      \"reproOne\": \"\",\n      \"reproTwo\": \"\",\n      \"reproThree\": \"\",\n      \"value\": null\n    },\n    \"6\": {\n      \"databaseName\": \"\",\n      \"text\": \"Ok. Got it. I'll speak to you then!\",\n      \"responseType\": \"None\",\n      \"condition\": \"[1] && ![4]\",\n      \"reproOne\": \"\",\n      \"reproTwo\": \"\",\n      \"reproThree\": \"\",\n      \"value\": null\n    },\n    \"7\": {\n      \"databaseName\": \"\",\n      \"text\": \"Would you like to choose a different day for your check-in?\",\n      \"responseType\": \"Binary\",\n      \"condition\": \"![1]\",\n      \"reproOne\": \"If you would like to choose another day for your check-in, say 'yes'\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'yes' or 'no'. If you would like ARIC to contact you about these checkups, say 'no'\",\n      \"reproThree\": \"I'm sorry, I didn't understand that. Would you like to choose a different day for your check-in?\",\n      \"value\": null\n    },\n    \"8\": {\n      \"databaseName\": \"\",\n      \"text\": \"OK, got it. ARIC will contact you directly to find out what would work best for you. Take care and thank you for your dedication to the ARIC study.\",\n      \"responseType\": \"None\",\n      \"condition\": \"![1] && ![7]\",\n      \"reproOne\": \"\",\n      \"reproTwo\": \"\",\n      \"reproThree\": \"\",\n      \"value\": null\n    },\n    \"9\": {\n      \"databaseName\": \"\",\n      \"text\": \"What day would work for your check-in?\",\n      \"responseType\": \"Weekday\",\n      \"condition\": \"[7]\",\n      \"reproOne\": \"Hmm. I didn't get that. What day works for your check-in?\",\n      \"reproTwo\": \"Hmm. I still did not get that. What day works for your check-in?\",\n      \"reproThree\": \"What day works for your check-in?\",\n      \"value\": null\n    },\n    \"10\": {\n      \"databaseName\": \"\",\n      \"text\": \"Great! If you would like to change this day, just say 'Alexa, ask ARIC Study to change my check-in day.' What time works for your check-in?\",\n      \"responseType\": \"Time\",\n      \"condition\": \"[7]\",\n      \"reproOne\": \"Hmm. I didn't get that. What time works for your check-in?\",\n      \"reproTwo\": \"Hmm. I still did not get that. What time works for your check-in?\",\n      \"reproThree\": \"What time works for your check-in?\",\n      \"value\": null\n    },\n    \"11\": {\n      \"databaseName\": \"\",\n      \"text\": \"Lets speak at 11:00.\",\n      \"responseType\": \"None\",\n      \"condition\": \"[10] == -1\",\n      \"reproOne\": \"\",\n      \"reproTwo\": \"\",\n      \"reproThree\": \"\",\n      \"value\": null\n    },\n    \"12\": {\n      \"databaseName\": \"\",\n      \"text\": \"Would you like to be reminded before your check-ins?\",\n      \"responseType\": \"Binary\",\n      \"condition\": \"[7]\",\n      \"reproOne\": \"If you would like me to remind you before our check-ins, say 'yes'. Otherwise say 'no'.\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'yes' or 'no'. If you would like to reschedule to a different time, answer 'no'\",\n      \"reproThree\": \"I'm sorry, I didn't understand that. Would you like to be reminded before our check-ins?\",\n      \"value\": null\n    },\n    \"13\": {\n      \"databaseName\": \"\",\n      \"text\": \"Great! I will speak to you then!\",\n      \"responseType\": \"None\",\n      \"condition\": \"[7] && [12]\",\n      \"reproOne\": \"\",\n      \"reproTwo\": \"\",\n      \"reproThree\": \"\",\n      \"value\": null\n    },\n    \"14\": {\n      \"databaseName\": \"\",\n      \"text\": \"Ok. Got it. I'll speak to you then!\",\n      \"responseType\": \"None\",\n      \"condition\": \"[7] && ![12]\",\n      \"reproOne\": \"\",\n      \"reproTwo\": \"\",\n      \"reproThree\": \"\",\n      \"value\": null\n    },\n    \"modified\": false\n  }\n}",
						"ports": [
							{
								"type": "",
								"target": "6020407cf2915457a5b099a3",
								"id": "5ff767dce7b840f3a1b8defb"
							},
							{
								"type": "fail",
								"target": null,
								"id": "5ff767dce7b840f3a1b8defc"
							}
						]
					}
				},
				"5ff767dce7b840f3a1b8def8": {
					"nodeID": "5ff767dce7b840f3a1b8def8",
					"type": "block",
					"coords": [
						1207.5,
						49.24999999999997
					],
					"data": {
						"name": "Opening Logic",
						"color": "standard",
						"steps": [
							"60204675f2915457a5b09e50"
						]
					}
				},
				"60121f1c25343e75f7bedc34": {
					"nodeID": "60121f1c25343e75f7bedc34",
					"type": "user_info",
					"data": {
						"infos": [
							{
								"type": "UNOFFICIAL::account_linking",
								"mapTo": "alinking",
								"product": null
							}
						],
						"ports": [
							{
								"type": "",
								"target": "60204675f2915457a5b09e50",
								"id": "60121f1c25343e75f7bedc36"
							},
							{
								"type": "fail",
								"target": "60121fa525343e75f7bedc41",
								"id": "60121f1c25343e75f7bedc37"
							}
						]
					}
				},
				"60121f1c25343e75f7bedc38": {
					"nodeID": "60121f1c25343e75f7bedc38",
					"type": "block",
					"coords": [
						765.8711632321366,
						116.73049852805872
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"60121f1c25343e75f7bedc34"
						]
					}
				},
				"60121fa525343e75f7bedc41": {
					"nodeID": "60121fa525343e75f7bedc41",
					"type": "account_linking",
					"data": {
						"ports": [
							{
								"type": "",
								"target": "601227f425343e75f7bedc4d",
								"id": "60121fa525343e75f7bedc43"
							}
						]
					}
				},
				"60121fa525343e75f7bedc44": {
					"nodeID": "60121fa525343e75f7bedc44",
					"type": "block",
					"coords": [
						1202.5,
						397.24999999999994
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"60121fa525343e75f7bedc41",
							"601227f425343e75f7bedc4d",
							"60124e5725343e75f7beddec"
						]
					}
				},
				"601227f425343e75f7bedc4d": {
					"nodeID": "601227f425343e75f7bedc4d",
					"type": "speak",
					"data": {
						"randomize": false,
						"dialogs": [
							{
								"voice": "Alexa",
								"content": "Please set up account linking. I have sent a card to your alexa app."
							}
						],
						"ports": [
							{
								"type": "",
								"target": "60124e5725343e75f7beddec",
								"id": "601227f425343e75f7bedc50"
							}
						]
					}
				},
				"60124e5725343e75f7beddec": {
					"nodeID": "60124e5725343e75f7beddec",
					"type": "exit",
					"data": {
						"ports": []
					}
				},
				"601a3792b0f5e32def4d660a": {
					"nodeID": "601a3792b0f5e32def4d660a",
					"type": "directive",
					"data": {
						"directive": "{\n  \"query\": [\"INSERT INTO \\\"checkin\\\" (userid) VALUES ($1) RETURNING \\\"checkinid\\\"\"],\n  \"params\": [\"_cognitoId\"],\n  \"to\": \"checkinId\"\n}",
						"ports": [
							{
								"type": "",
								"target": "603600d29ebf9102df39ec3b",
								"id": "601a3792b0f5e32def4d660c"
							}
						]
					}
				},
				"601a3792b0f5e32def4d660d": {
					"nodeID": "601a3792b0f5e32def4d660d",
					"type": "block",
					"coords": [
						2375.8108348118612,
						80.60374456255096
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"6020407cf2915457a5b099a3",
							"601cbb582df5563b280f6df8",
							"601a3792b0f5e32def4d660a",
							"603600d29ebf9102df39ec3b",
							"603601079ebf9102df39ec45"
						]
					}
				},
				"601cbb582df5563b280f6df8": {
					"nodeID": "601cbb582df5563b280f6df8",
					"type": "directive",
					"data": {
						"directive": "{\n  \"query\": [\"SELECT CONCAT(to_char(\\\"timestamp\\\", 'Month'), EXTRACT(DAY FROM \\\"timestamp\\\")) FROM checkin WHERE \\\"userid\\\" = $1 AND \\\"productive\\\" = 't' ORDER BY \\\"timestamp\\\" DESC;\"],\n  \"params\": [\"_cognitoId\"],\n  \"to\": \"lastInteraction\"\n}",
						"ports": [
							{
								"type": "",
								"target": "601a3792b0f5e32def4d660a",
								"id": "601cbb582df5563b280f6dfb"
							}
						]
					}
				},
				"6020407cf2915457a5b099a3": {
					"nodeID": "6020407cf2915457a5b099a3",
					"type": "directive",
					"data": {
						"directive": "{\n  \"query\": [\"SELECT \\\"userid\\\" FROM \\\"users\\\" WHERE \\\"username\\\" = $1\"],\n  \"params\": [\"_userInfo\"],\n  \"to\": \"cognitoId\"\n}",
						"ports": [
							{
								"type": "",
								"target": "601cbb582df5563b280f6df8",
								"id": "6020407cf2915457a5b099a6"
							}
						]
					}
				},
				"60204675f2915457a5b09e50": {
					"nodeID": "60204675f2915457a5b09e50",
					"type": "api",
					"data": {
						"url": "https://aricalexa.auth.us-east-2.amazoncognito.com/oauth2/userInfo",
						"body": [
							{
								"key": "",
								"val": ""
							}
						],
						"params": [
							{
								"key": "",
								"val": ""
							}
						],
						"method": "GET",
						"headers": [
							{
								"key": "Authorization",
								"val": "Bearer {{[alinking].alinking}}"
							}
						],
						"content": "",
						"mappings": [
							{
								"path": "response.username",
								"var": "userInfo"
							},
							{
								"path": "response",
								"var": "res"
							}
						],
						"bodyType": "formData",
						"selectedAction": "Make a GET Request",
						"selectedIntegration": "Custom API",
						"ports": [
							{
								"type": "",
								"target": "5ff767dce7b840f3a1b8defa",
								"id": "60204675f2915457a5b09e53"
							},
							{
								"type": "fail",
								"target": "6020689ee8d06e389ce19512",
								"id": "60204675f2915457a5b09e54"
							}
						]
					}
				},
				"60204893f2915457a5b09ff9": {
					"nodeID": "60204893f2915457a5b09ff9",
					"type": "block",
					"coords": [
						1632.8325030972373,
						90.39066470407803
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"5ff767dce7b840f3a1b8defa"
						]
					}
				},
				"602048acf2915457a5b0a035": {
					"nodeID": "602048acf2915457a5b0a035",
					"type": "block",
					"coords": [
						1627.025541101004,
						362.04729541137
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"6020689ee8d06e389ce19512",
							"6036017e9ebf9102df39ecea",
							"6035966e5905e75a8e16624d"
						]
					}
				},
				"6020689ee8d06e389ce19512": {
					"nodeID": "6020689ee8d06e389ce19512",
					"type": "speak",
					"data": {
						"randomize": false,
						"dialogs": [
							{
								"voice": "Alexa",
								"content": "There was a problem connecting to your account. ARIC will take a look to see what the issue is."
							}
						],
						"ports": [
							{
								"type": "",
								"target": "6036017e9ebf9102df39ecea",
								"id": "6020689ee8d06e389ce19515"
							}
						]
					}
				},
				"6032c9fb4e7285bfd4ca5d7e": {
					"nodeID": "6032c9fb4e7285bfd4ca5d7e",
					"type": "flow",
					"data": {
						"diagramID": "604fb4537dbea8004948e248",
						"variableMap": null,
						"ports": [
							{
								"type": "",
								"target": "60121f1c25343e75f7bedc34",
								"id": "6032c9fb4e7285bfd4ca5d80"
							}
						]
					}
				},
				"6032c9fb4e7285bfd4ca5d81": {
					"nodeID": "6032c9fb4e7285bfd4ca5d81",
					"type": "block",
					"coords": [
						268.5656556929373,
						125.15405963161749
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"6032c9fb4e7285bfd4ca5d7e"
						]
					}
				},
				"6035966e5905e75a8e16624d": {
					"nodeID": "6035966e5905e75a8e16624d",
					"type": "exit",
					"data": {
						"ports": []
					}
				},
				"603600d29ebf9102df39ec3b": {
					"nodeID": "603600d29ebf9102df39ec3b",
					"type": "code",
					"data": {
						"code": "if(!lastInteraction){\n  lastInteraction = \"the phone\"\n}",
						"ports": [
							{
								"type": "",
								"target": "603601079ebf9102df39ec45",
								"id": "603600d29ebf9102df39ec3e"
							},
							{
								"type": "fail",
								"target": "603601079ebf9102df39ec45",
								"id": "603600d29ebf9102df39ec3f"
							}
						]
					}
				},
				"603601079ebf9102df39ec45": {
					"nodeID": "603601079ebf9102df39ec45",
					"type": "if",
					"data": {
						"expressions": [
							{
								"type": "not",
								"value": {
									"type": "variable",
									"value": "cognitoId",
									"depth": 1
								},
								"depth": 0
							}
						],
						"ports": [
							{
								"type": "",
								"target": "603601299ebf9102df39ec4e",
								"id": "603601079ebf9102df39ec48"
							},
							{
								"type": "",
								"target": "603601569ebf9102df39ec5f",
								"id": "603601079ebf9102df39ec49"
							}
						]
					}
				},
				"603601299ebf9102df39ec4e": {
					"nodeID": "603601299ebf9102df39ec4e",
					"type": "if",
					"data": {
						"expressions": [
							{
								"type": "not",
								"value": {
									"type": "variable",
									"value": "checkinId",
									"depth": 1
								},
								"depth": 0
							}
						],
						"ports": [
							{
								"type": "",
								"target": null,
								"id": "603601299ebf9102df39ec50"
							},
							{
								"type": "",
								"target": "603601569ebf9102df39ec5f",
								"id": "603601299ebf9102df39ec51"
							}
						]
					}
				},
				"603601299ebf9102df39ec52": {
					"nodeID": "603601299ebf9102df39ec52",
					"type": "block",
					"coords": [
						2372.1051845017755,
						538.9535696518825
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"603601299ebf9102df39ec4e"
						]
					}
				},
				"603601569ebf9102df39ec5f": {
					"nodeID": "603601569ebf9102df39ec5f",
					"type": "speak",
					"data": {
						"randomize": false,
						"dialogs": [
							{
								"voice": "Alexa",
								"content": "There was a problem connecting to your account. ARIC will take a look to see what the issue is."
							}
						],
						"ports": [
							{
								"type": "",
								"target": "6036017c9ebf9102df39ece0",
								"id": "603601569ebf9102df39ec61"
							}
						]
					}
				},
				"603601569ebf9102df39ec62": {
					"nodeID": "603601569ebf9102df39ec62",
					"type": "block",
					"coords": [
						2889.152772042748,
						411.6209548097028
					],
					"data": {
						"name": "Block",
						"color": "standard",
						"steps": [
							"603601569ebf9102df39ec5f",
							"6036017c9ebf9102df39ece0",
							"6036018b9ebf9102df39ecf9"
						]
					}
				},
				"6036017c9ebf9102df39ece0": {
					"nodeID": "6036017c9ebf9102df39ece0",
					"type": "directive",
					"data": {
						"directive": "{\n  \"query\": \"INSERT INTO \\\"contactalerts\\\" (\\\"checkinid\\\",\\\"type\\\") VALUES ('1','Issue linking user with database..')\",\n  \"params\": []\n}",
						"ports": [
							{
								"type": "",
								"target": "6036018b9ebf9102df39ecf9",
								"id": "6036017c9ebf9102df39ece1"
							}
						]
					}
				},
				"6036017e9ebf9102df39ecea": {
					"nodeID": "6036017e9ebf9102df39ecea",
					"type": "directive",
					"data": {
						"directive": "{\n  \"query\": \"INSERT INTO \\\"contactalerts\\\" (\\\"checkinid\\\",\\\"type\\\") VALUES ('1','Problem with UserPool API Request.')\",\n  \"params\": []\n}",
						"ports": [
							{
								"type": "",
								"target": "6035966e5905e75a8e16624d",
								"id": "6036017e9ebf9102df39eceb"
							}
						]
					}
				},
				"6036018b9ebf9102df39ecf9": {
					"nodeID": "6036018b9ebf9102df39ecf9",
					"type": "exit",
					"data": {
						"ports": []
					}
				}
			},
			"versionID": "604fb4535e10aa001b8f200e",
			"creatorID": 55093,
			"name": "Setup Flow",
			"modified": 1615836243
		}
	},
	"programs": {
		"604fb4537dbea8004948e252": {
			"variables": [],
			"startId": "5fe9fd1355a6159ee6d996cb",
			"commands": [],
			"id": "604fb4537dbea8004948e252",
			"skill_id": "604fb4535e10aa001b8f200e",
			"lines": {
				"5ff3f2a6da27927c0bb3818f": {
					"success_id": "5ff3f2a6da27927c0bb3818c",
					"id": "5ff3f2a6da27927c0bb3818f",
					"code": "questionSeries = questionnaire['mentalhealth']\nmFlag = true",
					"type": "code",
					"fail_id": null
				},
				"5fe9fd1355a6159ee6d996cb": {
					"type": "start",
					"nextId": "5ff3f2a6da27927c0bb3818f",
					"id": "5fe9fd1355a6159ee6d996cb"
				},
				"5ff3f2a6da27927c0bb38188": {
					"success_id": null,
					"id": "5ff3f2a6da27927c0bb38188",
					"code": "questionSeries.modified = true\nquestionnaire['mentalhealth'] = questionSeries\nquestionSeries = JSON.stringify(questionSeries)\nmFlag = false",
					"type": "code",
					"fail_id": null
				},
				"5ff3f2a6da27927c0bb3818c": {
					"diagram_id": "604fb4537dbea8004948e256",
					"nextId": "5ff3f2a6da27927c0bb38188",
					"id": "5ff3f2a6da27927c0bb3818c",
					"type": "flow"
				}
			}
		},
		"604fb4537dbea8004948e253": {
			"variables": [],
			"startId": "5fe9f23b55a6159ee6d9913d",
			"commands": [],
			"id": "604fb4537dbea8004948e253",
			"skill_id": "604fb4535e10aa001b8f200e",
			"lines": {
				"5ff8e558a13f5c2464ab8345": {
					"nextId": "6032cffbd8b4f6a1a62b5d4a",
					"speak": "Got it. Thank you for speaking with me! If you would like to talk again, say, \"Alexa, open ARIC Study\"",
					"id": "5ff8e558a13f5c2464ab8345",
					"type": "speak"
				},
				"5fe9f24355a6159ee6d99141": {
					"type": "exit",
					"end": true,
					"id": "5fe9f24355a6159ee6d99141"
				},
				"5fe9f23b55a6159ee6d9913d": {
					"type": "start",
					"nextId": "5ff8e558a13f5c2464ab8345",
					"id": "5fe9f23b55a6159ee6d9913d"
				},
				"6032cffbd8b4f6a1a62b5d4a": {
					"nextId": "5fe9f24355a6159ee6d99141",
					"id": "6032cffbd8b4f6a1a62b5d4a",
					"type": "directive",
					"directive": "{\n  \"query\": \"INSERT INTO \\\"contactalerts\\\" (\\\"checkinid\\\",\\\"type\\\") VALUES ($1,'Issue with diagnosis.')\",\n  \"params\": [\"_checkinId\"]\n}"
				}
			}
		},
		"604fb4537dbea8004948e249": {
			"variables": [],
			"startId": "5ff495c66ea4a64968b81780",
			"commands": [],
			"id": "604fb4537dbea8004948e249",
			"skill_id": "604fb4535e10aa001b8f200e",
			"lines": {
				"5ff762bbe7b840f3a1b8da1e": {
					"nextIds": [
						"60061c428f373903dcbd61f5"
					],
					"id": "5ff762bbe7b840f3a1b8da1e",
					"noMatches": [
						"{reproa} ",
						"{reprob} ",
						"{reproc} "
					],
					"type": "interaction",
					"randomize": false,
					"interactions": [
						{
							"intent": "number_intent",
							"mappings": [
								{
									"variable": "numbertype",
									"slot": "numbertype"
								}
							]
						}
					]
				},
				"5ff495c66ea4a64968b81780": {
					"type": "start",
					"nextId": "5ff762bbe7b840f3a1b8da1e",
					"id": "5ff495c66ea4a64968b81780"
				},
				"60061c428f373903dcbd61f5": {
					"success_id": "5ff76359e7b840f3a1b8da3f",
					"id": "60061c428f373903dcbd61f5",
					"code": "switch (numbertype) {\n  case \"one\":\n    numbertype = 1;\n    break;\n  case \"two\":\n    numbertype = 2;\n    break;\n  case \"three\":\n    numbertype = 3;\n    break;\n  case \"four\":\n    numbertype = 4;\n    break;\n  case \"five\":\n    numbertype = 5;\n    break;\n  case \"six\":\n    numbertype = 6;\n    break;\n  case  \"seven\":\n    numbertype = 7;\n    break;\n  case  \"eight\":\n    numbertype = 8;\n    break;\n  case  \"nine\":\n    numbertype = 9;\n    break;\n  case  \"ten\":\n    numbertype = 10;\n}",
					"type": "code",
					"fail_id": null
				},
				"5ff76359e7b840f3a1b8da3f": {
					"nextId": null,
					"id": "5ff76359e7b840f3a1b8da3f",
					"type": "set",
					"sets": [
						{
							"variable": "res",
							"expression": "v['numbertype']"
						}
					]
				}
			}
		},
		"604fb4537dbea8004948e256": {
			"variables": [],
			"startId": "5ff3c3ca073bf193e32d6bf7",
			"commands": [],
			"id": "604fb4537dbea8004948e256",
			"skill_id": "604fb4535e10aa001b8f200e",
			"lines": {
				"5ff3c3e2073bf193e32d6c50": {
					"success_id": "5ff3c3e2073bf193e32d6c30",
					"id": "5ff3c3e2073bf193e32d6c50",
					"code": "//Evaluates question conditions to find the next possible question\nvar flag = true\nwhile(flag){\n  if(!questionSeries[qIndex].condition){\n    flag = false\n  }\n  else{\n    if(eval(questionSeries[qIndex].condition.replace(/\\[/g, \"questionSeries[\").replace(/\\]/g, \"].value\"))){\n      flag = false\n    }\n    else{\n      //throws error when qIndex is out of bounds\n      qIndex = qIndex + 1\n    }\n  }\n}\nqType = questionSeries[qIndex].responseType\nqText = questionSeries[qIndex].text\nreproa = questionSeries[qIndex].reproOne\nreprob = questionSeries[qIndex].reproTwo\nreproc = questionSeries[qIndex].reproThree\n\n// if(mFlag){\n//   qText = \"<voice name='Matthew'>-</voice>\".replace(\"-\", qText)\n//   reproa = \"<voice name='Matthew'>-</voice>\".replace(\"-\", reproa)\n//   reprob = \"<voice name='Matthew'>-</voice>\".replace(\"-\", reproa)\n//   reproc = \"<voice name='Matthew'>-</voice>\".replace(\"-\", reproa)\n// }",
					"type": "code",
					"fail_id": null
				},
				"5ff3c3e2073bf193e32d6c1a": {
					"success_id": null,
					"id": "5ff3c3e2073bf193e32d6c1a",
					"code": "questionSeries.modified = true",
					"type": "code",
					"fail_id": null
				},
				"5ff3c3e2073bf193e32d6c3b": {
					"variable": "res",
					"nextId": "5ff3c3e2073bf193e32d6c25",
					"id": "5ff3c3e2073bf193e32d6c3b",
					"type": "capture"
				},
				"5ff495a86ea4a64968b81775": {
					"diagram_id": "604fb4537dbea8004948e249",
					"nextId": "5ff3c3e2073bf193e32d6c25",
					"id": "5ff495a86ea4a64968b81775",
					"type": "flow"
				},
				"5ff3c3e2073bf193e32d6c5c": {
					"nextId": "5ff3c3e2073bf193e32d6c25",
					"id": "5ff3c3e2073bf193e32d6c5c",
					"type": "set",
					"sets": [
						{
							"variable": "res",
							"expression": 1
						}
					]
				},
				"5ff3c3e2073bf193e32d6c1e": {
					"nextIds": [
						"5ff3c3e2073bf193e32d6c22"
					],
					"id": "5ff3c3e2073bf193e32d6c1e",
					"noMatches": [
						"{reproa} ",
						"{reprob} ",
						"{reproc} "
					],
					"type": "interaction",
					"randomize": false,
					"interactions": [
						{
							"intent": "vaccine_type_intent",
							"mappings": [
								{
									"variable": "vaccinetype",
									"slot": "vaccinetype"
								}
							]
						}
					]
				},
				"5ff73a03b187aa94d2180e3f": {
					"nextIds": [
						"5ff73a03b187aa94d2180e3c"
					],
					"id": "5ff73a03b187aa94d2180e3f",
					"noMatches": [
						"{reproa} ",
						"{reprob} ",
						"{reproc} "
					],
					"type": "interaction",
					"randomize": false,
					"interactions": [
						{
							"intent": "weekday_intent",
							"mappings": [
								{
									"variable": "weekday",
									"slot": "weekday"
								}
							]
						}
					]
				},
				"5ff3c3e2073bf193e32d6c29": {
					"nextId": "5ff3c3e2073bf193e32d6c2c",
					"id": "5ff3c3e2073bf193e32d6c29",
					"type": "set",
					"sets": [
						{
							"variable": "qIndex",
							"expression": "(v['qIndex'] + 1)"
						}
					]
				},
				"5ff499b4cce5f010d0161160": {
					"nextId": "5ff3c3e2073bf193e32d6c4c",
					"id": "5ff499b4cce5f010d0161160",
					"type": "set",
					"sets": [
						{
							"variable": "qIndex",
							"expression": 1
						}
					]
				},
				"5ff3c3e2073bf193e32d6c22": {
					"nextId": "5ff3c3e2073bf193e32d6c25",
					"id": "5ff3c3e2073bf193e32d6c22",
					"type": "set",
					"sets": [
						{
							"variable": "res",
							"expression": "v['vaccinetype']"
						}
					]
				},
				"6035bb6df411c8394dab6229": {
					"nextId": "5ff3c3e2073bf193e32d6c25",
					"id": "6035bb6df411c8394dab6229",
					"type": "set",
					"sets": [
						{
							"variable": "res",
							"expression": "'Open'"
						}
					]
				},
				"5ff3c3e2073bf193e32d6c25": {
					"success_id": "5ff3c3e2073bf193e32d6c29",
					"id": "5ff3c3e2073bf193e32d6c25",
					"code": "questionSeries[qIndex].value = res",
					"type": "code",
					"fail_id": "5ff3c3e2073bf193e32d6c29"
				},
				"5ff6900786928d1d605b1c40": {
					"nextId": "5ff3c3e2073bf193e32d6c25",
					"id": "5ff6900786928d1d605b1c40",
					"type": "set",
					"sets": [
						{
							"variable": "res",
							"expression": "v['date']"
						}
					]
				},
				"5ff68dab86928d1d605b1c33": {
					"nextIds": [
						"5ff6900786928d1d605b1c40"
					],
					"id": "5ff68dab86928d1d605b1c33",
					"noMatches": [
						"{reproa} ",
						"{reprob} ",
						"{reproc} "
					],
					"type": "interaction",
					"randomize": false,
					"interactions": [
						{
							"intent": "date_intent",
							"mappings": [
								{
									"variable": "date",
									"slot": "date"
								}
							]
						}
					]
				},
				"5ff73a03b187aa94d2180e3c": {
					"nextId": "5ff3c3e2073bf193e32d6c25",
					"id": "5ff73a03b187aa94d2180e3c",
					"type": "set",
					"sets": [
						{
							"variable": "res",
							"expression": "v['weekday']"
						}
					]
				},
				"6005d3722988cdc35ce7c09f": {
					"nextId": "5ff3c3e2073bf193e32d6c25",
					"id": "6005d3722988cdc35ce7c09f",
					"type": "set",
					"sets": [
						{
							"variable": "res",
							"expression": "v['numbertype']"
						}
					]
				},
				"5ff3c3ca073bf193e32d6bf7": {
					"type": "start",
					"nextId": "5ff499b4cce5f010d0161160",
					"id": "5ff3c3ca073bf193e32d6bf7"
				},
				"5ff3c3e2073bf193e32d6c4c": {
					"success_id": "5ff3c3e2073bf193e32d6c50",
					"id": "5ff3c3e2073bf193e32d6c4c",
					"code": "qlen = Object.keys(questionSeries).length + 1;",
					"type": "code",
					"fail_id": null
				},
				"5ff73b05b187aa94d2180e55": {
					"nextId": "5ff3c3e2073bf193e32d6c25",
					"id": "5ff73b05b187aa94d2180e55",
					"type": "set",
					"sets": [
						{
							"variable": "res",
							"expression": -1
						}
					]
				},
				"5ff3c3e2073bf193e32d6c2c": {
					"nextIds": [
						"5ff3c3e2073bf193e32d6c50"
					],
					"id": "5ff3c3e2073bf193e32d6c2c",
					"type": "if",
					"elseId": "5ff3c3e2073bf193e32d6c1a",
					"expressions": [
						"(v['qIndex'] < v['qlen'])"
					]
				},
				"5ff690a286928d1d605b1c57": {
					"nextIds": [
						"5ff690a286928d1d605b1c54",
						"5ff73b05b187aa94d2180e55",
						"6005d3722988cdc35ce7c09f"
					],
					"id": "5ff690a286928d1d605b1c57",
					"noMatches": [
						"{reproa} ",
						"{reprob} ",
						"{reproc} "
					],
					"type": "interaction",
					"randomize": false,
					"interactions": [
						{
							"intent": "time_intent",
							"mappings": [
								{
									"variable": "time",
									"slot": "time"
								}
							]
						},
						{
							"intent": "any_time_intent",
							"mappings": []
						},
						{
							"intent": "number_intent",
							"mappings": [
								{
									"variable": "numbertype",
									"slot": "numbertype"
								}
							]
						}
					]
				},
				"5ff4e0ec0b705cf6befcf240": {
					"diagram_id": "604fb4537dbea8004948e259",
					"nextId": "5ff3c3e2073bf193e32d6c25",
					"id": "5ff4e0ec0b705cf6befcf240",
					"type": "flow"
				},
				"5ff3c3e2073bf193e32d6c33": {
					"nextIds": [
						"5ff3c3e2073bf193e32d6c54",
						"5ff495a86ea4a64968b81775",
						"5ff4e0ec0b705cf6befcf240",
						"6035bb6df411c8394dab6229",
						"5ff73a03b187aa94d2180e3f",
						"5ff3c3e2073bf193e32d6c1e",
						"5ff68dab86928d1d605b1c33",
						"5ff690a286928d1d605b1c57"
					],
					"id": "5ff3c3e2073bf193e32d6c33",
					"type": "if",
					"elseId": "5ff3c3e2073bf193e32d6c29",
					"expressions": [
						"(v['qType'] == 'Binary')",
						"(v['qType'] == 'Numeric')",
						"(v['qType'] == 'Triage')",
						"(v['qType'] == 'Open')",
						"(v['qType'] == 'Weekday')",
						"(v['qType'] == 'VaccineType')",
						"(v['qType'] == 'Date')",
						"(v['qType'] == 'Time')"
					]
				},
				"5ff690a286928d1d605b1c54": {
					"nextId": "5ff3c3e2073bf193e32d6c25",
					"id": "5ff690a286928d1d605b1c54",
					"type": "set",
					"sets": [
						{
							"variable": "res",
							"expression": "v['time']"
						}
					]
				},
				"5ff3c3e2073bf193e32d6c54": {
					"nextIds": [
						"5ff3c3e2073bf193e32d6c5c",
						"5ff3c3e2073bf193e32d6c59"
					],
					"id": "5ff3c3e2073bf193e32d6c54",
					"noMatches": [
						"{reproa} ",
						"{reprob} ",
						"{reproc} "
					],
					"type": "interaction",
					"randomize": false,
					"interactions": [
						{
							"intent": "AMAZON.YesIntent",
							"mappings": []
						},
						{
							"intent": "AMAZON.NoIntent",
							"mappings": []
						}
					]
				},
				"5ff3c3e2073bf193e32d6c30": {
					"nextId": "5ff3c3e2073bf193e32d6c33",
					"speak": "{qText} ",
					"id": "5ff3c3e2073bf193e32d6c30",
					"type": "speak"
				},
				"5ff3c3e2073bf193e32d6c59": {
					"nextId": "5ff3c3e2073bf193e32d6c25",
					"id": "5ff3c3e2073bf193e32d6c59",
					"type": "set",
					"sets": [
						{
							"variable": "res",
							"expression": 0
						}
					]
				}
			}
		},
		"604fb4537dbea8004948e24c": {
			"variables": [],
			"startId": "5fe9f7d055a6159ee6d99552",
			"commands": [],
			"id": "604fb4537dbea8004948e24c",
			"skill_id": "604fb4535e10aa001b8f200e",
			"lines": {
				"604999cab22cd43ae29d14ae": {
					"success_id": "5ff5cab3be758f364404dcb0",
					"id": "604999cab22cd43ae29d14ae",
					"type": "reminder",
					"reminder": {
						"date": null,
						"recurrence": {
							"freq": "DAILY"
						},
						"text": "Hey! It's time for your check-in with the ARIC Study. To talk to us, please approach your Alexa and say, 'Alexa, open ARIC Study'",
						"time": {
							"h": "{resB}",
							"m": "{resC}",
							"s": "0"
						},
						"type": "SCHEDULED_ABSOLUTE",
						"timezone": "User Timezone"
					},
					"fail_id": "604999cab22cd43ae29d14b2"
				},
				"6035bd3ef411c8394dab6470": {
					"nextIds": [
						"6029b164df1a1c3ef52a2dc7"
					],
					"id": "6035bd3ef411c8394dab6470",
					"type": "if",
					"elseId": "6029b4d8df1a1c3ef52a2fbb",
					"expressions": [
						"(!v['flag'])"
					]
				},
				"604999cab22cd43ae29d14aa": {
					"success_id": "604999cab22cd43ae29d14ae",
					"id": "604999cab22cd43ae29d14aa",
					"code": "resC = res.split(\":\")[1];\nresB = res.split(\":\")[0];",
					"type": "code",
					"fail_id": "604999cab22cd43ae29d14b2"
				},
				"6029b00bdf1a1c3ef52a2da6": {
					"success_id": "6035bd3ef411c8394dab6470",
					"id": "6029b00bdf1a1c3ef52a2da6",
					"code": "flag = !questionSeries[1].value;\nif(questionSeries[2].value == -1){\n  questionSeries[2].value = \"11:00\";\n}\nres = questionSeries[2].value;\nmFlag = questionSeries[4].value;",
					"type": "code",
					"fail_id": "6035bd3ef411c8394dab6470"
				},
				"604999cab22cd43ae29d14b5": {
					"type": "exit",
					"end": true,
					"id": "604999cab22cd43ae29d14b5"
				},
				"6029b164df1a1c3ef52a2dc7": {
					"nextId": "604999cab22cd43ae29d14a1",
					"id": "6029b164df1a1c3ef52a2dc7",
					"type": "directive",
					"directive": "{\n  \"query\": \"UPDATE \\\"users\\\" SET (\\\"dailystatus\\\", \\\"datestart\\\", \\\"streak\\\", \\\"dcheckintime\\\") = ('t', NOW(), '0', $2) WHERE \\\"userid\\\" = $1\",\n  \"params\": [\"_cognitoId\", \"_res\"]\n}"
				},
				"6029b4d8df1a1c3ef52a2fbb": {
					"nextId": "5ff5cab3be758f364404dcb0",
					"id": "6029b4d8df1a1c3ef52a2fbb",
					"type": "directive",
					"directive": "{\n  \"query\": \"INSERT INTO \\\"contactalerts\\\" (\\\"checkinid\\\",\\\"type\\\") VALUES ($1,'Refused daily checkin.')\",\n  \"params\": [\"_checkinId\"]\n}"
				},
				"5ff5cab3be758f364404dcb8": {
					"diagram_id": "604fb4537dbea8004948e256",
					"nextId": "6029b00bdf1a1c3ef52a2da6",
					"id": "5ff5cab3be758f364404dcb8",
					"type": "flow"
				},
				"5fe9f7d055a6159ee6d99552": {
					"type": "start",
					"nextId": "5ff5cab3be758f364404dcb4",
					"id": "5fe9f7d055a6159ee6d99552"
				},
				"5ff5cab3be758f364404dcb4": {
					"success_id": "5ff5cab3be758f364404dcb8",
					"id": "5ff5cab3be758f364404dcb4",
					"code": "questionSeries = questionnaire['dailyReminder']",
					"type": "code",
					"fail_id": null
				},
				"604999cab22cd43ae29d14b2": {
					"nextId": "604999cab22cd43ae29d14b5",
					"speak": "There was a problem creating the reminder.",
					"id": "604999cab22cd43ae29d14b2",
					"type": "speak"
				},
				"604999cab22cd43ae29d14a1": {
					"nextIds": [
						"604999cab22cd43ae29d14aa"
					],
					"id": "604999cab22cd43ae29d14a1",
					"type": "if",
					"expressions": [
						"(!v['mFlag'])"
					]
				},
				"5ff5cab3be758f364404dcb0": {
					"success_id": null,
					"id": "5ff5cab3be758f364404dcb0",
					"code": "questionSeries.modified = false\nquestionnaire['dailyReminder'] = questionSeries\nquestionSeries = JSON.stringify(questionSeries)",
					"type": "code",
					"fail_id": null
				}
			}
		},
		"604fb4537dbea8004948e259": {
			"variables": [],
			"startId": "5ff4e0f30b705cf6befcf24a",
			"commands": [],
			"id": "604fb4537dbea8004948e259",
			"skill_id": "604fb4535e10aa001b8f200e",
			"lines": {
				"5ff4e0f70b705cf6befcf251": {
					"nextIds": [
						"5ff4e0fd0b705cf6befcf25e",
						"5ff4e0ff0b705cf6befcf268",
						"5ff4e1040b705cf6befcf272",
						"6005cfab2988cdc35ce7bdf8"
					],
					"id": "5ff4e0f70b705cf6befcf251",
					"noMatches": [
						"{reproa} ",
						"{reprob} ",
						"{reproc} "
					],
					"type": "interaction",
					"randomize": false,
					"interactions": [
						{
							"intent": "better_intent",
							"mappings": []
						},
						{
							"intent": "worse_intent",
							"mappings": []
						},
						{
							"intent": "same_intent",
							"mappings": []
						},
						{
							"intent": "unsure_intent",
							"mappings": []
						}
					]
				},
				"5ff4e1040b705cf6befcf272": {
					"nextId": null,
					"id": "5ff4e1040b705cf6befcf272",
					"type": "set",
					"sets": [
						{
							"variable": "res",
							"expression": 0
						}
					]
				},
				"6005cfab2988cdc35ce7bdf8": {
					"nextId": null,
					"id": "6005cfab2988cdc35ce7bdf8",
					"type": "set",
					"sets": [
						{
							"variable": "res",
							"expression": 2
						}
					]
				},
				"5ff4e0f30b705cf6befcf24a": {
					"type": "start",
					"nextId": "5ff4e0f70b705cf6befcf251",
					"id": "5ff4e0f30b705cf6befcf24a"
				},
				"5ff4e0fd0b705cf6befcf25e": {
					"nextId": null,
					"id": "5ff4e0fd0b705cf6befcf25e",
					"type": "set",
					"sets": [
						{
							"variable": "res",
							"expression": 1
						}
					]
				},
				"5ff4e0ff0b705cf6befcf268": {
					"nextId": null,
					"id": "5ff4e0ff0b705cf6befcf268",
					"type": "set",
					"sets": [
						{
							"variable": "res",
							"expression": -1
						}
					]
				}
			}
		},
		"604fb4537dbea8004948e255": {
			"variables": [],
			"startId": "5fe9fdb855a6159ee6d997ab",
			"commands": [],
			"id": "604fb4537dbea8004948e255",
			"skill_id": "604fb4535e10aa001b8f200e",
			"lines": {
				"5fe9fdb855a6159ee6d997ab": {
					"type": "start",
					"nextId": "5ff3f2ddda27927c0bb381d0",
					"id": "5fe9fdb855a6159ee6d997ab"
				},
				"5ff3f2ddda27927c0bb381cd": {
					"diagram_id": "604fb4537dbea8004948e256",
					"nextId": "5ff3f2ddda27927c0bb381c9",
					"id": "5ff3f2ddda27927c0bb381cd",
					"type": "flow"
				},
				"5ff3f2ddda27927c0bb381d0": {
					"success_id": "5ff3f2ddda27927c0bb381cd",
					"id": "5ff3f2ddda27927c0bb381d0",
					"code": "questionSeries = questionnaire['feedback']",
					"type": "code",
					"fail_id": null
				},
				"5ff3f2ddda27927c0bb381c9": {
					"success_id": null,
					"id": "5ff3f2ddda27927c0bb381c9",
					"code": "questionSeries.modified = true\nquestionnaire['feedback'] = questionSeries\nquestionSeries = JSON.stringify(questionSeries)",
					"type": "code",
					"fail_id": null
				}
			}
		},
		"604fb4537dbea8004948e24f": {
			"variables": [],
			"startId": "5fe9f7a755a6159ee6d994ab",
			"commands": [],
			"id": "604fb4537dbea8004948e24f",
			"skill_id": "604fb4535e10aa001b8f200e",
			"lines": {
				"5ff3f128073bf193e32d93cf": {
					"success_id": "5ff3f128073bf193e32d93cc",
					"id": "5ff3f128073bf193e32d93cf",
					"code": "questionSeries = questionnaire['diagnosis']",
					"type": "code",
					"fail_id": null
				},
				"5ff3f128073bf193e32d93cc": {
					"diagram_id": "604fb4537dbea8004948e256",
					"nextId": "5ff3f128073bf193e32d93c8",
					"id": "5ff3f128073bf193e32d93cc",
					"type": "flow"
				},
				"5ff3f128073bf193e32d93c8": {
					"success_id": null,
					"id": "5ff3f128073bf193e32d93c8",
					"code": "questionSeries.modified = true\nquestionnaire['diagnosis'] = questionSeries\nquestionSeries = JSON.stringify(questionSeries)",
					"type": "code",
					"fail_id": null
				},
				"5fe9f7a755a6159ee6d994ab": {
					"type": "start",
					"nextId": "5ff3f128073bf193e32d93cf",
					"id": "5fe9f7a755a6159ee6d994ab"
				}
			}
		},
		"604fb4537dbea8004948e258": {
			"variables": [],
			"startId": "60361a2ed2edd91b9d90c21b",
			"commands": [],
			"id": "604fb4537dbea8004948e258",
			"skill_id": "604fb4535e10aa001b8f200e",
			"lines": {
				"60361a2ed2edd91b9d90c21b": {
					"type": "start",
					"nextId": "60361b17d2edd91b9d90c2e0",
					"id": "60361a2ed2edd91b9d90c21b"
				},
				"60361b17d2edd91b9d90c2e0": {
					"nextId": "60361b17d2edd91b9d90c2e3",
					"id": "60361b17d2edd91b9d90c2e0",
					"type": "directive",
					"directive": "{\n  \"query\": [\"SELECT \\\"dailystatus\\\" FROM \\\"users\\\" WHERE \\\"userid\\\" = $1;\"],\n  \"params\": [\"_cognitoId\"],\n  \"to\": \"flag\"\n}"
				},
				"60361b17d2edd91b9d90c2e3": {
					"nextIds": [
						null
					],
					"id": "60361b17d2edd91b9d90c2e3",
					"type": "if",
					"expressions": [
						"(!v['flag'])"
					]
				}
			}
		},
		"604fb4537dbea8004948e247": {
			"variables": [],
			"startId": "5f9f562f11b31520c2a2a6e7",
			"commands": [],
			"id": "604fb4537dbea8004948e247",
			"skill_id": "604fb4535e10aa001b8f200e",
			"lines": {
				"5f9f562f11b31520c2a2a6ea": {
					"type": "exit",
					"end": true,
					"id": "5f9f562f11b31520c2a2a6ea"
				},
				"5f9f562f11b31520c2a2a6e8": {
					"nextId": "5f9f562f11b31520c2a2a6ea",
					"speak": "Okay, thank you for speaking with me! Remember to follow CDC guidelines for COVID-19 by avoiding crowds, wearing a mask, and standing at least six feet away from others. Stay safe and talk to you later!",
					"id": "5f9f562f11b31520c2a2a6e8",
					"type": "speak"
				},
				"5f9f562f11b31520c2a2a6e7": {
					"type": "start",
					"nextId": "5ff7779ae7b840f3a1b8fbcc",
					"id": "5f9f562f11b31520c2a2a6e7"
				},
				"5ff7779ae7b840f3a1b8fbcc": {
					"success_id": "5f9f562f11b31520c2a2a6e8",
					"id": "5ff7779ae7b840f3a1b8fbcc",
					"code": "mFlag = false",
					"type": "code",
					"fail_id": "5f9f562f11b31520c2a2a6e8"
				}
			}
		},
		"604fb4537dbea8004948e25b": {
			"variables": [],
			"startId": "5fe9f5b855a6159ee6d9934f",
			"commands": [],
			"id": "604fb4537dbea8004948e25b",
			"skill_id": "604fb4535e10aa001b8f200e",
			"lines": {
				"5fe9f5b855a6159ee6d9934f": {
					"type": "start",
					"nextId": "5ff3c65b073bf193e32d6e82",
					"id": "5fe9f5b855a6159ee6d9934f"
				},
				"5ff3c65b073bf193e32d6e82": {
					"success_id": "5ff3c69d073bf193e32d6fd8",
					"id": "5ff3c65b073bf193e32d6e82",
					"code": "questionSeries = questionnaire['symptoms']",
					"type": "code",
					"fail_id": null
				},
				"5ff3c6bb073bf193e32d6fe3": {
					"success_id": null,
					"id": "5ff3c6bb073bf193e32d6fe3",
					"code": "questionSeries.modified = true\nquestionnaire['symptoms'] = questionSeries\nquestionSeries = JSON.stringify(questionSeries)",
					"type": "code",
					"fail_id": null
				},
				"5ff3c69d073bf193e32d6fd8": {
					"diagram_id": "604fb4537dbea8004948e256",
					"nextId": "5ff3c6bb073bf193e32d6fe3",
					"id": "5ff3c69d073bf193e32d6fd8",
					"type": "flow"
				}
			}
		},
		"604fb4537dbea8004948e24d": {
			"variables": [],
			"startId": "5fe9f2b055a6159ee6d991a6",
			"commands": [],
			"id": "604fb4537dbea8004948e24d",
			"skill_id": "604fb4535e10aa001b8f200e",
			"lines": {
				"5ff8e592a13f5c2464ab84c2": {
					"nextId": "5fe9f2b855a6159ee6d991aa",
					"speak": "That's okay. If you would like to speak to me again, say, \"Alexa, open ARIC Study.\"",
					"id": "5ff8e592a13f5c2464ab84c2",
					"type": "speak"
				},
				"5fe9f2b055a6159ee6d991a6": {
					"type": "start",
					"nextId": "5ff8e592a13f5c2464ab84c2",
					"id": "5fe9f2b055a6159ee6d991a6"
				},
				"5fe9f2b855a6159ee6d991aa": {
					"type": "exit",
					"end": true,
					"id": "5fe9f2b855a6159ee6d991aa"
				}
			}
		},
		"604fb4537dbea8004948e248": {
			"variables": [],
			"startId": "5fe9ed1055a6159ee6d98f98",
			"commands": [],
			"id": "604fb4537dbea8004948e248",
			"skill_id": "604fb4535e10aa001b8f200e",
			"lines": {
				"60159159ef0b3a1fd9567012": {
					"nextId": null,
					"id": "60159159ef0b3a1fd9567012",
					"type": "directive",
					"directive": "{\n  \"query\": \"UPDATE \\\"permission\\\" SET skillper='f', reminders='t' WHERE userid=$1\",\n  \"params\": [\"_cognitoId\"]\n}"
				},
				"60147a03f06770d15ed87ee4": {
					"success_id": "60159159ef0b3a1fd956700c",
					"id": "60147a03f06770d15ed87ee4",
					"type": "user_info",
					"permissions": [
						{
							"map_to": null,
							"product": {},
							"selected": {
								"value": "alexa::alerts:reminders:skill:readwrite"
							}
						}
					],
					"fail_id": "6015925bef0b3a1fd9567035"
				},
				"5fe9ed1055a6159ee6d98f98": {
					"type": "start",
					"nextId": "60147996f06770d15ed87eb4",
					"id": "5fe9ed1055a6159ee6d98f98"
				},
				"60147a4bf06770d15ed881e2": {
					"nextId": null,
					"id": "60147a4bf06770d15ed881e2",
					"type": "directive",
					"directive": "{\n  \"query\": \"UPDATE \\\"permission\\\" SET skillper='t', reminders='t' WHERE userid=$1\",\n  \"params\": [\"_cognitoId\"]\n}"
				},
				"6015925bef0b3a1fd9567035": {
					"nextId": "6015925bef0b3a1fd9567038",
					"speak": "You need to enable reminders and skill personalization. I have sent a card to your alexa app to help you turn it on. ",
					"id": "6015925bef0b3a1fd9567035",
					"type": "speak"
				},
				"60147996f06770d15ed87eb4": {
					"success_id": "601479c9f06770d15ed87ebe",
					"id": "60147996f06770d15ed87eb4",
					"type": "user_info",
					"permissions": [
						{
							"map_to": {
								"value": "skillPer"
							},
							"product": {},
							"selected": {
								"value": "alexa::person_id:read"
							}
						}
					],
					"fail_id": "60147a03f06770d15ed87ee4"
				},
				"60158f47ef0b3a1fd9566d16": {
					"permission_card": [
						"alexa::alerts:reminders:skill:readwrite"
					],
					"nextId": "60158f3fef0b3a1fd9566d0c",
					"id": "60158f47ef0b3a1fd9566d16",
					"type": "permission"
				},
				"6015925bef0b3a1fd9567038": {
					"permission_card": [
						"alexa::alerts:reminders:skill:readwrite",
						"alexa::person_id:read"
					],
					"nextId": "6015925bef0b3a1fd956703b",
					"id": "6015925bef0b3a1fd9567038",
					"type": "permission"
				},
				"601479c9f06770d15ed87ebe": {
					"success_id": "60147a4bf06770d15ed881e2",
					"id": "601479c9f06770d15ed87ebe",
					"type": "user_info",
					"permissions": [
						{
							"map_to": null,
							"product": {},
							"selected": {
								"value": "alexa::alerts:reminders:skill:readwrite"
							}
						}
					],
					"fail_id": "60158f3fef0b3a1fd9566d09"
				},
				"60159159ef0b3a1fd956700c": {
					"nextId": "60159159ef0b3a1fd956700f",
					"speak": "You need to enable skill personalization. I have sent a card to your alexa app to help you turn it on. ",
					"id": "60159159ef0b3a1fd956700c",
					"type": "speak"
				},
				"60158f3fef0b3a1fd9566d0c": {
					"nextId": null,
					"id": "60158f3fef0b3a1fd9566d0c",
					"type": "directive",
					"directive": "{\n  \"query\": \"UPDATE \\\"permission\\\" SET skillper='t', reminders='f', reminderss='f' WHERE userid=$1\",\n  \"params\": [\"_cognitoId\"]\n}"
				},
				"60159159ef0b3a1fd956700f": {
					"permission_card": [
						"alexa::person_id:read"
					],
					"nextId": "60159159ef0b3a1fd9567012",
					"id": "60159159ef0b3a1fd956700f",
					"type": "permission"
				},
				"6015925bef0b3a1fd956703b": {
					"nextId": null,
					"id": "6015925bef0b3a1fd956703b",
					"type": "directive",
					"directive": "{\n  \"query\": \"UPDATE \\\"permission\\\" SET skillper='f', reminders='f', reminderss='f' WHERE userid=$1\",\n  \"params\": [\"_cognitoId\"]\n}"
				},
				"60158f3fef0b3a1fd9566d09": {
					"nextId": "60158f47ef0b3a1fd9566d16",
					"speak": "You need to enable reminders. I have sent a card to your alexa app to help you turn it on. ",
					"id": "60158f3fef0b3a1fd9566d09",
					"type": "speak"
				}
			}
		},
		"604fb4537dbea8004948e24a": {
			"variables": [],
			"startId": "5fe9f75455a6159ee6d9940f",
			"commands": [],
			"id": "604fb4537dbea8004948e24a",
			"skill_id": "604fb4535e10aa001b8f200e",
			"lines": {
				"5ff3f194073bf193e32d93f1": {
					"success_id": null,
					"id": "5ff3f194073bf193e32d93f1",
					"code": "questionSeries.modified = true\nquestionnaire['health'] = questionSeries\nquestionSeries = JSON.stringify(questionSeries)",
					"type": "code",
					"fail_id": null
				},
				"5fe9f75455a6159ee6d9940f": {
					"type": "start",
					"nextId": "5ff3f194073bf193e32d93f8",
					"id": "5fe9f75455a6159ee6d9940f"
				},
				"5ff3f194073bf193e32d93f5": {
					"diagram_id": "604fb4537dbea8004948e256",
					"nextId": "5ff3f194073bf193e32d93f1",
					"id": "5ff3f194073bf193e32d93f5",
					"type": "flow"
				},
				"5ff3f194073bf193e32d93f8": {
					"success_id": "5ff3f194073bf193e32d93f5",
					"id": "5ff3f194073bf193e32d93f8",
					"code": "questionSeries = questionnaire['health']",
					"type": "code",
					"fail_id": null
				}
			}
		},
		"604fb4537dbea8004948e257": {
			"variables": [],
			"startId": "5ff8f00ca13f5c2464ab8848",
			"commands": [],
			"id": "604fb4537dbea8004948e257",
			"skill_id": "604fb4535e10aa001b8f200e",
			"lines": {
				"604131014aa5dd22c250a5bc": {
					"type": "exit",
					"end": true,
					"id": "604131014aa5dd22c250a5bc"
				},
				"6029b726df1a1c3ef52a3180": {
					"nextId": "603607b19ebf9102df39f590",
					"id": "6029b726df1a1c3ef52a3180",
					"type": "directive",
					"directive": "{\n  \"query\": \"UPDATE \\\"users\\\" SET \\\"checkinday\\\" = $2 WHERE \\\"userid\\\" = $1\",\n  \"params\": [\"_cognitoId\", \"_resB\"]\n}"
				},
				"6029ba23df1a1c3ef52a3284": {
					"success_id": "6029b9dcdf1a1c3ef52a3278",
					"id": "6029ba23df1a1c3ef52a3284",
					"code": "res = res + \":00 PM\"",
					"type": "code",
					"fail_id": "6029b9dcdf1a1c3ef52a3278"
				},
				"6029bf08df1a1c3ef52a33c4": {
					"nextId": "602c0efd700a1b5e325f085e",
					"id": "6029bf08df1a1c3ef52a33c4",
					"type": "directive",
					"directive": "{\n  \"query\": [\"SELECT \\\"checkinday\\\" FROM \\\"users\\\" WHERE \\\"userid\\\" = $1\"],\n  \"params\": [\"_cognitoId\"],\n  \"to\": \"resB\"\n}"
				},
				"6029bf63df1a1c3ef52a33ec": {
					"success_id": "6029bf63df1a1c3ef52a33f0",
					"id": "6029bf63df1a1c3ef52a33ec",
					"code": "res = (res + 12) + \":00\"",
					"type": "code",
					"fail_id": "6029bf63df1a1c3ef52a33f0"
				},
				"6049a045d008e0b9ee8495ee": {
					"type": "exit",
					"end": true,
					"id": "6049a045d008e0b9ee8495ee"
				},
				"6029bf63df1a1c3ef52a33f9": {
					"nextId": "6029bf63df1a1c3ef52a33fc",
					"speak": "Would you like to change the time of your appointment?",
					"id": "6029bf63df1a1c3ef52a33f9",
					"type": "speak"
				},
				"604fb2a55b79f1b1ef214691": {
					"nextId": "604fb2a55b79f1b1ef214694",
					"speak": "Would you like to update your existing reminders?<break strength=\"x-strong\" />",
					"id": "604fb2a55b79f1b1ef214691",
					"type": "speak"
				},
				"5ff8f03ba13f5c2464ab8859": {
					"nextId": "5ff8f0e6a13f5c2464ab8a66",
					"speak": "Sounds good. I'll talk to you tomorrow at {res}. In the meantime, please remember to follow the CDC guidelines to protect yourself and others from COVID-19.  These include:  washing your hands often, wearing a mask, avoiding crowds, and staying at least six feet away from others who don’t live with you.  Please take good care of yourself and have a great day!",
					"id": "5ff8f03ba13f5c2464ab8859",
					"type": "speak"
				},
				"604fb2a55b79f1b1ef214694": {
					"nextIds": [
						"60499c94b22cd43ae29d1823",
						"5ff8f03ba13f5c2464ab8859"
					],
					"id": "604fb2a55b79f1b1ef214694",
					"noMatches": [
						"If you would like to be reminded before your next checkin, please say, \"yes\"",
						"Im sorry, I was looking for, \"yes\" or \"no\".",
						"Hmm, I didn't understand that. Would you like to be reminded before your weekly checkins?"
					],
					"type": "interaction",
					"randomize": false,
					"interactions": [
						{
							"intent": "AMAZON.YesIntent",
							"mappings": []
						},
						{
							"intent": "AMAZON.NoIntent",
							"mappings": []
						}
					]
				},
				"6032cd084e7285bfd4ca6326": {
					"type": "exit",
					"end": true,
					"id": "6032cd084e7285bfd4ca6326"
				},
				"6049a045d008e0b9ee8495eb": {
					"nextId": "6049a045d008e0b9ee8495ee",
					"speak": "There was a problem creating the reminder.",
					"id": "6049a045d008e0b9ee8495eb",
					"type": "speak"
				},
				"6029bf63df1a1c3ef52a33f0": {
					"nextId": "6049a045d008e0b9ee8495dc",
					"id": "6029bf63df1a1c3ef52a33f0",
					"type": "directive",
					"directive": "{\n  \"query\": \"UPDATE \\\"users\\\" SET \\\"checkintime\\\" = $2 WHERE \\\"userid\\\" = $1\",\n  \"params\": [\"_cognitoId\", \"_res\"]\n}"
				},
				"604fb2535b79f1b1ef214675": {
					"nextId": "604fb2535b79f1b1ef214678",
					"speak": "Would you like to update your existing reminders?<break strength=\"x-strong\" />",
					"id": "604fb2535b79f1b1ef214675",
					"type": "speak"
				},
				"6029bf63df1a1c3ef52a33f3": {
					"nextId": "6029bf63df1a1c3ef52a33f0",
					"id": "6029bf63df1a1c3ef52a33f3",
					"type": "set",
					"sets": [
						{
							"variable": "res",
							"expression": "'11:00'"
						}
					]
				},
				"6049a877985392d18145265b": {
					"success_id": "602c0a5e700a1b5e325f0851",
					"id": "6049a877985392d18145265b",
					"code": "resB = weekday;\nresB == \"MO\"\n  ? (resB = \"Monday\")\n  : resB == \"TU\"\n  ? (resB = \"Tuesday\")\n  : resB == \"WE\"\n  ? (resB = \"Wednesday\")\n  : resB == \"TH\"\n  ? (resB = \"Thursday\")\n  : resB == \"FR\"\n  ? (resB = \"Friday\")\n  : resB == \"SA\"\n  ? (resB = \"Saturday\")\n  : resB == \"SU\"\n  ? (resB = \"Sunday\")\n  : null;",
					"type": "code",
					"fail_id": "602c0a5e700a1b5e325f0851"
				},
				"604fb2535b79f1b1ef214678": {
					"nextIds": [
						"6049a045d008e0b9ee8495e7",
						"6049a877985392d18145265b"
					],
					"id": "604fb2535b79f1b1ef214678",
					"noMatches": [
						"If you would like to be reminded before your next checkin, please say, \"yes\"",
						"Im sorry, I was looking for, \"yes\" or \"no\".",
						"Hmm, I didn't understand that. Would you like to be reminded before your weekly checkins?"
					],
					"type": "interaction",
					"randomize": false,
					"interactions": [
						{
							"intent": "AMAZON.YesIntent",
							"mappings": []
						},
						{
							"intent": "AMAZON.NoIntent",
							"mappings": []
						}
					]
				},
				"6029bf63df1a1c3ef52a33f6": {
					"nextId": "6029bf63df1a1c3ef52a33f0",
					"id": "6029bf63df1a1c3ef52a33f6",
					"type": "set",
					"sets": [
						{
							"variable": "res",
							"expression": "v['time']"
						}
					]
				},
				"60499c94b22cd43ae29d1821": {
					"type": "exit",
					"end": true,
					"id": "60499c94b22cd43ae29d1821"
				},
				"60499c94b22cd43ae29d1823": {
					"success_id": "5ff8f03ba13f5c2464ab8859",
					"id": "60499c94b22cd43ae29d1823",
					"type": "reminder",
					"reminder": {
						"date": null,
						"recurrence": {
							"freq": "DAILY"
						},
						"text": "Hey! It's time for your check-in with the ARIC Study. To talk to us, please approach your Alexa and say, 'Alexa, open ARIC Study'",
						"time": {
							"h": "{resB}",
							"m": "{resC}",
							"s": "0"
						},
						"type": "SCHEDULED_ABSOLUTE",
						"timezone": "User Timezone"
					},
					"fail_id": "60499c94b22cd43ae29d181e"
				},
				"5ff8f03ba13f5c2464ab8863": {
					"nextId": "5ff8f03ba13f5c2464ab8866",
					"speak": "Would you like to change the time of your appointment?",
					"id": "5ff8f03ba13f5c2464ab8863",
					"type": "speak"
				},
				"5ff8f03ba13f5c2464ab8866": {
					"nextIds": [
						"5ff8f03ba13f5c2464ab885c",
						"6029bfd8df1a1c3ef52a343d"
					],
					"id": "5ff8f03ba13f5c2464ab8866",
					"noMatches": [
						"Hmm... I didn't understand that. I was looking for an answer of yes or no.",
						"Hmm. I still did not get that. If you would like to hear my question again, please say, \"Could you repeat that?\" Otherwise, please answer with yes or no."
					],
					"type": "interaction",
					"randomize": false,
					"interactions": [
						{
							"intent": "AMAZON.YesIntent",
							"mappings": []
						},
						{
							"intent": "AMAZON.NoIntent",
							"mappings": []
						}
					]
				},
				"602c0efd700a1b5e325f085e": {
					"success_id": "6029bf63df1a1c3ef52a33f9",
					"id": "602c0efd700a1b5e325f085e",
					"code": "resB = weekday;\nresB == \"M\"\n  ? (resB = \"MO\")\n  : resB == \"T\"\n  ? (resB = \"TU\")\n  : resB == \"W\"\n  ? (resB = \"WE\")\n  : resB == \"Th\"\n  ? (resB = \"TH\")\n  : resB == \"F\"\n  ? (resB = \"FR\")\n  : resB == \"Sa\"\n  ? (resB = \"SA\")\n  : resB == \"Su\"\n  ? (resB = \"Su\")\n  : null;",
					"type": "code",
					"fail_id": null
				},
				"60499c94b22cd43ae29d181e": {
					"nextId": "60499c94b22cd43ae29d1821",
					"speak": "There was a problem creating the reminder.",
					"id": "60499c94b22cd43ae29d181e",
					"type": "speak"
				},
				"5ff8f0e6a13f5c2464ab8a66": {
					"type": "exit",
					"end": true,
					"id": "5ff8f0e6a13f5c2464ab8a66"
				},
				"60499c94b22cd43ae29d181a": {
					"success_id": "604fb2a55b79f1b1ef214691",
					"id": "60499c94b22cd43ae29d181a",
					"code": "resC = res.split(\":\")[1];\nresB = res.split(\":\")[0];",
					"type": "code",
					"fail_id": "60499c94b22cd43ae29d181e"
				},
				"6029bf63df1a1c3ef52a33e0": {
					"nextId": "6029bf63df1a1c3ef52a33ec",
					"id": "6029bf63df1a1c3ef52a33e0",
					"type": "set",
					"sets": [
						{
							"variable": "res",
							"expression": "v['numbertype']"
						}
					]
				},
				"5ff8f03ba13f5c2464ab885c": {
					"nextId": "6029baecdf1a1c3ef52a338d",
					"speak": "What time would you like to change your appointment to?",
					"id": "5ff8f03ba13f5c2464ab885c",
					"type": "speak"
				},
				"6029bf63df1a1c3ef52a33e3": {
					"nextId": "6029bf63df1a1c3ef52a33e6",
					"speak": "What time would you like to change your appointment to?",
					"id": "6029bf63df1a1c3ef52a33e3",
					"type": "speak"
				},
				"6029bf63df1a1c3ef52a33e6": {
					"nextIds": [
						"6029bf63df1a1c3ef52a33f6",
						"6029bf63df1a1c3ef52a33f3",
						"6029bf63df1a1c3ef52a33e0"
					],
					"id": "6029bf63df1a1c3ef52a33e6",
					"noMatches": [
						"I'm sorry, I was looking for a time. What time would you like to change your appointment to?",
						"Hmm, I didn't get that. What time would you like to change your appointment to?",
						"I'm sorry, I was looking for a time. What time would you like to change your appointment to?"
					],
					"type": "interaction",
					"randomize": false,
					"interactions": [
						{
							"intent": "time_intent",
							"mappings": [
								{
									"variable": "time",
									"slot": "time"
								}
							]
						},
						{
							"intent": "any_time_intent",
							"mappings": []
						},
						{
							"intent": "number_intent",
							"mappings": [
								{
									"variable": "numbertype",
									"slot": "numbertype"
								}
							]
						}
					]
				},
				"6029bfd8df1a1c3ef52a343d": {
					"nextId": "604131014aa5dd22c250a5bc",
					"speak": "Alright. Thank you.",
					"id": "6029bfd8df1a1c3ef52a343d",
					"type": "speak"
				},
				"6029baecdf1a1c3ef52a3396": {
					"nextId": "6029b9dcdf1a1c3ef52a3278",
					"id": "6029baecdf1a1c3ef52a3396",
					"type": "set",
					"sets": [
						{
							"variable": "res",
							"expression": "v['time']"
						}
					]
				},
				"5ff8f03ba13f5c2464ab8873": {
					"nextId": "5ff8f03ba13f5c2464ab8876",
					"speak": "Hey! Would you like to change the day of your appointment?",
					"id": "5ff8f03ba13f5c2464ab8873",
					"type": "speak"
				},
				"6029baecdf1a1c3ef52a3393": {
					"nextId": "6029b9dcdf1a1c3ef52a3278",
					"id": "6029baecdf1a1c3ef52a3393",
					"type": "set",
					"sets": [
						{
							"variable": "res",
							"expression": "'11:00'"
						}
					]
				},
				"5ff8f03ba13f5c2464ab8876": {
					"nextIds": [
						"5ff8f03ba13f5c2464ab887b",
						"6029bf08df1a1c3ef52a33c4"
					],
					"id": "5ff8f03ba13f5c2464ab8876",
					"noMatches": [
						"Hmm... I didn't understand that. I was looking for an answer of yes or no.",
						"Hmm. I still did not get that. If you would like to hear my question again, please say, \"Could you repeat that?\" Otherwise, please answer with yes or no."
					],
					"type": "interaction",
					"randomize": false,
					"interactions": [
						{
							"intent": "AMAZON.YesIntent",
							"mappings": []
						},
						{
							"intent": "AMAZON.NoIntent",
							"mappings": []
						}
					]
				},
				"6029baecdf1a1c3ef52a338d": {
					"nextIds": [
						"6029baecdf1a1c3ef52a3396",
						"6029baecdf1a1c3ef52a3393",
						"6029baecdf1a1c3ef52a338a"
					],
					"id": "6029baecdf1a1c3ef52a338d",
					"noMatches": [
						"I'm sorry, I was looking for a time. What time would you like to change your appointment to?",
						"Hmm, I didn't get that. What time would you like to change your appointment to?",
						"I'm sorry, I was looking for a time. What time would you like to change your appointment to?"
					],
					"type": "interaction",
					"randomize": false,
					"interactions": [
						{
							"intent": "time_intent",
							"mappings": [
								{
									"variable": "time",
									"slot": "time"
								}
							]
						},
						{
							"intent": "any_time_intent",
							"mappings": []
						},
						{
							"intent": "number_intent",
							"mappings": [
								{
									"variable": "numbertype",
									"slot": "numbertype"
								}
							]
						}
					]
				},
				"60300d28e9dfa47e4778c7ac": {
					"nextId": "60300d28e9dfa47e4778c7af",
					"id": "60300d28e9dfa47e4778c7ac",
					"type": "directive",
					"directive": "{\n  \"query\": [\"SELECT \\\"dailystatus\\\" FROM \\\"users\\\" WHERE \\\"userid\\\" = $1;\"],\n  \"params\": [\"_cognitoId\"],\n  \"to\": \"flag\"\n}"
				},
				"6029baecdf1a1c3ef52a338a": {
					"nextId": "6029ba23df1a1c3ef52a3284",
					"id": "6029baecdf1a1c3ef52a338a",
					"type": "set",
					"sets": [
						{
							"variable": "res",
							"expression": "v['numbertype']"
						}
					]
				},
				"6029b9dcdf1a1c3ef52a3278": {
					"nextId": "60499c94b22cd43ae29d181a",
					"id": "6029b9dcdf1a1c3ef52a3278",
					"type": "directive",
					"directive": "{\n  \"query\": \"UPDATE \\\"users\\\" SET \\\"dcheckintime\\\" = $2 WHERE \\\"userid\\\" = $1\",\n  \"params\": [\"_cognitoId\", \"_res\"]\n}"
				},
				"602c0a5e700a1b5e325f0851": {
					"nextId": "6032cd084e7285bfd4ca6326",
					"speak": "Sounds good. I'll talk to you {resB} at {res}:{resC}. In the meantime, please remember to follow the CDC guidelines to protect yourself and others from COVID-19.  These include:  washing your hands often, wearing a mask, avoiding crowds, and staying at least six feet away from others who don’t live with you.  Please take good care of yourself and have a great day!",
					"id": "602c0a5e700a1b5e325f0851",
					"type": "speak"
				},
				"60300d28e9dfa47e4778c7af": {
					"nextIds": [
						"5ff8f03ba13f5c2464ab8873"
					],
					"id": "60300d28e9dfa47e4778c7af",
					"type": "if",
					"elseId": "5ff8f03ba13f5c2464ab8863",
					"expressions": [
						"(!v['flag'])"
					]
				},
				"5ff8f00ca13f5c2464ab8848": {
					"type": "start",
					"nextId": "603607239ebf9102df39f583",
					"id": "5ff8f00ca13f5c2464ab8848"
				},
				"6049a045d008e0b9ee8495e7": {
					"success_id": "6049a877985392d18145265b",
					"id": "6049a045d008e0b9ee8495e7",
					"type": "reminder",
					"reminder": {
						"date": null,
						"recurrence": {
							"freq": "WEEKLY",
							"byDay": [
								"SA"
							]
						},
						"text": "Hey! It's time for your check-in with the ARIC Study. To talk to us, please approach your Alexa and say, 'Alexa, open ARIC Study'",
						"time": {
							"h": "{resB}",
							"m": "{resC}",
							"s": "0"
						},
						"type": "SCHEDULED_ABSOLUTE",
						"timezone": "User Timezone"
					},
					"fail_id": "6049a045d008e0b9ee8495eb"
				},
				"6029bf63df1a1c3ef52a33fc": {
					"nextIds": [
						"6029bf63df1a1c3ef52a33e3",
						"6049a67ad008e0b9ee84961b"
					],
					"id": "6029bf63df1a1c3ef52a33fc",
					"noMatches": [
						"Hmm... I didn't understand that. I was looking for an answer of yes or no.",
						"Hmm. I still did not get that. If you would like to hear my question again, please say, \"Could you repeat that?\" Otherwise, please answer with yes or no."
					],
					"type": "interaction",
					"randomize": false,
					"interactions": [
						{
							"intent": "AMAZON.YesIntent",
							"mappings": []
						},
						{
							"intent": "AMAZON.NoIntent",
							"mappings": []
						}
					]
				},
				"603607b19ebf9102df39f590": {
					"success_id": "6029bf63df1a1c3ef52a33f9",
					"id": "603607b19ebf9102df39f590",
					"code": "resB == \"M\"\n  ? (resB = \"MO\")\n  : resB == \"T\"\n  ? (resB = \"TU\")\n  : resB == \"W\"\n  ? (resB = \"WE\")\n  : resB == \"Th\"\n  ? (resB = \"TH\")\n  : resB == \"F\"\n  ? (resB = \"FR\")\n  : resB == \"Sa\"\n  ? (resB = \"SA\")\n  : resB == \"Su\"\n  ? (resB = \"Su\")\n  : null;",
					"type": "code",
					"fail_id": null
				},
				"6049a67ad008e0b9ee84961b": {
					"nextId": "6049a045d008e0b9ee8495dc",
					"id": "6049a67ad008e0b9ee84961b",
					"type": "directive",
					"directive": "{\n  \"query\": [\"SELECT \\\"checkintime\\\" FROM \\\"users\\\" WHERE \\\"userid\\\" = $1\"],\n  \"params\": [\"_cognitoId\"],\n  \"to\": \"res\"\n}"
				},
				"6049a045d008e0b9ee8495dc": {
					"success_id": "604fb2535b79f1b1ef214675",
					"id": "6049a045d008e0b9ee8495dc",
					"code": "resC = res.split(\":\")[1];\nlet a = resB;\nresB = res.split(\":\")[0];\nres = a;",
					"type": "code",
					"fail_id": "6049a045d008e0b9ee8495eb"
				},
				"5ff8f03ba13f5c2464ab887b": {
					"nextId": "5ff8f03ba13f5c2464ab887e",
					"speak": "What day of the week would you like to do your appointment?",
					"id": "5ff8f03ba13f5c2464ab887b",
					"type": "speak"
				},
				"603607239ebf9102df39f583": {
					"diagram_id": "604fb4537dbea8004948e250",
					"nextId": "60300d28e9dfa47e4778c7ac",
					"id": "603607239ebf9102df39f583",
					"type": "flow"
				},
				"5ff8f03ba13f5c2464ab887e": {
					"nextIds": [
						"6029b832df1a1c3ef52a31fc"
					],
					"id": "5ff8f03ba13f5c2464ab887e",
					"noMatches": [
						"Hmm... I didn't understand that. I was looking for a day of the week.",
						"Hmm. I still did not get that. If you would like to hear my question again, please say, \"Could you repeat that?\" Otherwise, please answer with a day of the week."
					],
					"type": "interaction",
					"randomize": false,
					"interactions": [
						{
							"intent": "weekday_intent",
							"mappings": [
								{
									"variable": "weekday",
									"slot": "weekday"
								}
							]
						}
					]
				},
				"6029b832df1a1c3ef52a31fc": {
					"success_id": "6029b726df1a1c3ef52a3180",
					"id": "6029b832df1a1c3ef52a31fc",
					"code": "resB = weekday;\nresB == \"Monday\"\n  ? (resB = \"M\")\n  : resB == \"Tuesday\"\n  ? (resB = \"T\")\n  : resB == \"Wednesday\"\n  ? (resB = \"W\")\n  : resB == \"Thursday\"\n  ? (resB = \"Th\")\n  : resB == \"Friday\"\n  ? (resB = \"F\")\n  : resB == \"Saturday\"\n  ? (resB = \"Sa\")\n  : resB == \"Sunday\"\n  ? (resB = \"Su\")\n  : null;",
					"type": "code",
					"fail_id": "6029b726df1a1c3ef52a3180"
				}
			}
		},
		"604fb4537dbea8004948e25a": {
			"variables": [],
			"startId": "6020707ee8d06e389ce199e6",
			"commands": [],
			"id": "604fb4537dbea8004948e25a",
			"skill_id": "604fb4535e10aa001b8f200e",
			"lines": {
				"60286e452818e16673da2a13": {
					"nextIds": [
						"602876522818e16673da2c23"
					],
					"id": "60286e452818e16673da2a13",
					"type": "if",
					"expressions": [
						"(v['days'] > 14)"
					]
				},
				"602734142818e16673da2982": {
					"nextIds": [
						"60286ee12818e16673da2a1c"
					],
					"id": "602734142818e16673da2982",
					"type": "if",
					"elseId": "60286fb12818e16673da2a36",
					"expressions": [
						"(!v['flag'])"
					]
				},
				"602876522818e16673da2c23": {
					"nextId": null,
					"id": "602876522818e16673da2c23",
					"type": "set",
					"sets": [
						{
							"variable": "mFlag",
							"expression": 0
						}
					]
				},
				"60207620e8d06e389ce19cd5": {
					"nextIds": [
						"602733982818e16673da2967",
						"602734142818e16673da2976"
					],
					"id": "60207620e8d06e389ce19cd5",
					"type": "if",
					"elseId": "602734142818e16673da2982",
					"expressions": [
						"(v['res'] == -1)",
						"(v['res'] > 1)"
					]
				},
				"6028767d2818e16673da2c49": {
					"nextId": "60286aba2818e16673da29fe",
					"id": "6028767d2818e16673da2c49",
					"type": "set",
					"sets": [
						{
							"variable": "flag",
							"expression": 1
						}
					]
				},
				"6028767c2818e16673da2c3f": {
					"nextId": "60286aba2818e16673da29fe",
					"id": "6028767c2818e16673da2c3f",
					"type": "set",
					"sets": [
						{
							"variable": "flag",
							"expression": 1
						}
					]
				},
				"602734142818e16673da2976": {
					"nextIds": [
						"60286ee12818e16673da2a1c"
					],
					"id": "602734142818e16673da2976",
					"type": "if",
					"elseId": "602864012818e16673da29a4",
					"expressions": [
						"(!v['flag'])"
					]
				},
				"602864012818e16673da29a4": {
					"nextId": "6028766f2818e16673da2c2b",
					"id": "602864012818e16673da29a4",
					"type": "directive",
					"directive": "{\n  \"query\": \"UPDATE \\\"users\\\" SET (\\\"dailystatus\\\", \\\"dcheckintime\\\", \\\"streak\\\") = ('f', null, '0') WHERE \\\"userid\\\" = $1\",\n  \"params\": [\"_cognitoId\"]\n}\n"
				},
				"60286fb12818e16673da2a36": {
					"nextId": "60286f132818e16673da2a2b",
					"id": "60286fb12818e16673da2a36",
					"type": "set",
					"sets": [
						{
							"variable": "res",
							"expression": "(v['res'] + 1)"
						}
					]
				},
				"604facd79ba3af75ec8b962c": {
					"nextIds": [
						"602075ade8d06e389ce19cca"
					],
					"id": "604facd79ba3af75ec8b962c",
					"type": "if",
					"elseId": "604fad7f9ba3af75ec8b963b",
					"expressions": [
						"(v['res'] > 0)"
					]
				},
				"602075ade8d06e389ce19cca": {
					"nextId": "602731af2818e16673da2889",
					"id": "602075ade8d06e389ce19cca",
					"type": "directive",
					"directive": "{\n  \"query\": [\"SELECT \\\"streak\\\" FROM \\\"users\\\" WHERE \\\"userid\\\" = $1;\"],\n  \"params\": [\"_cognitoId\"],\n  \"to\": \"res\"\n  \n}"
				},
				"604facd79ba3af75ec8b9628": {
					"success_id": "604facd79ba3af75ec8b962c",
					"id": "604facd79ba3af75ec8b9628",
					"code": "res = parseInt(res);",
					"type": "code",
					"fail_id": "604facd79ba3af75ec8b962c"
				},
				"60286aba2818e16673da29fe": {
					"nextId": "60286e452818e16673da2a13",
					"id": "60286aba2818e16673da29fe",
					"type": "directive",
					"directive": "{\n  \"query\": [\"SELECT CURRENT_DATE::DATE - \\\"datestart\\\"::DATE AS \\\"days\\\" FROM \\\"users\\\" WHERE \\\"userid\\\" = $1;\"],\n  \"to\": \"days\",\n  \"params\": [\"_cognitoId\"]\n}"
				},
				"602876b62818e16673da2c69": {
					"nextId": "604facd79ba3af75ec8b9625",
					"id": "602876b62818e16673da2c69",
					"type": "set",
					"sets": [
						{
							"variable": "mFlag",
							"expression": 1
						}
					]
				},
				"6028766f2818e16673da2c2b": {
					"nextId": null,
					"id": "6028766f2818e16673da2c2b",
					"type": "set",
					"sets": [
						{
							"variable": "flag",
							"expression": 0
						}
					]
				},
				"60286f132818e16673da2a2b": {
					"nextId": "6028767d2818e16673da2c49",
					"id": "60286f132818e16673da2a2b",
					"type": "directive",
					"directive": "{\n  \"query\": \"UPDATE \\\"users\\\" SET \\\"streak\\\" = $2 WHERE \\\"userid\\\" = $1\",\n  \"params\": [\"_cognitoId\", \"_res\"]\n}"
				},
				"6020707ee8d06e389ce199e6": {
					"type": "start",
					"nextId": "602876b62818e16673da2c69",
					"id": "6020707ee8d06e389ce199e6"
				},
				"60286ee12818e16673da2a1c": {
					"nextId": "6028767c2818e16673da2c3f",
					"id": "60286ee12818e16673da2a1c",
					"type": "directive",
					"directive": "{\n  \"query\": \"UPDATE \\\"users\\\" SET \\\"streak\\\" = '0' WHERE \\\"userid\\\" = $1\",\n  \"params\": [\"_cognitoId\"]\n}"
				},
				"602731af2818e16673da2889": {
					"success_id": "60207620e8d06e389ce19cd5",
					"id": "602731af2818e16673da2889",
					"code": "flag = !questionnaire[\"symptoms\"][\"1\"].value;\nif (!flag) {\n  flag = true;\n  for (let i = 3; i <= 16; i = i + 1){\n    if (questionnaire[\"symptoms\"][i][\"value\"]) {\n      flag = false;\n    }\n  }\n}\nif(!res){\n  res = 0;\n}",
					"type": "code",
					"fail_id": "6027375e2818e16673da298e"
				},
				"6027375e2818e16673da298e": {
					"nextId": null,
					"speak": "Problem retrieving flag",
					"id": "6027375e2818e16673da298e",
					"type": "speak"
				},
				"602733982818e16673da2967": {
					"nextIds": [
						null
					],
					"id": "602733982818e16673da2967",
					"type": "if",
					"elseId": "602864012818e16673da29a4",
					"expressions": [
						"(!v['flag'])"
					]
				},
				"604facd79ba3af75ec8b9625": {
					"nextId": "604facd79ba3af75ec8b9628",
					"id": "604facd79ba3af75ec8b9625",
					"type": "directive",
					"directive": "{\n  \"query\": [\"SELECT (CURRENT_DATE::DATE - DATE(\\\"timestamp\\\")) AS \\\"val\\\" FROM \\\"checkin\\\" WHERE \\\"userid\\\" = $1 AND \\\"checkinid\\\" IN (SELECT \\\"checkinid\\\" FROM \\\"symptoms\\\") UNION ALL SELECT '1' WHERE NOT EXISTS (SELECT \\\"timestamp\\\" FROM \\\"checkin\\\" WHERE \\\"userid\\\" = $1 AND \\\"checkinid\\\" IN (SELECT \\\"checkinid\\\" FROM \\\"symptoms\\\")) ORDER BY \\\"val\\\" ASC;\"],\n  \"params\": [\"_cognitoId\"],\n  \"to\": \"res\"\n}"
				},
				"604fad7f9ba3af75ec8b963b": {
					"nextId": null,
					"id": "604fad7f9ba3af75ec8b963b",
					"type": "set",
					"sets": [
						{
							"variable": "flag",
							"expression": 1
						}
					]
				}
			}
		},
		"604fb4537dbea8004948e251": {
			"variables": [],
			"startId": "5fe9edc555a6159ee6d99005",
			"commands": [],
			"id": "604fb4537dbea8004948e251",
			"skill_id": "604fb4535e10aa001b8f200e",
			"lines": {
				"602ed052700a1b5e325f1fc1": {
					"nextIds": [
						"602ed052700a1b5e325f1fc5"
					],
					"id": "602ed052700a1b5e325f1fc1",
					"type": "if",
					"elseId": "602ed052700a1b5e325f1fb6",
					"expressions": [
						"(!v['flag'])"
					]
				},
				"604945aeb22cd43ae29d0eea": {
					"nextId": "604945c6b22cd43ae29d0ef6",
					"speak": "There was a problem creating the reminder.",
					"id": "604945aeb22cd43ae29d0eea",
					"type": "speak"
				},
				"60496fa6b22cd43ae29d1185": {
					"success_id": "5ff5ca87be758f364404dc87",
					"id": "60496fa6b22cd43ae29d1185",
					"type": "reminder",
					"reminder": {
						"date": null,
						"recurrence": {
							"freq": "WEEKLY",
							"byDay": [
								"SA"
							]
						},
						"text": "This is a reminder",
						"time": {
							"h": "{resB}",
							"m": "{resC}",
							"s": "0"
						},
						"type": "SCHEDULED_ABSOLUTE",
						"timezone": "User Timezone"
					},
					"fail_id": "604945aeb22cd43ae29d0eea"
				},
				"5ff5ca87be758f364404dc8f": {
					"diagram_id": "604fb4537dbea8004948e256",
					"nextId": "602ed052700a1b5e325f1fbd",
					"id": "5ff5ca87be758f364404dc8f",
					"type": "flow"
				},
				"604998a2b22cd43ae29d143d": {
					"nextIds": [
						"60493b29b22cd43ae29d0edb"
					],
					"id": "604998a2b22cd43ae29d143d",
					"type": "if",
					"elseId": "5ff5ca87be758f364404dc87",
					"expressions": [
						"(!v['flag'])"
					]
				},
				"602ed052700a1b5e325f1fc5": {
					"nextId": "604998a2b22cd43ae29d143d",
					"id": "602ed052700a1b5e325f1fc5",
					"type": "directive",
					"directive": "{\n  \"query\": \"UPDATE \\\"users\\\" SET (\\\"checkinday\\\", \\\"checkintime\\\") = ($2, $3) WHERE \\\"userid\\\" = $1;\",\n  \"params\": [\"_cognitoId\", \"_res\", \"_resB\"]\n}"
				},
				"602ed052700a1b5e325f1fb6": {
					"nextId": "602ed532700a1b5e325f2118",
					"id": "602ed052700a1b5e325f1fb6",
					"type": "directive",
					"directive": "{\n  \"query\": \"INSERT INTO \\\"contactalerts\\\" (\\\"checkinid\\\",\\\"type\\\") VALUES ($1,'Refused monthly checkin.')\",\n  \"params\": [\"_checkinId\"]\n}"
				},
				"604945c6b22cd43ae29d0ef6": {
					"type": "exit",
					"end": true,
					"id": "604945c6b22cd43ae29d0ef6"
				},
				"5fe9edc555a6159ee6d99005": {
					"type": "start",
					"nextId": "5ff5ca87be758f364404dc8b",
					"id": "5fe9edc555a6159ee6d99005"
				},
				"5ff5ca87be758f364404dc87": {
					"success_id": null,
					"id": "5ff5ca87be758f364404dc87",
					"code": "questionSeries.modified = false\nquestionnaire['monthlyReminder'] = questionSeries\nquestionSeries = JSON.stringify(questionSeries)",
					"type": "code",
					"fail_id": null
				},
				"5ff5ca87be758f364404dc8b": {
					"success_id": "5ff5ca87be758f364404dc8f",
					"id": "5ff5ca87be758f364404dc8b",
					"code": "questionSeries = questionnaire['monthlyReminder']",
					"type": "code",
					"fail_id": null
				},
				"602ed052700a1b5e325f1fbd": {
					"success_id": "602ed052700a1b5e325f1fc1",
					"id": "602ed052700a1b5e325f1fbd",
					"code": "flag = questionSeries[1].value || questionSeries[7].value;\nmFlag = questionSeries[4].value || questionSeries[12].value;\nif (flag){\n  if(questionSeries[1].value){\n    res = \"Friday\";\n    if(questionSeries[2].value == -1){\n      questionSeries[2].value = \"11:00\";\n    }\n    resB = questionSeries[2].value;\n  } else {\n    res = questionSeries[9].value\n    if(questionSeries[10].value == -1){\n      questionSeries[10].value = \"11:00\";\n    }\n    resB = questionSeries[10].value;\n  }\n  mFlag = questionSeries[4].value || questionSeries[12].value;\n  res == \"Monday\"\n    ? (res = \"M\")\n    : res == \"Tuesday\"\n    ? (res = \"T\")\n    : res == \"Wednesday\"\n    ? (res = \"W\")\n    : res == \"Thursday\"\n    ? (res = \"Th\")\n    : res == \"Friday\"\n    ? (res = \"F\")\n    : res == \"Saturday\"\n    ? (res = \"Sa\")\n    : res == \"Sunday\"\n    ? (res = \"Su\")\n    : null;\n}\nflag = !flag;",
					"type": "code",
					"fail_id": "602ed052700a1b5e325f1fc1"
				},
				"60493b29b22cd43ae29d0edb": {
					"success_id": "60496fa6b22cd43ae29d1185",
					"id": "60493b29b22cd43ae29d0edb",
					"code": "res == \"M\"\n  ? (res = \"MO\")\n  : res == \"T\"\n  ? (res = \"TU\")\n  : res == \"W\"\n  ? (res = \"WE\")\n  : res == \"Th\"\n  ? (res = \"TH\")\n  : res == \"F\"\n  ? (res = \"FR\")\n  : res == \"Sa\"\n  ? (res = \"SA\")\n  : res == \"Su\"\n  ? (res = \"SU\")\n  : (res = \"FR\");\nresC = resB.split(\":\")[1];\nresB = resB.split(\":\")[0];",
					"type": "code",
					"fail_id": "604945aeb22cd43ae29d0eea"
				},
				"602ed532700a1b5e325f2118": {
					"type": "exit",
					"end": true,
					"id": "602ed532700a1b5e325f2118"
				}
			}
		},
		"604fb4537dbea8004948e24b": {
			"variables": [],
			"startId": "5ff3f37bda27927c0bb382bd",
			"commands": [],
			"id": "604fb4537dbea8004948e24b",
			"skill_id": "604fb4535e10aa001b8f200e",
			"lines": {
				"5ff3f37dda27927c0bb382c8": {
					"success_id": null,
					"id": "5ff3f37dda27927c0bb382c8",
					"code": "questionSeries.modified = true\nquestionnaire['vaccination'] = questionSeries\nquestionSeries = JSON.stringify(questionSeries)",
					"type": "code",
					"fail_id": null
				},
				"5ff3f37bda27927c0bb382bd": {
					"type": "start",
					"nextId": "5ff3f37dda27927c0bb382cf",
					"id": "5ff3f37bda27927c0bb382bd"
				},
				"5ff3f37dda27927c0bb382cc": {
					"diagram_id": "604fb4537dbea8004948e256",
					"nextId": "5ff3f37dda27927c0bb382c8",
					"id": "5ff3f37dda27927c0bb382cc",
					"type": "flow"
				},
				"5ff3f37dda27927c0bb382cf": {
					"success_id": "5ff3f37dda27927c0bb382cc",
					"id": "5ff3f37dda27927c0bb382cf",
					"code": "questionSeries = questionnaire['vaccination']",
					"type": "code",
					"fail_id": null
				}
			}
		},
		"604fb4537dbea8004948e254": {
			"variables": [],
			"startId": "5f9f562f11b31520c2a2a6e1",
			"commands": [],
			"id": "604fb4537dbea8004948e254",
			"skill_id": "604fb4535e10aa001b8f200e",
			"lines": {
				"5f9f562f11b31520c2a2a6e1": {
					"type": "start",
					"nextId": "5f9f562f11b31520c2a2a6e2",
					"id": "5f9f562f11b31520c2a2a6e1"
				},
				"5f9f562f11b31520c2a2a6e5": {
					"type": "exit",
					"end": true,
					"id": "5f9f562f11b31520c2a2a6e5"
				},
				"5f9f562f11b31520c2a2a6e4": {
					"nextIds": [
						null,
						"5fde75c44a001a20aa67166d"
					],
					"id": "5f9f562f11b31520c2a2a6e4",
					"noMatches": [
						"Do you want to continue?",
						"Please say yes or no."
					],
					"type": "interaction",
					"randomize": false,
					"interactions": [
						{
							"intent": "AMAZON.YesIntent",
							"mappings": []
						},
						{
							"intent": "AMAZON.NoIntent",
							"mappings": []
						}
					]
				},
				"5fde75c44a001a20aa67166d": {
					"nextId": "5f9f562f11b31520c2a2a6e5",
					"speak": "Bye for now.",
					"id": "5fde75c44a001a20aa67166d",
					"type": "speak"
				},
				"5f9f562f11b31520c2a2a6e2": {
					"nextId": "5f9f562f11b31520c2a2a6e4",
					"speak": "You said help. Do you want to continue?",
					"id": "5f9f562f11b31520c2a2a6e2",
					"type": "speak"
				}
			}
		},
		"604fb4537dbea8004948e246": {
			"variables": [],
			"startId": "5f9f562f11b31520c2a2a6de",
			"commands": [
				{
					"next": null,
					"diagram_id": "604fb4537dbea8004948e254",
					"mappings": [],
					"type": "command",
					"intent": "AMAZON.HelpIntent"
				},
				{
					"next": null,
					"diagram_id": "604fb4537dbea8004948e247",
					"mappings": [],
					"type": "command",
					"intent": "AMAZON.StopIntent"
				},
				{
					"next": null,
					"diagram_id": "604fb4537dbea8004948e247",
					"mappings": [],
					"type": "command",
					"intent": "AMAZON.CancelIntent"
				},
				{
					"next": null,
					"diagram_id": "604fb4537dbea8004948e257",
					"mappings": [],
					"type": "command",
					"intent": "reschedule_intent"
				},
				{
					"next": "60360ac1d2edd91b9d90bfe1",
					"mappings": [],
					"type": "intent",
					"intent": "reschedule_intent"
				},
				{
					"next": "60360e6dd2edd91b9d90c014",
					"mappings": [],
					"type": "intent",
					"intent": "report_intent"
				},
				{
					"next": "60360d50d2edd91b9d90bfeb",
					"mappings": [
						{
							"path": "data.cause.result.status",
							"var": "res"
						},
						{
							"_dispatchListeners": null,
							"cancelable": null,
							"ctrlKey": null,
							"_targetInst": null,
							"type": null,
							"dispatchConfig": null,
							"button": null,
							"path": "data",
							"eventPhase": null,
							"view": null,
							"shiftKey": null,
							"altKey": null,
							"isTrusted": null,
							"_dispatchInstances": null,
							"buttons": null,
							"movementY": null,
							"clientY": null,
							"clientX": null,
							"var": "resB",
							"movementX": null,
							"defaultPrevented": null,
							"metaKey": null,
							"getModifierState": null,
							"target": null,
							"timeStamp": null,
							"nativeEvent": null,
							"currentTarget": null,
							"relatedTarget": null,
							"bubbles": null,
							"detail": null,
							"pageY": null,
							"screenX": null,
							"pageX": null,
							"screenY": null
						},
						{
							"_dispatchListeners": null,
							"cancelable": null,
							"ctrlKey": null,
							"_targetInst": null,
							"type": null,
							"dispatchConfig": null,
							"button": null,
							"path": "data.cause.token",
							"eventPhase": null,
							"view": null,
							"shiftKey": null,
							"altKey": null,
							"isTrusted": null,
							"_dispatchInstances": null,
							"buttons": null,
							"movementY": null,
							"clientY": null,
							"clientX": null,
							"var": "intentMemory",
							"movementX": null,
							"defaultPrevented": null,
							"metaKey": null,
							"getModifierState": null,
							"target": null,
							"timeStamp": null,
							"nativeEvent": null,
							"currentTarget": null,
							"relatedTarget": null,
							"bubbles": null,
							"detail": null,
							"pageY": null,
							"screenX": null,
							"pageX": null,
							"screenY": null
						}
					],
					"type": "event",
					"event": "SessionResumedRequest"
				},
				{
					"next": "6049aaf1985392d18145282e",
					"mappings": [],
					"type": "intent",
					"intent": "delete_intent"
				}
			],
			"id": "604fb4537dbea8004948e246",
			"skill_id": "604fb4535e10aa001b8f200e",
			"lines": {
				"603609dd9ebf9102df39f707": {
					"nextIds": [
						"5ff767c2e7b840f3a1b8ddba",
						"5ff8f09ea13f5c2464ab8a26",
						"5ff767f9e7b840f3a1b8e02c",
						"604fb1fa5b79f1b1ef214579"
					],
					"id": "603609dd9ebf9102df39f707",
					"type": "if",
					"elseId": "603755708b1ed55880fc209f",
					"expressions": [
						"(v['intentMemory'] == 'o')",
						"(v['intentMemory'] == 's')",
						"(v['intentMemory'] == 'r')",
						"(v['intentMemory'] == 'd')"
					]
				},
				"6038b02ca2c74fd4689e8910": {
					"nextIds": [],
					"id": "6038b02ca2c74fd4689e8910",
					"noMatches": [],
					"type": "interaction",
					"randomize": false,
					"interactions": []
				},
				"5f9f562f11b31520c2a2a6de": {
					"type": "start",
					"nextId": "60360e69d2edd91b9d90c00a",
					"id": "5f9f562f11b31520c2a2a6de"
				},
				"5fe9f2e055a6159ee6d991ff": {
					"diagram_id": "604fb4537dbea8004948e25b",
					"nextId": "6020706ce8d06e389ce199df",
					"id": "5fe9f2e055a6159ee6d991ff",
					"type": "flow"
				},
				"5fe9f69d55a6159ee6d993e6": {
					"nextId": "5fe9f69d55a6159ee6d993e9",
					"speak": "Since the last time we spoke on {lastInteraction}, have you had COVID-19?",
					"id": "5fe9f69d55a6159ee6d993e6",
					"type": "speak"
				},
				"5ff7675ee7b840f3a1b8dd8c": {
					"nextId": "5ff8a6db393d3fb0af48760e",
					"speak": "Hey there! Since the last time we spoke on {lastInteraction} have you had COVID-19?",
					"id": "5ff7675ee7b840f3a1b8dd8c",
					"type": "speak"
				},
				"5fe9f69d55a6159ee6d993e9": {
					"nextIds": [
						"5fe9f78655a6159ee6d994a1",
						"5ff87555e7b840f3a1b90ed3"
					],
					"id": "5fe9f69d55a6159ee6d993e9",
					"noMatches": [
						"Hmm... I didn't understand that. I was looking for an answer of yes or no.",
						"Hmm. I still did not get that. If you would like to hear my question again, please say, \"Could you repeat that?\" Otherwise, please answer with yes or no."
					],
					"type": "interaction",
					"randomize": false,
					"interactions": [
						{
							"intent": "AMAZON.YesIntent",
							"mappings": []
						},
						{
							"intent": "AMAZON.NoIntent",
							"mappings": []
						}
					]
				},
				"602881c5df1a1c3ef52a294b": {
					"nextIds": [
						"5fe9f93e55a6159ee6d996a7"
					],
					"id": "602881c5df1a1c3ef52a294b",
					"type": "if",
					"elseId": "5fe9fd6c55a6159ee6d9978f",
					"expressions": [
						"(v['res'] > 27)"
					]
				},
				"604fb1995b79f1b1ef214102": {
					"type": "exit",
					"end": true,
					"id": "604fb1995b79f1b1ef214102"
				},
				"6020706ce8d06e389ce199df": {
					"diagram_id": "604fb4537dbea8004948e25a",
					"nextId": "60207083e8d06e389ce199e8",
					"id": "6020706ce8d06e389ce199df",
					"type": "flow"
				},
				"604fb1995b79f1b1ef2140ff": {
					"nextId": "604fb1e15b79f1b1ef21456d",
					"speak": "There was a problem creating the reminder. ARIC may contact you to try to resolve this issue.",
					"id": "604fb1995b79f1b1ef2140ff",
					"type": "speak"
				},
				"60360e69d2edd91b9d90c00a": {
					"nextId": "6038b02ca2c74fd4689e8910",
					"id": "60360e69d2edd91b9d90c00a",
					"type": "directive",
					"directive": "{\n  \"type\": \"Connections.StartConnection\",\n  \"uri\": \"connection://AMAZON.VerifyPerson/2\",\n  \"input\": {\n     \"requestedAuthenticationConfidenceLevel\": {\n        \"level\": 400,\n        \"customPolicy\": {\n           \"policyName\": \"VOICE_PIN\"\n        }            \n     }\n  },\n  \"token\": \"o\"\n}"
				},
				"603755408b1ed55880fc2095": {
					"success_id": "602881c5df1a1c3ef52a294b",
					"id": "603755408b1ed55880fc2095",
					"code": "res = parseInt(res);",
					"type": "code",
					"fail_id": "602881c5df1a1c3ef52a294b"
				},
				"6049aaf1985392d181452831": {
					"nextIds": [],
					"id": "6049aaf1985392d181452831",
					"noMatches": [],
					"type": "interaction",
					"randomize": false,
					"interactions": []
				},
				"603755708b1ed55880fc209f": {
					"nextId": null,
					"speak": "{intentMemory} ",
					"id": "603755708b1ed55880fc209f",
					"type": "speak"
				},
				"5fe9ef6155a6159ee6d9911a": {
					"nextIds": [
						"5fe9f27555a6159ee6d9918b",
						"5fe9f22b55a6159ee6d99133"
					],
					"id": "5fe9ef6155a6159ee6d9911a",
					"noMatches": [
						"Hmm... I didn't understand that. I was looking for an answer of yes or no.",
						"Hmm. I still did not get that. If you would like to hear my question again, please say, \"Could you repeat that?\" Otherwise, please answer with yes or no."
					],
					"type": "interaction",
					"randomize": false,
					"interactions": [
						{
							"intent": "AMAZON.YesIntent",
							"mappings": []
						},
						{
							"intent": "AMAZON.NoIntent",
							"mappings": []
						}
					]
				},
				"5ff8a6db393d3fb0af48760e": {
					"nextIds": [
						"5ff8a4e6393d3fb0af487027",
						"5ff7680be7b840f3a1b8e035"
					],
					"id": "5ff8a6db393d3fb0af48760e",
					"noMatches": [
						"If you had COVID since we last spoke, say \"yes\"",
						"I'm looking for a \"yes\" or \"no\" in this question.",
						"Since the last time we spoke, have you had COVID19?"
					],
					"type": "interaction",
					"randomize": false,
					"interactions": [
						{
							"intent": "AMAZON.YesIntent",
							"mappings": []
						},
						{
							"intent": "AMAZON.NoIntent",
							"mappings": []
						}
					]
				},
				"604fb1589ba3af75ec8b9c48": {
					"nextId": "604fb1589ba3af75ec8b9c4b",
					"speak": "Are you sure you would like to delete all of your existing check-in reminders?<break strength=\"x-strong\" />",
					"id": "604fb1589ba3af75ec8b9c48",
					"type": "speak"
				},
				"5ff876ece7b840f3a1b911db": {
					"diagram_id": "604fb4537dbea8004948e24c",
					"nextId": "5fe9f83b55a6159ee6d995f9",
					"id": "5ff876ece7b840f3a1b911db",
					"type": "flow"
				},
				"6032cdc54e7285bfd4ca648c": {
					"nextIds": [
						"5fe9ed8555a6159ee6d98fd9"
					],
					"id": "6032cdc54e7285bfd4ca648c",
					"type": "if",
					"elseId": "6032cdc74e7285bfd4ca649a",
					"expressions": [
						"(!v['flag'])"
					]
				},
				"5fe9f78655a6159ee6d994a1": {
					"diagram_id": "604fb4537dbea8004948e24f",
					"nextId": "5fe9f7b855a6159ee6d99543",
					"id": "5fe9f78655a6159ee6d994a1",
					"type": "flow"
				},
				"5fe9fd6c55a6159ee6d9978b": {
					"success_id": "601a14e2b0f5e32def4d6457",
					"id": "5fe9fd6c55a6159ee6d9978b",
					"code": "//Stage Feedback",
					"type": "code",
					"fail_id": "601a14e2b0f5e32def4d6457"
				},
				"5ff73286b187aa94d2180b2a": {
					"nextId": "5fe9f83b55a6159ee6d995f9",
					"speak": "Okay. We will continue to talk to you on {res} for your check-ins.",
					"id": "5ff73286b187aa94d2180b2a",
					"type": "speak"
				},
				"604fb2095b79f1b1ef214582": {
					"nextId": null,
					"speak": "Okay, no worries!",
					"id": "604fb2095b79f1b1ef214582",
					"type": "speak"
				},
				"5fe9fd6c55a6159ee6d9978f": {
					"nextId": "5fe9fd6c55a6159ee6d99792",
					"speak": "Thanks so much for taking the time to answer these questions. Would you be willing to give ARIC some feedback?",
					"id": "5fe9fd6c55a6159ee6d9978f",
					"type": "speak"
				},
				"60206eafe8d06e389ce199a7": {
					"nextId": "60206f4be8d06e389ce199b2",
					"id": "60206eafe8d06e389ce199a7",
					"type": "directive",
					"directive": "{\n  \"query\": [\"SELECT \\\"dailystatus\\\" FROM \\\"users\\\" WHERE \\\"userid\\\" = $1;\"],\n  \"params\": [\"_cognitoId\"],\n  \"to\": \"flag\"\n}"
				},
				"5ff767c2e7b840f3a1b8ddba": {
					"diagram_id": "604fb4537dbea8004948e250",
					"nextId": "60206c84e8d06e389ce1967c",
					"id": "5ff767c2e7b840f3a1b8ddba",
					"type": "flow"
				},
				"5ff8a4e6393d3fb0af487027": {
					"diagram_id": "604fb4537dbea8004948e24f",
					"nextId": "5ff8a4e6393d3fb0af48702a",
					"id": "5ff8a4e6393d3fb0af487027",
					"type": "flow"
				},
				"5fe9f81c55a6159ee6d995ef": {
					"success_id": "5ff876ece7b840f3a1b911db",
					"id": "5fe9f81c55a6159ee6d995ef",
					"code": "// //today's date\n// dateCheck = new Date();\n// //subtract two weeks\n// dateCheck.setDate(dateCheck.getDate()-14);\n\n// //get either answer 2 or answer 3 (whichever one is not null)\n// dateContract = questionnaire[\"newDiagnosis\"][2].value\n// if(!dateContract){\n//   dateContract = questionnaire[\"newDiagnosis\"][3].value\n// }\n// dateContract = new Date(dateContract);\n// if(dateContract < dateCheck){\n//   throw \"More than two weeks ago\"\n// }",
					"type": "code",
					"fail_id": "5fe9f83b55a6159ee6d995f9"
				},
				"5fe9f93e55a6159ee6d996aa": {
					"nextIds": [
						"5fe9fcdf55a6159ee6d996b7",
						"5fe9fcef55a6159ee6d996c2"
					],
					"id": "5fe9f93e55a6159ee6d996aa",
					"noMatches": [
						"Hmm... I didn't understand that. I was looking for an answer of yes or no.",
						"Hmm. I still did not get that. If you would like to hear my question again, please say, \"Could you repeat that?\" Otherwise, please answer with yes or no."
					],
					"type": "interaction",
					"randomize": false,
					"interactions": [
						{
							"intent": "AMAZON.YesIntent",
							"mappings": []
						},
						{
							"intent": "AMAZON.NoIntent",
							"mappings": []
						}
					]
				},
				"5fe9f27555a6159ee6d9918e": {
					"nextIds": [
						"5fe9f2e055a6159ee6d991ff",
						"5fe9f29955a6159ee6d9919e"
					],
					"id": "5fe9f27555a6159ee6d9918e",
					"noMatches": [
						"Hmm... I didn't understand that. I was looking for an answer of yes or no.",
						"Hmm. I still did not get that. If you would like to hear my question again, please say, \"Could you repeat that?\" Otherwise, please answer with yes or no."
					],
					"type": "interaction",
					"randomize": false,
					"interactions": [
						{
							"intent": "AMAZON.YesIntent",
							"mappings": []
						},
						{
							"intent": "AMAZON.NoIntent",
							"mappings": []
						}
					]
				},
				"60288156df1a1c3ef52a276a": {
					"nextId": "603755408b1ed55880fc2095",
					"id": "60288156df1a1c3ef52a276a",
					"type": "directive",
					"directive": "{\n  \"query\": [\"SELECT (CURRENT_DATE::DATE - DATE(\\\"timestamp\\\")) AS \\\"val\\\" FROM \\\"checkin\\\" WHERE \\\"userid\\\" = $1 AND \\\"checkinid\\\" IN (SELECT \\\"checkinid\\\" FROM \\\"mentalhealth\\\") UNION ALL SELECT '29' WHERE NOT EXISTS (SELECT \\\"timestamp\\\" FROM \\\"checkin\\\" WHERE \\\"userid\\\" = $1 AND \\\"checkinid\\\" IN (SELECT \\\"checkinid\\\" FROM \\\"mentalhealth\\\")) ORDER BY \\\"val\\\" ASC;\"],\n  \"params\": [\"_cognitoId\"],\n  \"to\": \"res\"\n}"
				},
				"5fe9f27555a6159ee6d9918b": {
					"nextId": "5fe9f27555a6159ee6d9918e",
					"speak": "Is it okay if I ask you a few questions about your health? ",
					"id": "5fe9f27555a6159ee6d9918b",
					"type": "speak"
				},
				"604fb1589ba3af75ec8b9c4b": {
					"nextIds": [
						"6049ab5f985392d18145283b",
						"604fb2095b79f1b1ef214582"
					],
					"id": "604fb1589ba3af75ec8b9c4b",
					"noMatches": [
						"If you would like to be reminded before your next checkin, please say, \"yes\"",
						"Im sorry, I was looking for, \"yes\" or \"no\".",
						"Hmm, I didn't understand that. Would you like to be reminded before your weekly checkins?"
					],
					"type": "interaction",
					"randomize": false,
					"interactions": [
						{
							"intent": "AMAZON.YesIntent",
							"mappings": []
						},
						{
							"intent": "AMAZON.NoIntent",
							"mappings": []
						}
					]
				},
				"5ff73232b187aa94d2180b1b": {
					"nextIds": [
						"60499d0dd008e0b9ee8494d8",
						"5ff732e2b187aa94d2180b40"
					],
					"id": "5ff73232b187aa94d2180b1b",
					"noMatches": [],
					"type": "interaction",
					"randomize": false,
					"interactions": [
						{
							"intent": "AMAZON.YesIntent",
							"mappings": []
						},
						{
							"intent": "AMAZON.NoIntent",
							"mappings": []
						}
					]
				},
				"5ff87555e7b840f3a1b90ed3": {
					"nextId": "5fe9f6ea55a6159ee6d993f6",
					"speak": "OK. Please let us know if you contract COVID-19, since the ARIC Study is working hard to understand the impact of the pandemic on our participants.",
					"id": "5ff87555e7b840f3a1b90ed3",
					"type": "speak"
				},
				"601a14e2b0f5e32def4d6457": {
					"nextId": "5ff714d7b187aa94d2180759",
					"id": "601a14e2b0f5e32def4d6457",
					"type": "directive",
					"directive": "{\n  \"query\": \"update\"\n}"
				},
				"60499d0dd008e0b9ee8494d8": {
					"nextId": "60499b95b22cd43ae29d173a",
					"id": "60499d0dd008e0b9ee8494d8",
					"type": "directive",
					"directive": "{\n  \"query\": [\"SELECT \\\"checkintime\\\" FROM \\\"users\\\" WHERE \\\"userid\\\" = $1\"],\n  \"params\": [\"_cognitoId\"],\n  \"to\": \"res\"\n}"
				},
				"5fe9f61255a6159ee6d993b5": {
					"diagram_id": "604fb4537dbea8004948e24d",
					"nextId": null,
					"id": "5fe9f61255a6159ee6d993b5",
					"type": "flow"
				},
				"6032cdc54e7285bfd4ca6489": {
					"nextId": "6032cdc54e7285bfd4ca648c",
					"id": "6032cdc54e7285bfd4ca6489",
					"type": "directive",
					"directive": "{\n  \"query\": [\"SELECT \\\"checkintime\\\" FROM \\\"users\\\" WHERE \\\"userid\\\" = $1;\"],\n  \"params\": [\"_cognitoId\"],\n  \"to\": \"flag\"\n}"
				},
				"6032dc89d8b4f6a1a62b6591": {
					"nextId": "60206eafe8d06e389ce199a7",
					"speak": "Hey there! Thanks for checking in with me. ",
					"id": "6032dc89d8b4f6a1a62b6591",
					"type": "speak"
				},
				"60499b95b22cd43ae29d1741": {
					"type": "exit",
					"end": true,
					"id": "60499b95b22cd43ae29d1741"
				},
				"60499b95b22cd43ae29d1743": {
					"success_id": "602878fd2818e16673da2fc6",
					"id": "60499b95b22cd43ae29d1743",
					"type": "reminder",
					"reminder": {
						"date": null,
						"recurrence": {
							"freq": "WEEKLY",
							"byDay": [
								"SA"
							]
						},
						"text": "Hey! It's time for your check-in with the ARIC Study. To talk to us, please approach your Alexa and say, 'Alexa, open ARIC Study'",
						"time": {
							"h": "{resB}",
							"m": "{resC}",
							"s": "0"
						},
						"type": "SCHEDULED_ABSOLUTE",
						"timezone": "User Timezone"
					},
					"fail_id": "60499b95b22cd43ae29d173e"
				},
				"5fe9f71355a6159ee6d99403": {
					"diagram_id": "604fb4537dbea8004948e24a",
					"nextId": "5fe9f83b55a6159ee6d995f9",
					"id": "5fe9f71355a6159ee6d99403",
					"type": "flow"
				},
				"604faa379ba3af75ec8b9379": {
					"nextIds": [
						"60499d0dd008e0b9ee8494d8",
						"5ff732e2b187aa94d2180b40"
					],
					"id": "604faa379ba3af75ec8b9379",
					"noMatches": [
						"If you would like to be reminded before your next checkin, please say, \"yes\"",
						"Im sorry, I was looking for, \"yes\" or \"no\".",
						"Hmm, I didn't understand that. Would you like to be reminded before your weekly checkins?"
					],
					"type": "interaction",
					"randomize": false,
					"interactions": [
						{
							"intent": "AMAZON.YesIntent",
							"mappings": []
						},
						{
							"intent": "AMAZON.NoIntent",
							"mappings": []
						}
					]
				},
				"60499b95b22cd43ae29d173a": {
					"success_id": "6028776c2818e16673da2fbe",
					"id": "60499b95b22cd43ae29d173a",
					"code": "resC = res.split(\":\")[1];\nresB = res.split(\":\")[0];",
					"type": "code",
					"fail_id": "6028776c2818e16673da2fbe"
				},
				"60206c84e8d06e389ce1967c": {
					"nextId": "601217fd25343e75f7bedac3",
					"id": "60206c84e8d06e389ce1967c",
					"type": "directive",
					"directive": "{\n  \"query\": [\"SELECT \\\"productive\\\" FROM \\\"checkin\\\" WHERE \\\"userid\\\" = $1 ORDER BY \\\"productive\\\" DESC;\"],\n  \"params\": [\"_cognitoId\"],\n  \"to\": \"flag\"\n}"
				},
				"5fe9f6ea55a6159ee6d993f6": {
					"success_id": "5fe9f71355a6159ee6d99403",
					"id": "5fe9f6ea55a6159ee6d993f6",
					"code": "//code here",
					"type": "code",
					"fail_id": null
				},
				"60499b95b22cd43ae29d173e": {
					"nextId": "60499b95b22cd43ae29d1741",
					"speak": "There was a problem creating the reminder.",
					"id": "60499b95b22cd43ae29d173e",
					"type": "speak"
				},
				"5fe9ef5a55a6159ee6d9910f": {
					"nextId": "5fe9ef6155a6159ee6d9911a",
					"speak": "I understand that you recently tested positive for COVID-19, is that right?",
					"id": "5fe9ef5a55a6159ee6d9910f",
					"type": "speak"
				},
				"5fe9fcef55a6159ee6d996c2": {
					"success_id": "601a1650b0f5e32def4d6473",
					"id": "5fe9fcef55a6159ee6d996c2",
					"code": "//Stage Mental Health",
					"type": "code",
					"fail_id": null
				},
				"5fe9f93e55a6159ee6d996a7": {
					"nextId": "5fe9f93e55a6159ee6d996aa",
					"speak": "Is it okay if I ask you some questions about your mood?",
					"id": "5fe9f93e55a6159ee6d996a7",
					"type": "speak"
				},
				"601a156eb0f5e32def4d6469": {
					"nextId": "5ff7756ce7b840f3a1b8f79d",
					"id": "601a156eb0f5e32def4d6469",
					"type": "directive",
					"directive": "{\n  \"query\": \"update\"\n}"
				},
				"60360d50d2edd91b9d90bfeb": {
					"nextIds": [
						"603609dd9ebf9102df39f707"
					],
					"id": "60360d50d2edd91b9d90bfeb",
					"type": "if",
					"elseId": "60360d7fd2edd91b9d90bff9",
					"expressions": [
						"(v['res'] == 'ACHIEVED')"
					]
				},
				"60499d68d008e0b9ee8494ed": {
					"success_id": "60499b95b22cd43ae29d1743",
					"id": "60499d68d008e0b9ee8494ed",
					"code": "res == \"M\"\r\n  ? (res = \"MO\")\r\n  : res == \"T\"\r\n  ? (res = \"TU\")\r\n  : res == \"W\"\r\n  ? (res = \"WE\")\r\n  : res == \"Th\"\r\n  ? (res = \"TH\")\r\n  : res == \"F\"\r\n  ? (res = \"FR\")\r\n  : res == \"Sa\"\r\n  ? (res = \"SA\")\r\n  : res == \"Su\"\r\n  ? (res = \"SU\")\r\n  : null;",
					"type": "code",
					"fail_id": "60499b95b22cd43ae29d173e"
				},
				"5ff714d7b187aa94d2180759": {
					"nextId": null,
					"speak": "Thank you very much for your time today.  I’ll be contacting you again soon.  In the meantime, please remember to follow the CDC guidelines to protect yourself and others from COVID-19.  These include:  washing your hands often, wearing a mask, avoiding crowds, and staying at least six feet away from others who don’t live with you.  Please take good care of yourself and have a great day!",
					"id": "5ff714d7b187aa94d2180759",
					"type": "speak"
				},
				"5fe9f22b55a6159ee6d99133": {
					"diagram_id": "604fb4537dbea8004948e253",
					"nextId": null,
					"id": "5fe9f22b55a6159ee6d99133",
					"type": "flow"
				},
				"60360ac1d2edd91b9d90bfe1": {
					"nextId": "6041313a4aa5dd22c250a77f",
					"id": "60360ac1d2edd91b9d90bfe1",
					"type": "directive",
					"directive": "{\n  \"type\": \"Connections.StartConnection\",\n  \"uri\": \"connection://AMAZON.VerifyPerson/2\",\n  \"input\": {\n     \"requestedAuthenticationConfidenceLevel\": {\n        \"level\": 400,\n        \"customPolicy\": {\n           \"policyName\": \"VOICE_PIN\"\n        }            \n     }\n  },\n  \"token\": \"s\"\n}"
				},
				"60360e6dd2edd91b9d90c014": {
					"nextId": "6041313d4aa5dd22c250a787",
					"id": "60360e6dd2edd91b9d90c014",
					"type": "directive",
					"directive": "{\n  \"type\": \"Connections.StartConnection\",\n  \"uri\": \"connection://AMAZON.VerifyPerson/2\",\n  \"input\": {\n     \"requestedAuthenticationConfidenceLevel\": {\n        \"level\": 400,\n        \"customPolicy\": {\n           \"policyName\": \"VOICE_PIN\"\n        }            \n     }\n  },\n  \"token\": \"r\"\n}"
				},
				"5fe9f52a55a6159ee6d9927c": {
					"nextId": "5fe9f83b55a6159ee6d995f9",
					"speak": "Thanks so much for taking the time to answer these questions. We will keep checking in on you until you are symptom-free for three days in a row. <break strength=\"x-strong\" />",
					"id": "5fe9f52a55a6159ee6d9927c",
					"type": "speak"
				},
				"5ff767f9e7b840f3a1b8e02c": {
					"diagram_id": "604fb4537dbea8004948e250",
					"nextId": "5ff7675ee7b840f3a1b8dd8c",
					"id": "5ff767f9e7b840f3a1b8e02c",
					"type": "flow"
				},
				"601217fd25343e75f7bedac3": {
					"nextIds": [
						"5fe9ed8555a6159ee6d98fd9"
					],
					"id": "601217fd25343e75f7bedac3",
					"type": "if",
					"elseId": "6032cdc54e7285bfd4ca6489",
					"expressions": [
						"(!v['flag'])"
					]
				},
				"5fe9f66b55a6159ee6d993d6": {
					"nextIds": [
						"5ff3f35fda27927c0bb382b7",
						"5fe9f71355a6159ee6d99403"
					],
					"id": "5fe9f66b55a6159ee6d993d6",
					"noMatches": [
						"Hmm... I didn't understand that. I was looking for an answer of yes or no.",
						"Hmm. I still did not get that. If you would like to hear my question again, please say, \"Could you repeat that?\" Otherwise, please answer with yes or no."
					],
					"type": "interaction",
					"randomize": false,
					"interactions": [
						{
							"intent": "AMAZON.YesIntent",
							"mappings": []
						},
						{
							"intent": "AMAZON.NoIntent",
							"mappings": []
						}
					]
				},
				"602878fd2818e16673da2fc6": {
					"success_id": "5ff73286b187aa94d2180b2a",
					"id": "602878fd2818e16673da2fc6",
					"code": "res == \"MO\"\r\n  ? (res = \"Mondays\")\r\n  : res == \"TU\"\r\n  ? (res = \"Tuesdays\")\r\n  : res == \"WE\"\r\n  ? (res = \"Wednesdays\")\r\n  : res == \"TH\"\r\n  ? (res = \"Thursdays\")\r\n  : res == \"FR\"\r\n  ? (res = \"Fridays\")\r\n  : res == \"SA\"\r\n  ? (res = \"Saturdays\")\r\n  : res == \"SU\"\r\n  ? (res = \"Sundays\")\r\n  : null;",
					"type": "code",
					"fail_id": "5ff73286b187aa94d2180b2a"
				},
				"60360d7fd2edd91b9d90bff9": {
					"nextId": null,
					"speak": "Error: {res} ",
					"id": "60360d7fd2edd91b9d90bff9",
					"type": "speak"
				},
				"5ff73232b187aa94d2180b18": {
					"nextId": "5ff73232b187aa94d2180b1b",
					"speak": "Thank you for checking in with us for two weeks. As you have not been asymptomatic for three days in a row, we will continue to check-in with you. Would you like to transition to a weekly check-in instead?",
					"id": "5ff73232b187aa94d2180b18",
					"type": "speak"
				},
				"5fe9f66b55a6159ee6d993d3": {
					"nextId": "5fe9f66b55a6159ee6d993d6",
					"speak": "Is it okay if I start out by asking you a few questions about COVID-19?",
					"id": "5fe9f66b55a6159ee6d993d3",
					"type": "speak"
				},
				"5ff7756ce7b840f3a1b8f79d": {
					"nextId": null,
					"speak": "Thank you for speaking with me! Thank you very much for your time today.  I’ll be contacting you again soon.  In the meantime, please remember to follow the CDC guidelines to protect yourself and others from COVID-19.  These include:  washing your hands often, wearing a mask, avoiding crowds, and staying at least six feet away from others who don’t live with you.  Please take good care of yourself and have a great day!",
					"id": "5ff7756ce7b840f3a1b8f79d",
					"type": "speak"
				},
				"6032cdc74e7285bfd4ca649d": {
					"nextIds": [
						"5fe9ed8555a6159ee6d98fd9"
					],
					"id": "6032cdc74e7285bfd4ca649d",
					"type": "if",
					"elseId": "6032dc89d8b4f6a1a62b6591",
					"expressions": [
						"(!v['flag'])"
					]
				},
				"5fe9edb355a6159ee6d98ffb": {
					"diagram_id": "604fb4537dbea8004948e251",
					"nextId": "601a16eab0f5e32def4d647a",
					"id": "5fe9edb355a6159ee6d98ffb",
					"type": "flow"
				},
				"60361a17d2edd91b9d90c211": {
					"diagram_id": "604fb4537dbea8004948e258",
					"nextId": null,
					"id": "60361a17d2edd91b9d90c211",
					"type": "flow"
				},
				"60207083e8d06e389ce199e8": {
					"nextIds": [
						"5fe9f51c55a6159ee6d99272"
					],
					"id": "60207083e8d06e389ce199e8",
					"type": "if",
					"elseId": "6028770e2818e16673da2dde",
					"expressions": [
						"(!v['flag'])"
					]
				},
				"5fe9f61e55a6159ee6d993c2": {
					"nextIds": [
						"5fe9f66b55a6159ee6d993d3",
						"5fe9f61255a6159ee6d993b5"
					],
					"id": "5fe9f61e55a6159ee6d993c2",
					"noMatches": [
						"Hmm... I didn't understand that. I was looking for an answer of yes or no.",
						"Hmm. I still did not get that. If you would like to hear my question again, please say, \"Could you repeat that?\" Otherwise, please answer with yes or no."
					],
					"type": "interaction",
					"randomize": false,
					"interactions": [
						{
							"intent": "AMAZON.YesIntent",
							"mappings": []
						},
						{
							"intent": "AMAZON.NoIntent",
							"mappings": []
						}
					]
				},
				"5ff732e2b187aa94d2180b40": {
					"nextId": "5fe9f83b55a6159ee6d995f9",
					"speak": "Okay. Speak to you tomorrow!",
					"id": "5ff732e2b187aa94d2180b40",
					"type": "speak"
				},
				"5ff8f09ea13f5c2464ab8a26": {
					"diagram_id": "604fb4537dbea8004948e257",
					"nextId": null,
					"id": "5ff8f09ea13f5c2464ab8a26",
					"type": "flow"
				},
				"5ff88610e7b840f3a1b91370": {
					"diagram_id": "604fb4537dbea8004948e24c",
					"nextId": "601a156eb0f5e32def4d6469",
					"id": "5ff88610e7b840f3a1b91370",
					"type": "flow"
				},
				"6028776c2818e16673da2fbe": {
					"nextId": "60499d68d008e0b9ee8494ed",
					"id": "6028776c2818e16673da2fbe",
					"type": "directive",
					"directive": "{\n  \"query\": \"UPDATE \\\"users\\\" SET (\\\"dcheckintime\\\", \\\"streak\\\") = (null, '-1') WHERE \\\"userid\\\" = $1 RETURNING \\\"checkinday\\\"\",\n  \"params\": [\"_cognitoId\"],\n  \"to\": \"res\"\n}"
				},
				"5fe9fcdf55a6159ee6d996b7": {
					"diagram_id": "604fb4537dbea8004948e252",
					"nextId": "5fe9fcef55a6159ee6d996c2",
					"id": "5fe9fcdf55a6159ee6d996b7",
					"type": "flow"
				},
				"6032cdc74e7285bfd4ca649a": {
					"nextId": "6032cdc74e7285bfd4ca649d",
					"id": "6032cdc74e7285bfd4ca649a",
					"type": "directive",
					"directive": "{\n  \"query\": [\"SELECT \\\"checkinday\\\" FROM \\\"users\\\" WHERE \\\"userid\\\" = $1;\"],\n  \"params\": [\"_cognitoId\"],\n  \"to\": \"flag\"\n}"
				},
				"5ff7680be7b840f3a1b8e035": {
					"nextId": null,
					"speak": "Okay. Goodbye!",
					"id": "5ff7680be7b840f3a1b8e035",
					"type": "speak"
				},
				"601a16eab0f5e32def4d647a": {
					"nextId": "60206eafe8d06e389ce199a7",
					"id": "601a16eab0f5e32def4d647a",
					"type": "directive",
					"directive": "{\n  \"query\": \"update\"\n}"
				},
				"604fb1fa5b79f1b1ef214579": {
					"diagram_id": "604fb4537dbea8004948e250",
					"nextId": "604fb1589ba3af75ec8b9c48",
					"id": "604fb1fa5b79f1b1ef214579",
					"type": "flow"
				},
				"5fe9ed8555a6159ee6d98fd9": {
					"nextId": "5fe9edb355a6159ee6d98ffb",
					"speak": "Welcome to the ARIC Study's Alexa Skill! With this skill, ARIC can check up on your health at times that are convenient to you. Using alexa, you will be able to make appointments, report your symptoms, and ask questions without contacting ARIC. I will start off by setting up a time to check-in on you. Then, I will begin to ask a few questions about your health. All in all, this should take about ten minutes. Lets get started. <break strength=\"x-strong\" />",
					"id": "5fe9ed8555a6159ee6d98fd9",
					"type": "speak"
				},
				"5fe9fd6c55a6159ee6d99792": {
					"nextIds": [
						"5fe9fd6c55a6159ee6d99788",
						"5fe9fd6c55a6159ee6d9978b"
					],
					"id": "5fe9fd6c55a6159ee6d99792",
					"noMatches": [
						"Hmm... I didn't understand that. I was looking for an answer of yes or no.",
						"Hmm. I still did not get that. If you would like to hear my question again, please say, \"Could you repeat that?\" Otherwise, please answer with yes or no."
					],
					"type": "interaction",
					"randomize": false,
					"interactions": [
						{
							"intent": "AMAZON.YesIntent",
							"mappings": []
						},
						{
							"intent": "AMAZON.NoIntent",
							"mappings": []
						}
					]
				},
				"5ff3f35fda27927c0bb382b7": {
					"diagram_id": "604fb4537dbea8004948e24b",
					"nextId": "5fe9f69d55a6159ee6d993e6",
					"id": "5ff3f35fda27927c0bb382b7",
					"type": "flow"
				},
				"6041313d4aa5dd22c250a787": {
					"nextIds": [],
					"id": "6041313d4aa5dd22c250a787",
					"noMatches": [],
					"type": "interaction",
					"randomize": false,
					"interactions": []
				},
				"5ff8a78a393d3fb0af48761c": {
					"nextIds": [
						"5ff88610e7b840f3a1b91370"
					],
					"id": "5ff8a78a393d3fb0af48761c",
					"type": "if",
					"elseId": "601a156eb0f5e32def4d6469",
					"expressions": [
						"v['flag']"
					]
				},
				"5ff8a4e6393d3fb0af48702d": {
					"success_id": "5ff8a78a393d3fb0af48761c",
					"id": "5ff8a4e6393d3fb0af48702d",
					"code": "// flag = 0\n\n// //today's date\n// dateCheck = new Date();\n// //subtract two weeks\n// dateCheck.setDate(dateCheck.getDate()-14);\n\n// //get either answer 2 or answer 3 (whichever one is not null)\n// dateContract = questionnaire[\"newDiagnosis\"][2].value\n// if(!dateContract){\n//   dateContract = questionnaire[\"newDiagnosis\"][3].value\n// }\n// dateContract = new Date(dateContract);\n// if(dateContract < dateCheck){\n//   flag = 1\n// }\nflag = 1",
					"type": "code",
					"fail_id": "5ff8a78a393d3fb0af48761c"
				},
				"5ff8a4e6393d3fb0af48702a": {
					"diagram_id": "604fb4537dbea8004948e25b",
					"nextId": "5ff8a4e6393d3fb0af48702d",
					"id": "5ff8a4e6393d3fb0af48702a",
					"type": "flow"
				},
				"604f11c89ba3af75ec8b8ad6": {
					"nextId": null,
					"speak": "Got it! Your reminders have been cleared.",
					"id": "604f11c89ba3af75ec8b8ad6",
					"type": "speak"
				},
				"6028770e2818e16673da2dde": {
					"nextIds": [
						"5ff73232b187aa94d2180b18"
					],
					"id": "6028770e2818e16673da2dde",
					"type": "if",
					"elseId": "5fe9f52a55a6159ee6d9927c",
					"expressions": [
						"(!v['mFlag'])"
					]
				},
				"6041313a4aa5dd22c250a77f": {
					"nextIds": [],
					"id": "6041313a4aa5dd22c250a77f",
					"noMatches": [],
					"type": "interaction",
					"randomize": false,
					"interactions": []
				},
				"5fe9f7b855a6159ee6d99543": {
					"diagram_id": "604fb4537dbea8004948e25b",
					"nextId": "5fe9f81c55a6159ee6d995ef",
					"id": "5fe9f7b855a6159ee6d99543",
					"type": "flow"
				},
				"5fe9f61e55a6159ee6d993bf": {
					"nextId": "5fe9f61e55a6159ee6d993c2",
					"speak": "Is it okay if I ask you a few questions about your health? ",
					"id": "5fe9f61e55a6159ee6d993bf",
					"type": "speak"
				},
				"5fe9f29955a6159ee6d9919e": {
					"diagram_id": "604fb4537dbea8004948e24d",
					"nextId": null,
					"id": "5fe9f29955a6159ee6d9919e",
					"type": "flow"
				},
				"5fe9f83b55a6159ee6d995f9": {
					"success_id": "601a1539b0f5e32def4d6460",
					"id": "5fe9f83b55a6159ee6d995f9",
					"code": "//Logging/Handling COVID Information",
					"type": "code",
					"fail_id": "601a1539b0f5e32def4d6460"
				},
				"5fe9fd6c55a6159ee6d99788": {
					"diagram_id": "604fb4537dbea8004948e255",
					"nextId": "5fe9fd6c55a6159ee6d9978b",
					"id": "5fe9fd6c55a6159ee6d99788",
					"type": "flow"
				},
				"604fb1e15b79f1b1ef21456d": {
					"nextId": "604fb1995b79f1b1ef214102",
					"id": "604fb1e15b79f1b1ef21456d",
					"type": "directive",
					"directive": "{\n  \"query\": \"INSERT INTO \\\"contactalerts\\\" (\\\"checkinid\\\",\\\"type\\\") VALUES ($1,'Refused daily checkin.')\",\n  \"params\": [\"_checkinId\"]\n}"
				},
				"5fe9f51c55a6159ee6d99272": {
					"nextId": "604faa379ba3af75ec8b9379",
					"speak": "Thanks so much for taking the time to answer these questions. It seems like you haven’t had COVID-19 symptoms for a while. That’s great news. We will continue our weekly check-ins. Would you like to be reminded before your checkins?<break strength=\"x-strong\" />",
					"id": "5fe9f51c55a6159ee6d99272",
					"type": "speak"
				},
				"601a1650b0f5e32def4d6473": {
					"nextId": "5fe9fd6c55a6159ee6d9978f",
					"id": "601a1650b0f5e32def4d6473",
					"type": "directive",
					"directive": "{\n  \"query\": \"update\"\n}"
				},
				"6049aaf1985392d18145282e": {
					"nextId": "6049aaf1985392d181452831",
					"id": "6049aaf1985392d18145282e",
					"type": "directive",
					"directive": "{\n  \"type\": \"Connections.StartConnection\",\n  \"uri\": \"connection://AMAZON.VerifyPerson/2\",\n  \"input\": {\n     \"requestedAuthenticationConfidenceLevel\": {\n        \"level\": 400,\n        \"customPolicy\": {\n           \"policyName\": \"VOICE_PIN\"\n        }            \n     }\n  },\n  \"token\": \"d\"\n}"
				},
				"60206f4be8d06e389ce199b2": {
					"nextIds": [
						"5fe9ef5a55a6159ee6d9910f"
					],
					"id": "60206f4be8d06e389ce199b2",
					"type": "if",
					"elseId": "5fe9f61e55a6159ee6d993bf",
					"expressions": [
						"(!(!v['flag']))"
					]
				},
				"601a1539b0f5e32def4d6460": {
					"nextId": "60288156df1a1c3ef52a276a",
					"id": "601a1539b0f5e32def4d6460",
					"type": "directive",
					"directive": "{\n  \"query\": \"update\"\n}"
				},
				"6049ab5f985392d18145283b": {
					"success_id": "604f11c89ba3af75ec8b8ad6",
					"id": "6049ab5f985392d18145283b",
					"type": "reminder",
					"reminder": {
						"date": "delete",
						"text": "delete",
						"time": {
							"h": "0",
							"m": "0",
							"s": "0"
						},
						"type": "SCHEDULED_ABSOLUTE",
						"timezone": "User Timezone"
					},
					"fail_id": "604fb1995b79f1b1ef2140ff"
				}
			}
		},
		"604fb4537dbea8004948e250": {
			"variables": [],
			"startId": "5ff767c9e7b840f3a1b8ddc4",
			"commands": [],
			"id": "604fb4537dbea8004948e250",
			"skill_id": "604fb4535e10aa001b8f200e",
			"lines": {
				"601227f425343e75f7bedc4d": {
					"nextId": "60124e5725343e75f7beddec",
					"speak": "Please set up account linking. I have sent a card to your alexa app.",
					"id": "601227f425343e75f7bedc4d",
					"type": "speak"
				},
				"60124e5725343e75f7beddec": {
					"type": "exit",
					"end": true,
					"id": "60124e5725343e75f7beddec"
				},
				"60121f1c25343e75f7bedc34": {
					"success_id": "60204675f2915457a5b09e50",
					"id": "60121f1c25343e75f7bedc34",
					"type": "user_info",
					"permissions": [
						{
							"map_to": {
								"value": "alinking"
							},
							"product": {},
							"selected": {
								"value": "UNOFFICIAL::account_linking"
							}
						}
					],
					"fail_id": "60121fa525343e75f7bedc41"
				},
				"6020407cf2915457a5b099a3": {
					"nextId": "601cbb582df5563b280f6df8",
					"id": "6020407cf2915457a5b099a3",
					"type": "directive",
					"directive": "{\n  \"query\": [\"SELECT \\\"userid\\\" FROM \\\"users\\\" WHERE \\\"username\\\" = $1\"],\n  \"params\": [\"_userInfo\"],\n  \"to\": \"cognitoId\"\n}"
				},
				"603601079ebf9102df39ec45": {
					"nextIds": [
						"603601569ebf9102df39ec5f"
					],
					"id": "603601079ebf9102df39ec45",
					"type": "if",
					"elseId": "603601299ebf9102df39ec4e",
					"expressions": [
						"(!v['cognitoId'])"
					]
				},
				"6036017c9ebf9102df39ece0": {
					"nextId": "6036018b9ebf9102df39ecf9",
					"id": "6036017c9ebf9102df39ece0",
					"type": "directive",
					"directive": "{\n  \"query\": \"INSERT INTO \\\"contactalerts\\\" (\\\"checkinid\\\",\\\"type\\\") VALUES ('1','Issue linking user with database..')\",\n  \"params\": []\n}"
				},
				"60204675f2915457a5b09e50": {
					"selected_action": "Make a GET Request",
					"success_id": "5ff767dce7b840f3a1b8defa",
					"fail_id": "6020689ee8d06e389ce19512",
					"selected_integration": "Custom API",
					"id": "60204675f2915457a5b09e50",
					"type": "integrations",
					"action_data": {
						"headers": [
							{
								"val": "Bearer {alinking}",
								"key": "Authorization"
							}
						],
						"selected_action": "Make a GET Request",
						"mapping": [
							{
								"path": "response.username",
								"var": "userInfo"
							},
							{
								"path": "response",
								"var": "res"
							}
						],
						"method": "GET",
						"body": [
							{
								"val": null,
								"key": null
							}
						],
						"params": [
							{
								"val": null,
								"key": null
							}
						],
						"url": "https://aricalexa.auth.us-east-2.amazoncognito.com/oauth2/userInfo",
						"content": null,
						"bodyInputType": "formData"
					}
				},
				"601a3792b0f5e32def4d660a": {
					"nextId": "603600d29ebf9102df39ec3b",
					"id": "601a3792b0f5e32def4d660a",
					"type": "directive",
					"directive": "{\n  \"query\": [\"INSERT INTO \\\"checkin\\\" (userid) VALUES ($1) RETURNING \\\"checkinid\\\"\"],\n  \"params\": [\"_cognitoId\"],\n  \"to\": \"checkinId\"\n}"
				},
				"603600d29ebf9102df39ec3b": {
					"success_id": "603601079ebf9102df39ec45",
					"id": "603600d29ebf9102df39ec3b",
					"code": "if(!lastInteraction){\n  lastInteraction = \"the phone\"\n}",
					"type": "code",
					"fail_id": "603601079ebf9102df39ec45"
				},
				"603601569ebf9102df39ec5f": {
					"nextId": "6036017c9ebf9102df39ece0",
					"speak": "There was a problem connecting to your account. ARIC will take a look to see what the issue is.",
					"id": "603601569ebf9102df39ec5f",
					"type": "speak"
				},
				"5ff767dce7b840f3a1b8defa": {
					"success_id": "6020407cf2915457a5b099a3",
					"id": "5ff767dce7b840f3a1b8defa",
					"code": "mFlag = false;\ncognitoId = 0;\ncheckinId = 0;\nlastInteraction = 0;\ndeviceId = _system.device.deviceId;\napiAccessToken = _system.apiAccessToken;\napiEndpoint = _system.apiEndpoint;\nquestionnaire = {\n  \"vaccination\": {\n    \"1\": {\n      \"databaseName\": \"\",\n      \"text\": \"Since the last time we spoke, have you received a vaccine against COVID-19?\",\n      \"responseType\": \"Binary\",\n      \"condition\": \"\",\n      \"reproOne\": \"If you were vaccinated against COVID-19, please say, 'yes'\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'yes' or 'no'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't understand that. Since the last time we spoke, have you received a vaccine against COVID-19?\",\n      \"value\": null\n    },\n    \"2\": {\n      \"databaseName\": \"type\",\n      \"text\": \"Vaccines available now are made by Pfizer/BioNTech, Moderna, and Johnson and Johnson. Do you know which type of vaccine you got? If you don’t know, just say “I don’t know.”\",\n      \"responseType\": \"VaccineType\",\n      \"condition\": \"[1]\",\n      \"reproOne\": \"Please let me know if you recieved the Pfizer, Moderna, or Johnson and Johnson vaccine\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'Pfiezer', 'Moderna', 'Johnson and Johnson', or 'I don't know'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. Did you recieve a vaccine from Pfizer, Moderna, or Johnson and Johnson?\",\n      \"value\": null\n    },\n    \"3\": {\n      \"databaseName\": \"seconddose\",\n      \"text\": \"As of today, have you gotten your second dose?\",\n      \"responseType\": \"Binary\",\n      \"condition\": \"[1]\",\n      \"reproOne\": \"If you recieved two shots, please say, 'yes'\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'yes' or 'no'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. As of today, have you gotten your second dose?\",\n      \"value\": null\n    },\n    \"modified\": false\n  },\n  \"diagnosis\": {\n    \"1\": {\n      \"databaseName\": \"testedpositive\",\n      \"text\": \"Have you tested positive?\",\n      \"responseType\": \"Binary\",\n      \"condition\": \"\",\n      \"reproOne\": \"Say 'yes' if you recieved a positive COVID test diagnosis.\",\n      \"reproTwo\": \"Hmm. I didn't get that. Please let me know if you tested positive.\",\n      \"reproThree\": \"Hmm. I still didn't get that. Please let me know if you tested positive.\",\n      \"value\": null\n    },\n    \"2\": {\n      \"databaseName\": \"positivedate\",\n      \"text\": \"When did you test positive?\",\n      \"responseType\": \"Date\",\n      \"condition\": \"[1]\",\n      \"reproOne\": \"Please let me know when you tested positive for COVID. You can say 'last week' or a specific date, like 'March 13, 2021'\",\n      \"reproTwo\": \"I'm sorry, I was looking for a date. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. When did you test positive?\",\n      \"value\": null\n    },\n    \"3\": {\n      \"databaseName\": \"positivedate\",\n      \"text\": \"When do you think you got COVID-19?\",\n      \"responseType\": \"Date\",\n      \"condition\": \"![1]\",\n      \"reproOne\": \"Please let me know when you think you got COVID. You can say 'last week' or a specific date, like 'March 13, 2021'\",\n      \"reproTwo\": \"I'm sorry, I was looking for a date. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. When do you think you got COVID-19?\",\n      \"value\": null\n    },\n    \"4\": {\n      \"databaseName\": \"symptomatic\",\n      \"text\": \"Did you exhibit any symptoms of COVID-19 at any time?\",\n      \"responseType\": \"Binary\",\n      \"condition\": \"\",\n      \"reproOne\": \"If you had any symptoms you think may have been related to COVID-19 in the past two weeks, please say, 'yes'\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'yes' or 'no'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. In the past two weeks, did you have any symptoms that you think were related to COVID-19?\",\n      \"value\": null\n    },\n    \"5\": {\n      \"databaseName\": \"f\",\n      \"text\": \"I’m going to ask if you had some symptoms that have been linked to COVID-19 in the past two weeks. Please respond with yes or no for each one. Fever?\",\n      \"responseType\": \"Binary\",\n      \"condition\": \"[4]\",\n      \"reproOne\": \"If you have had a fever, please say, 'yes'\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'yes' or 'no'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. Did you have a fever since we last spoke?\",\n      \"value\": null\n    },\n    \"6\": {\n      \"databaseName\": \"sb\",\n      \"text\": \"Shortness of breath?\",\n      \"responseType\": \"Binary\",\n      \"condition\": \"[4]\",\n      \"reproOne\": \"If you have had shortness of breath, please say, 'yes'\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'yes' or 'no'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. Did you have a cough since we last spoke?\",\n      \"value\": null\n    },\n    \"7\": {\n      \"databaseName\": \"co\",\n      \"text\": \"Cough?\",\n      \"responseType\": \"Binary\",\n      \"condition\": \"[4]\",\n      \"reproOne\": \"If you have had a cough, please say, 'yes'\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'yes' or 'no'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. Did you have shortness of breath since we last spoke?\",\n      \"value\": null\n    },\n    \"8\": {\n      \"databaseName\": \"dp\",\n      \"text\": \"Digestive problems?\",\n      \"responseType\": \"Binary\",\n      \"condition\": \"[4]\",\n      \"reproOne\": \"If you have had digestive problems, please say, 'yes'\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'yes' or 'no'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. Did you have digestive problems since we last spoke?\",\n      \"value\": null\n    },\n    \"9\": {\n      \"databaseName\": \"h\",\n      \"text\": \"Headache?\",\n      \"responseType\": \"Binary\",\n      \"condition\": \"[4]\",\n      \"reproOne\": \"If you have had a headache, please say, 'yes'\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'yes' or 'no'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. Did you have a headache since we last spoke?\",\n      \"value\": null\n    },\n    \"10\": {\n      \"databaseName\": \"ba\",\n      \"text\": \"Body aches?\",\n      \"responseType\": \"Binary\",\n      \"condition\": \"[4]\",\n      \"reproOne\": \"If you have had body aches, please say, 'yes'\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'yes' or 'no'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. Did you have body aches since we last spoke?\",\n      \"value\": null\n    },\n    \"11\": {\n      \"databaseName\": \"cp\",\n      \"text\": \"Chest pain?\",\n      \"responseType\": \"Binary\",\n      \"condition\": \"[4]\",\n      \"reproOne\": \"If you have had chest pain, please say, 'yes'\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'yes' or 'no'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. Did you have chest pain since we last spoke?\",\n      \"value\": null\n    },\n    \"12\": {\n      \"databaseName\": \"fa\",\n      \"text\": \"Fatigue?\",\n      \"responseType\": \"Binary\",\n      \"condition\": \"[4]\",\n      \"reproOne\": \"If you have been fatigued, please say, 'yes'\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'yes' or 'no'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. Did you have fatigue since we last spoke?\",\n      \"value\": null\n    },\n    \"13\": {\n      \"databaseName\": \"tpa\",\n      \"text\": \"Trouble paying attention?\",\n      \"responseType\": \"Binary\",\n      \"condition\": \"[4]\",\n      \"reproOne\": \"If you have had trouble paying attention, please say, 'yes'\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'yes' or 'no'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. Did you have trouble paying attention since we last spoke?\",\n      \"value\": null\n    },\n    \"14\": {\n      \"databaseName\": \"cn\",\n      \"text\": \"Confusion?\",\n      \"responseType\": \"Binary\",\n      \"condition\": \"[4]\",\n      \"reproOne\": \"If you have felt confused, please say, 'yes'\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'yes' or 'no'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. Did you have confusion since we last spoke?\",\n      \"value\": null\n    },\n    \"15\": {\n      \"databaseName\": \"lf\",\n      \"text\": \"Lightheadedness or fainting?\",\n      \"responseType\": \"Binary\",\n      \"condition\": \"[4]\",\n      \"reproOne\": \"If you have been lightheaded or have fainted, please say, 'yes'\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'yes' or 'no'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. Did you have lightheadedness or fainting since we last spoke?\",\n      \"value\": null\n    },\n    \"16\": {\n      \"databaseName\": \"rhr\",\n      \"text\": \"Racing heart rate?\",\n      \"responseType\": \"Binary\",\n      \"condition\": \"[4]\",\n      \"reproOne\": \"If you have had a racing heart rate, please say, 'yes'\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'yes' or 'no'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. Did you have a racing heart rate since we last spoke?\",\n      \"value\": null\n    },\n    \"17\": {\n      \"databaseName\": \"ts\",\n      \"text\": \"Trouble sleeping?\",\n      \"responseType\": \"Binary\",\n      \"condition\": \"[4]\",\n      \"reproOne\": \"If you have had trouble sleeping, please say, 'yes'\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'yes' or 'no'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. Did you have trouble sleeping since we last spoke?\",\n      \"value\": null\n    },\n    \"18\": {\n      \"databaseName\": \"te\",\n      \"text\": \"Trouble doing your usual level of exercise and exertion?\",\n      \"responseType\": \"Binary\",\n      \"condition\": \"[4]\",\n      \"reproOne\": \"If you have had trouble doing your usual level of exercise and exersion, please say, 'yes'\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'yes' or 'no'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. Did you have trouble doing your usual level of exercise and exertion since we last spoke?\",\n      \"value\": null\n    },\n    \"19\": {\n      \"databaseName\": \"o\",\n      \"text\": \"If you are having any other symptoms that you would like to share, please contact ARIC. \",\n      \"responseType\": \"Open\",\n      \"condition\": \"[4]\",\n      \"reproOne\": \"\",\n      \"reproTwo\": \"\",\n      \"reproThree\": \"\",\n      \"value\": null\n    },\n    \"20\": {\n      \"databaseName\": \"hospitalized\",\n      \"text\": \"Have you been hospitalized or been seen in the Emergency Room because of COVID-19?\",\n      \"responseType\": \"Binary\",\n      \"condition\": \"\",\n      \"reproOne\": \"If you were hospitalized or seen in the Emergency Room, please say, 'yes'\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'yes' or 'no'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. Have you been hospitalized or been seen in the Emergency Room because of COVID-19?\",\n      \"value\": null\n    },\n    \"21\": {\n      \"databaseName\": \"\",\n      \"text\": \"I'm sorry to hear that. ARIC will contact you to talk about your experience.\",\n      \"responseType\": \"None\",\n      \"condition\": \"[20]\",\n      \"reproOne\": \"\",\n      \"reproTwo\": \"\",\n      \"reproThree\": \"\",\n      \"value\": null\n    },\n    \"22\": {\n      \"databaseName\": \"\",\n      \"text\": \"Thats good to hear. \",\n      \"responseType\": \"None\",\n      \"condition\": \"![20]\",\n      \"reproOne\": \"\",\n      \"reproTwo\": \"\",\n      \"reproThree\": \"\",\n      \"value\": null\n    },\n    \"modified\": false\n  },\n  \"symptoms\": {\n    \"1\": {\n      \"databaseName\": \"symptomatic\",\n      \"text\": \"Today, are you having any symptoms that you think are related to COVID-19?\",\n      \"responseType\": \"Binary\",\n      \"condition\": \"\",\n      \"reproOne\": \"If you have symptoms you think may be related to COVID-19, please say, 'yes'\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'yes' or 'no'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. Today, are you having any symptoms that you think are related to COVID-19?\",\n      \"value\": null\n    },\n    \"2\": {\n      \"databaseName\": \"\",\n      \"text\": \"That's great news. \",\n      \"responseType\": \"None\",\n      \"condition\": \"![1]\",\n      \"reproOne\": \"None\",\n      \"reproTwo\": \"None\",\n      \"reproThree\": \"None\",\n      \"value\": null\n    },\n    \"3\": {\n      \"databaseName\": \"f\",\n      \"text\": \"I’m going to ask if you had some symptoms that have been linked to COVID-19 since we last spoke. Please respond with yes or no for each one. Fever?\",\n      \"responseType\": \"Binary\",\n      \"condition\": \"[1]\",\n      \"reproOne\": \"If you have had a fever, please say, 'yes'\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'yes' or 'no'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. Did you have a fever since we last spoke?\",\n      \"value\": null\n    },\n    \"4\": {\n      \"databaseName\": \"sb\",\n      \"text\": \"Shortness of breath?\",\n      \"responseType\": \"Binary\",\n      \"condition\": \"[1]\",\n      \"reproOne\": \"If you have had shortness of breath, please say, 'yes'\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'yes' or 'no'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. Did you have a cough since we last spoke?\",\n      \"value\": null\n    },\n    \"5\": {\n      \"databaseName\": \"co\",\n      \"text\": \"Cough?\",\n      \"responseType\": \"Binary\",\n      \"condition\": \"[1]\",\n      \"reproOne\": \"If you have had a cough, please say, 'yes'\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'yes' or 'no'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. Did you have shortness of breath since we last spoke?\",\n      \"value\": null\n    },\n    \"6\": {\n      \"databaseName\": \"dp\",\n      \"text\": \"Digestive problems?\",\n      \"responseType\": \"Binary\",\n      \"condition\": \"[1]\",\n      \"reproOne\": \"If you have had digestive problems, please say, 'yes'\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'yes' or 'no'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. Did you have digestive problems since we last spoke?\",\n      \"value\": null\n    },\n    \"7\": {\n      \"databaseName\": \"h\",\n      \"text\": \"Headache?\",\n      \"responseType\": \"Binary\",\n      \"condition\": \"[1]\",\n      \"reproOne\": \"If you have had a headache, please say, 'yes'\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'yes' or 'no'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. Did you have a headache since we last spoke?\",\n      \"value\": null\n    },\n    \"8\": {\n      \"databaseName\": \"ba\",\n      \"text\": \"Body aches?\",\n      \"responseType\": \"Binary\",\n      \"condition\": \"[1]\",\n      \"reproOne\": \"If you have had body aches, please say, 'yes'\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'yes' or 'no'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. Did you have body aches since we last spoke?\",\n      \"value\": null\n    },\n    \"9\": {\n      \"databaseName\": \"cp\",\n      \"text\": \"Chest pain?\",\n      \"responseType\": \"Binary\",\n      \"condition\": \"[1]\",\n      \"reproOne\": \"If you have had chest pain, please say, 'yes'\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'yes' or 'no'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. Did you have chest pain since we last spoke?\",\n      \"value\": null\n    },\n    \"10\": {\n      \"databaseName\": \"fa\",\n      \"text\": \"Fatigue?\",\n      \"responseType\": \"Binary\",\n      \"condition\": \"[1]\",\n      \"reproOne\": \"If you have been fatigued, please say, 'yes'\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'yes' or 'no'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. Did you have fatigue since we last spoke?\",\n      \"value\": null\n    },\n    \"11\": {\n      \"databaseName\": \"tpa\",\n      \"text\": \"Trouble paying attention?\",\n      \"responseType\": \"Binary\",\n      \"condition\": \"[1]\",\n      \"reproOne\": \"If you have had trouble paying attention, please say, 'yes'\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'yes' or 'no'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. Did you have trouble paying attention since we last spoke?\",\n      \"value\": null\n    },\n    \"12\": {\n      \"databaseName\": \"cn\",\n      \"text\": \"Confusion?\",\n      \"responseType\": \"Binary\",\n      \"condition\": \"[1]\",\n      \"reproOne\": \"If you have felt confused, please say, 'yes'\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'yes' or 'no'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. Did you have confusion since we last spoke?\",\n      \"value\": null\n    },\n    \"13\": {\n      \"databaseName\": \"lf\",\n      \"text\": \"Lightheadedness or fainting?\",\n      \"responseType\": \"Binary\",\n      \"condition\": \"[1]\",\n      \"reproOne\": \"If you have been lightheaded or have fainted, please say, 'yes'\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'yes' or 'no'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. Did you have lightheadedness or fainting since we last spoke?\",\n      \"value\": null\n    },\n    \"14\": {\n      \"databaseName\": \"rhr\",\n      \"text\": \"Racing heart rate?\",\n      \"responseType\": \"Binary\",\n      \"condition\": \"[1]\",\n      \"reproOne\": \"If you have had a racing heart rate, please say, 'yes'\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'yes' or 'no'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. Did you have a racing heart rate since we last spoke?\",\n      \"value\": null\n    },\n    \"15\": {\n      \"databaseName\": \"ts\",\n      \"text\": \"Trouble sleeping?\",\n      \"responseType\": \"Binary\",\n      \"condition\": \"[1]\",\n      \"reproOne\": \"If you have had trouble sleeping, please say, 'yes'\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'yes' or 'no'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. Did you have trouble sleeping since we last spoke?\",\n      \"value\": null\n    },\n    \"16\": {\n      \"databaseName\": \"te\",\n      \"text\": \"Trouble doing your usual level of exercise and exertion?\",\n      \"responseType\": \"Binary\",\n      \"condition\": \"[1]\",\n      \"reproOne\": \"If you have had trouble doing your usual level of exercise and exersion, please say, 'yes'\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'yes' or 'no'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. Did you have trouble doing your usual level of exercise and exertion since we last spoke?\",\n      \"value\": null\n    },\n    \"17\": {\n      \"databaseName\": \"o\",\n      \"text\": \"If you are having any other symptoms that you would like to share, please contact ARIC. \",\n      \"responseType\": \"Open\",\n      \"condition\": \"[1]\",\n      \"reproOne\": \"None\",\n      \"reproTwo\": \"None\",\n      \"reproThree\": \"None\",\n      \"value\": null\n    },\n    \"18\": {\n      \"databaseName\": \"lc\",\n      \"text\": \"Some people have been reporting prolonged symptoms after COVID-infection, or what some are calling “long COVID.” Do you think you have “long COVID”?\",\n      \"responseType\": \"Binary\",\n      \"condition\": \"\",\n      \"reproOne\": \"If you think you have long COVID, please say, 'yes'\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'yes' or 'no'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. Some people have been reporting prolonged symptoms after COVID-infection, or what some are calling “long COVID.” Do you think you have “long COVID”?\",\n      \"value\": null\n    },\n    \"19\": {\n      \"databaseName\": \"lt\",\n      \"text\": \"On a scale of 1 to 10, where 1 is not worried and 10 is very worried, how concerned are you that COVID-19 might affect your health in the long-term?\",\n      \"responseType\": \"Numeric\",\n      \"condition\": \"\",\n      \"reproOne\": \"If you are moderately worried about how COVID will affect your health in the long-term, please say, 5\",\n      \"reproTwo\": \"I'm sorry, I was looking for a number from one to ten. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. On a scale of 1 to 10, where 1 is not worried and 10 is very worried, how concerned are you that COVID-19 might affect your health in the long-term?\",\n      \"value\": null\n    },\n    \"20\": {\n      \"databaseName\": \"lto\",\n      \"text\": \"If you would like to speak to someone about these concerns, please contact ARIC. \",\n      \"responseType\": \"Open\",\n      \"condition\": \"[19] > 5\",\n      \"reproOne\": \"None\",\n      \"reproTwo\": \"None\",\n      \"reproThree\": \"None\",\n      \"value\": null\n    },\n    \"modified\": false\n  },\n  \"health\": {\n    \"1\": {\n      \"databaseName\": \"f\",\n      \"text\": \"Now, I’m going to ask some questions about your general health. I’m going to list several symptoms, please respond yes or no for each one. Since we last spoke, have you had a fever?\",\n      \"responseType\": \"Binary\",\n      \"condition\": \"\",\n      \"reproOne\": \"If you have had a fever, please say, 'yes'\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'yes' or 'no'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. Did you have a fever since we last spoke?\",\n      \"value\": null\n    },\n    \"2\": {\n      \"databaseName\": \"ft\",\n      \"text\": \"Is this better, worse, or the same as your usual state of health?\",\n      \"responseType\": \"Triage\",\n      \"condition\": \"[1]\",\n      \"reproOne\": \"If this is worse than your regular state of health, please say, 'worse'. If you do not know, say 'I don't know'.\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'better', 'worse', or 'the same'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. Is this better, worse, or the same as your usual state of health?\",\n      \"value\": null\n    },\n    \"3\": {\n      \"databaseName\": \"sb\",\n      \"text\": \"Have you had shortness of breath?\",\n      \"responseType\": \"Binary\",\n      \"condition\": \"\",\n      \"reproOne\": \"If you have had shortness of breath, please say, 'yes'\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'yes' or 'no'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. Did you have shortness of breath since we last spoke?\",\n      \"value\": null\n    },\n    \"4\": {\n      \"databaseName\": \"sbt\",\n      \"text\": \"Is this better, worse, or the same as your usual state of health?\",\n      \"responseType\": \"Triage\",\n      \"condition\": \"[3]\",\n      \"reproOne\": \"If this is worse than your regular state of health, please say, 'worse'. If you do not know, say 'I don't know'.\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'better', 'worse', or 'the same'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. Is this better, worse, or the same as your usual state of health?\",\n      \"value\": null\n    },\n    \"5\": {\n      \"databaseName\": \"co\",\n      \"text\": \"Cough?\",\n      \"responseType\": \"Binary\",\n      \"condition\": \"\",\n      \"reproOne\": \"If you have had a cough, please say, 'yes'\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'yes' or 'no'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. Did you have a cough since we last spoke?\",\n      \"value\": null\n    },\n    \"6\": {\n      \"databaseName\": \"cot\",\n      \"text\": \"Is this better, worse, or the same as your usual state of health?\",\n      \"responseType\": \"Triage\",\n      \"condition\": \"[5]\",\n      \"reproOne\": \"If this is worse than your regular state of health, please say, 'worse'. If you do not know, say 'I don't know'.\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'better', 'worse', or 'the same'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. Is this better, worse, or the same as your usual state of health?\",\n      \"value\": null\n    },\n    \"7\": {\n      \"databaseName\": \"dp\",\n      \"text\": \"Digestive problems?\",\n      \"responseType\": \"Binary\",\n      \"condition\": \"\",\n      \"reproOne\": \"If you have had digestive problems, please say, 'yes'\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'yes' or 'no'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. Did you have digestive problems since we last spoke?\",\n      \"value\": null\n    },\n    \"8\": {\n      \"databaseName\": \"dpt\",\n      \"text\": \"Is this better, worse, or the same as your usual state of health?\",\n      \"responseType\": \"Triage\",\n      \"condition\": \"[7]\",\n      \"reproOne\": \"If this is worse than your regular state of health, please say, 'worse'. If you do not know, say 'I don't know'.\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'better', 'worse', or 'the same'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. Is this better, worse, or the same as your usual state of health?\",\n      \"value\": null\n    },\n    \"9\": {\n      \"databaseName\": \"h\",\n      \"text\": \"Headache?\",\n      \"responseType\": \"Binary\",\n      \"condition\": \"\",\n      \"reproOne\": \"If you have had a headache, please say, 'yes'\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'yes' or 'no'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. Did you have a headache since we last spoke?\",\n      \"value\": null\n    },\n    \"10\": {\n      \"databaseName\": \"ht\",\n      \"text\": \"Is this better, worse, or the same as your usual state of health?\",\n      \"responseType\": \"Triage\",\n      \"condition\": \"[9]\",\n      \"reproOne\": \"If this is worse than your regular state of health, please say, 'worse'. If you do not know, say 'I don't know'.\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'better', 'worse', or 'the same'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. Is this better, worse, or the same as your usual state of health?\",\n      \"value\": null\n    },\n    \"11\": {\n      \"databaseName\": \"ba\",\n      \"text\": \"Body aches?\",\n      \"responseType\": \"Binary\",\n      \"condition\": \"\",\n      \"reproOne\": \"If you have had body aches, please say, 'yes'\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'yes' or 'no'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. Did you have body aches since we last spoke?\",\n      \"value\": null\n    },\n    \"12\": {\n      \"databaseName\": \"bat\",\n      \"text\": \"Is this better, worse, or the same as your usual state of health?\",\n      \"responseType\": \"Triage\",\n      \"condition\": \"[11]\",\n      \"reproOne\": \"If this is worse than your regular state of health, please say, 'worse'. If you do not know, say 'I don't know'.\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'better', 'worse', or 'the same'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. Is this better, worse, or the same as your usual state of health?\",\n      \"value\": null\n    },\n    \"13\": {\n      \"databaseName\": \"cp\",\n      \"text\": \"Chest pain?\",\n      \"responseType\": \"Binary\",\n      \"condition\": \"\",\n      \"reproOne\": \"If you have had chest pain, please say, 'yes'\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'yes' or 'no'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. Did you have chest pain since we last spoke?\",\n      \"value\": null\n    },\n    \"14\": {\n      \"databaseName\": \"cpt\",\n      \"text\": \"Is this better, worse, or the same as your usual state of health?\",\n      \"responseType\": \"Triage\",\n      \"condition\": \"[13]\",\n      \"reproOne\": \"If this is worse than your regular state of health, please say, 'worse'. If you do not know, say 'I don't know'.\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'better', 'worse', or 'the same'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. Is this better, worse, or the same as your usual state of health?\",\n      \"value\": null\n    },\n    \"15\": {\n      \"databaseName\": \"fa\",\n      \"text\": \"Fatigue?\",\n      \"responseType\": \"Binary\",\n      \"condition\": \"\",\n      \"reproOne\": \"If you have been fatigued, please say, 'yes'\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'yes' or 'no'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. Did you have fatigue since we last spoke?\",\n      \"value\": null\n    },\n    \"16\": {\n      \"databaseName\": \"fat\",\n      \"text\": \"Is this better, worse, or the same as your usual state of health?\",\n      \"responseType\": \"Triage\",\n      \"condition\": \"[15]\",\n      \"reproOne\": \"If this is worse than your regular state of health, please say, 'worse'. If you do not know, say 'I don't know'.\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'better', 'worse', or 'the same'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. Is this better, worse, or the same as your usual state of health?\",\n      \"value\": null\n    },\n    \"17\": {\n      \"databaseName\": \"tpa\",\n      \"text\": \"Trouble paying attention?\",\n      \"responseType\": \"Binary\",\n      \"condition\": \"\",\n      \"reproOne\": \"If you have had trouble paying attention, please say, 'yes'\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'yes' or 'no'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. Did you have trouble paying attention since we last spoke?\",\n      \"value\": null\n    },\n    \"18\": {\n      \"databaseName\": \"tpat\",\n      \"text\": \"Is this better, worse, or the same as your usual state of health?\",\n      \"responseType\": \"Triage\",\n      \"condition\": \"[17]\",\n      \"reproOne\": \"If this is worse than your regular state of health, please say, 'worse'. If you do not know, say 'I don't know'.\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'better', 'worse', or 'the same'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. Is this better, worse, or the same as your usual state of health?\",\n      \"value\": null\n    },\n    \"19\": {\n      \"databaseName\": \"cn\",\n      \"text\": \"Confusion?\",\n      \"responseType\": \"Binary\",\n      \"condition\": \"\",\n      \"reproOne\": \"If you have felt confused, please say, 'yes'\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'yes' or 'no'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. Did you have confusion since we last spoke?\",\n      \"value\": null\n    },\n    \"20\": {\n      \"databaseName\": \"cnt\",\n      \"text\": \"Is this better, worse, or the same as your usual state of health?\",\n      \"responseType\": \"Triage\",\n      \"condition\": \"[19]\",\n      \"reproOne\": \"If this is worse than your regular state of health, please say, 'worse'. If you do not know, say 'I don't know'.\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'better', 'worse', or 'the same'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. Is this better, worse, or the same as your usual state of health?\",\n      \"value\": null\n    },\n    \"21\": {\n      \"databaseName\": \"lf\",\n      \"text\": \"Lightheadedness or fainting?\",\n      \"responseType\": \"Binary\",\n      \"condition\": \"\",\n      \"reproOne\": \"If you have been lightheaded or have fainted, please say, 'yes'\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'yes' or 'no'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. Did you have lightheadedness or fainting since we last spoke?\",\n      \"value\": null\n    },\n    \"22\": {\n      \"databaseName\": \"lft\",\n      \"text\": \"Is this better, worse, or the same as your usual state of health?\",\n      \"responseType\": \"Triage\",\n      \"condition\": \"[21]\",\n      \"reproOne\": \"If this is worse than your regular state of health, please say, 'worse'. If you do not know, say 'I don't know'.\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'better', 'worse', or 'the same'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. Is this better, worse, or the same as your usual state of health?\",\n      \"value\": null\n    },\n    \"23\": {\n      \"databaseName\": \"rhr\",\n      \"text\": \"Racing heart rate?\",\n      \"responseType\": \"Binary\",\n      \"condition\": \"\",\n      \"reproOne\": \"If you have had a racing heart rate, please say, 'yes'\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'yes' or 'no'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. Did you have a racing heart rate since we last spoke?\",\n      \"value\": null\n    },\n    \"24\": {\n      \"databaseName\": \"rhrt\",\n      \"text\": \"Is this better, worse, or the same as your usual state of health?\",\n      \"responseType\": \"Triage\",\n      \"condition\": \"[23]\",\n      \"reproOne\": \"If this is worse than your regular state of health, please say, 'worse'. If you do not know, say 'I don't know'.\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'better', 'worse', or 'the same'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. Is this better, worse, or the same as your usual state of health?\",\n      \"value\": null\n    },\n    \"25\": {\n      \"databaseName\": \"ts\",\n      \"text\": \"Trouble sleeping?\",\n      \"responseType\": \"Binary\",\n      \"condition\": \"\",\n      \"reproOne\": \"If you have had trouble sleeping, please say, 'yes'\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'yes' or 'no'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. Did you have trouble sleeping since we last spoke?\",\n      \"value\": null\n    },\n    \"26\": {\n      \"databaseName\": \"tst\",\n      \"text\": \"Is this better, worse, or the same as your usual state of health?\",\n      \"responseType\": \"Triage\",\n      \"condition\": \"[25]\",\n      \"reproOne\": \"If this is worse than your regular state of health, please say, 'worse'. If you do not know, say 'I don't know'.\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'better', 'worse', or 'the same'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. Is this better, worse, or the same as your usual state of health?\",\n      \"value\": null\n    },\n    \"27\": {\n      \"databaseName\": \"te\",\n      \"text\": \"Trouble doing your usual level of exercise and exertion?\",\n      \"responseType\": \"Binary\",\n      \"condition\": \"\",\n      \"reproOne\": \"If you have had trouble doing your usual level of exercise and exersion, please say, 'yes'\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'yes' or 'no'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. Did you have trouble doing your usual level of exercise and exertion since we last spoke?\",\n      \"value\": null\n    },\n    \"28\": {\n      \"databaseName\": \"tet\",\n      \"text\": \"Is this better, worse, or the same as your usual state of health?\",\n      \"responseType\": \"Triage\",\n      \"condition\": \"[27]\",\n      \"reproOne\": \"If this is worse than your regular state of health, please say, 'worse'. If you do not know, say 'I don't know'.\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'better', 'worse', or 'the same'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. Is this better, worse, or the same as your usual state of health?\",\n      \"value\": null\n    },\n    \"29\": {\n      \"databaseName\": \"ob\",\n      \"text\": \"Are you having any other symptoms that are bothersome to you?\",\n      \"responseType\": \"Binary\",\n      \"condition\": \"\",\n      \"reproOne\": \"If you are having any other bothersome symptoms, please say, 'yes'\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'yes' or 'no'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. Are you having any other symptoms that are bothersome to you?\",\n      \"value\": null\n    },\n    \"30\": {\n      \"databaseName\": \"o\",\n      \"text\": \"If you would like to communicate these symptoms, please contact Aric. \",\n      \"responseType\": \"Open\",\n      \"condition\": \"[29]\",\n      \"reproOne\": \"In ten seconds or less, please describe these symptoms, or say 'None'\",\n      \"reproTwo\": \"None\",\n      \"reproThree\": \"None\",\n      \"value\": null\n    },\n    \"modified\": false\n  },\n  \"mentalhealth\": {\n    \"1\": {\n      \"databaseName\": \"b\",\n      \"text\": \"I’m going to provide a list of some ways you might have felt or behaved in the past week. Please indicate how many days you have felt this way during the past week. Please answer with a round number, between zero days in the last week and seven days in the last week. I was bothered by things that usually don’t bother me.\",\n      \"responseType\": \"Numeric\",\n      \"condition\": \"\",\n      \"reproOne\": \"Please indicate how many days in the past week you were bothered by things that usually don't bother you.\",\n      \"reproTwo\": \"I'm sorry, I was looking for a number from one to seven. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. How many days this past week were you bothered by things that usually don't bother you? \",\n      \"value\": null\n    },\n    \"2\": {\n      \"databaseName\": \"mod\",\n      \"text\": \"I had trouble keeping my mind on what I was doing.\",\n      \"responseType\": \"Numeric\",\n      \"condition\": \"\",\n      \"reproOne\": \"Please indicate how many days in the past week you had trouble keeping your mind on what you were doing.\",\n      \"reproTwo\": \"I'm sorry, I was looking for a number from one to seven. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. How many days this past week did you have trouble keeping your mind on what you were doing? \",\n      \"value\": null\n    },\n    \"3\": {\n      \"databaseName\": \"d\",\n      \"text\": \"I felt depressed.\",\n      \"responseType\": \"Numeric\",\n      \"condition\": \"\",\n      \"reproOne\": \"Please indicate how many days in the past week you had felt depressed.\",\n      \"reproTwo\": \"I'm sorry, I was looking for a number from one to seven. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. How many days this past week did you feel depressed? \",\n      \"value\": null\n    },\n    \"4\": {\n      \"databaseName\": \"e\",\n      \"text\": \"I felt that everything I did was an eﬀort.\",\n      \"responseType\": \"Numeric\",\n      \"condition\": \"\",\n      \"reproOne\": \"Please indicate how many days in the past week you felt everything you did was an effort.\",\n      \"reproTwo\": \"I'm sorry, I was looking for a number from one to seven. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. How many days this past week did you feel everything you did was an effort? \",\n      \"value\": null\n    },\n    \"5\": {\n      \"databaseName\": \"fu\",\n      \"text\": \"I felt hopeful about the future.\",\n      \"responseType\": \"Numeric\",\n      \"condition\": \"\",\n      \"reproOne\": \"Please indicate how many days in the past week you felt hopeful about the future.\",\n      \"reproTwo\": \"I'm sorry, I was looking for a number from one to seven. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. How many days this past week did you feel hopeful about the future? \",\n      \"value\": null\n    },\n    \"6\": {\n      \"databaseName\": \"fe\",\n      \"text\": \"I felt fearful.\",\n      \"responseType\": \"Numeric\",\n      \"condition\": \"\",\n      \"reproOne\": \"Please indicate how many days in the past week you felt fearful.\",\n      \"reproTwo\": \"I'm sorry, I was looking for a number from one to seven. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. How many days this past week did you feel fearful? \",\n      \"value\": null\n    },\n    \"7\": {\n      \"databaseName\": \"r\",\n      \"text\": \"My sleep was restless.\",\n      \"responseType\": \"Numeric\",\n      \"condition\": \"\",\n      \"reproOne\": \"Please indicate how many nights in the past week you felt your sleep was restless.\",\n      \"reproTwo\": \"I'm sorry, I was looking for a number from one to seven. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. How many nights this past week was your sleep restless? \",\n      \"value\": null\n    },\n    \"8\": {\n      \"databaseName\": \"h\",\n      \"text\": \"I was happy.\",\n      \"responseType\": \"Numeric\",\n      \"condition\": \"\",\n      \"reproOne\": \"Please indicate how many days in the past week you were happy.\",\n      \"reproTwo\": \"I'm sorry, I was looking for a number from one to seven. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. How many days this past week were you happy? \",\n      \"value\": null\n    },\n    \"9\": {\n      \"databaseName\": \"l\",\n      \"text\": \"I felt lonely.\",\n      \"responseType\": \"Numeric\",\n      \"condition\": \"\",\n      \"reproOne\": \"Please indicate how many days in the past week you felt lonely.\",\n      \"reproTwo\": \"I'm sorry, I was looking for a number from one to seven. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. How many days this past week did you feel lonely? \",\n      \"value\": null\n    },\n    \"10\": {\n      \"databaseName\": \"gg\",\n      \"text\": \"I could not 'get going.'\",\n      \"responseType\": \"Numeric\",\n      \"condition\": \"\",\n      \"reproOne\": \"Please indicate how many days in the past week you felt you could not 'get going'.\",\n      \"reproTwo\": \"I'm sorry, I was looking for a number from one to seven. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. How many days this past week did you feel you could not 'get going'? \",\n      \"value\": null\n    },\n    \"11\": {\n      \"databaseName\": \"ow\",\n      \"text\": \"My worries overwhelmed me\",\n      \"responseType\": \"Numeric\",\n      \"condition\": \"\",\n      \"reproOne\": \"Please indicate how many days in the past week you felt your worries overwhelmed you.\",\n      \"reproTwo\": \"I'm sorry, I was looking for a number from one to seven. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. How many days this past week did your worries overwhelm you? \",\n      \"value\": null\n    },\n    \"12\": {\n      \"databaseName\": \"u\",\n      \"text\": \"I felt uneasy\",\n      \"responseType\": \"Numeric\",\n      \"condition\": \"\",\n      \"reproOne\": \"Please indicate how many days in the past week you felt uneasy.\",\n      \"reproTwo\": \"I'm sorry, I was looking for a number from one to seven. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. How many days this past week did you feel uneasy? \",\n      \"value\": null\n    },\n    \"13\": {\n      \"databaseName\": \"a\",\n      \"text\": \"I found it hard to focus on anything other than my anxiety\",\n      \"responseType\": \"Numeric\",\n      \"condition\": \"\",\n      \"reproOne\": \"Please indicate how many days in the past week you found it hard to focus on anything other than your anxiety.\",\n      \"reproTwo\": \"I'm sorry, I was looking for a number from one to seven. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. How many days this past week did you find it haard to focus on anything other than your anxiety? \",\n      \"value\": null\n    },\n    \"14\": {\n      \"databaseName\": \"fa\",\n      \"text\": \"I felt fatigued\",\n      \"responseType\": \"Numeric\",\n      \"condition\": \"\",\n      \"reproOne\": \"Please indicate how many days in the past week you felt fatigued.\",\n      \"reproTwo\": \"I'm sorry, I was looking for a number from one to seven. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. How many days this past week did you feel fatigued? \",\n      \"value\": null\n    },\n    \"15\": {\n      \"databaseName\": \"t\",\n      \"text\": \"I had trouble starting things because I was tired\",\n      \"responseType\": \"Numeric\",\n      \"condition\": \"\",\n      \"reproOne\": \"Please indicate how many days in the past week you had trouble starting things because you were tired.\",\n      \"reproTwo\": \"I'm sorry, I was looking for a number from one to seven. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. How many days this past week did you have trouble starting things because you were tired? \",\n      \"value\": null\n    },\n    \"16\": {\n      \"databaseName\": \"ov\",\n      \"text\": \"Overall, compared to your usual mood, are you feeling worse than usual?\",\n      \"responseType\": \"Binary\",\n      \"condition\": \"\",\n      \"reproOne\": \"If your mood is worse than usual please say, 'yes'\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'yes' or 'no'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. Overall, compared to your usual mood, are you feeling worse than usual?\",\n      \"value\": null\n    },\n    \"17\": {\n      \"databaseName\": \"o\",\n      \"text\": \"Thank you. \",\n      \"responseType\": \"Open\",\n      \"condition\": \"[16]\",\n      \"reproOne\": \"\",\n      \"reproTwo\": \"\",\n      \"reproThree\": \"\",\n      \"value\": null\n    },\n    \"18\": {\n      \"databaseName\": \"contact\",\n      \"text\": \"Would you like help in finding someone to talk with you about your mood?\",\n      \"responseType\": \"Binary\",\n      \"condition\": \"\",\n      \"reproOne\": \"If you would like help in finding someone to talk with about your mood, please say, 'yes'\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'yes' or 'no'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. Would you like help in finding someone to talk with you about your mood?\",\n      \"value\": null\n    },\n    \"19\": {\n      \"databaseName\": \"\",\n      \"text\": \"OK, ARIC will contact you to discuss the options.\",\n      \"responseType\": \"None\",\n      \"condition\": \"[18]\",\n      \"reproOne\": \"\",\n      \"reproTwo\": \"\",\n      \"reproThree\": \"\",\n      \"value\": null\n    },\n    \"20\": {\n      \"databaseName\": \"\",\n      \"text\": \"OK. If you change your mind, please contact ARIC.\",\n      \"responseType\": \"None\",\n      \"condition\": \"![18]\",\n      \"reproOne\": \"\",\n      \"reproTwo\": \"\",\n      \"reproThree\": \"\",\n      \"value\": null\n    },\n    \"modified\": false\n  },\n  \"feedback\": {\n    \"1\": {\n      \"databaseName\": \"o\",\n      \"text\": \"Great! \",\n      \"responseType\": \"Open\",\n      \"condition\": \"\",\n      \"reproOne\": \"In ten seconds or less, tell me what you thought about answering health questions with Alexa, or say, 'None'\",\n      \"reproTwo\": \"\",\n      \"reproThree\": \"\",\n      \"value\": null\n    },\n    \"2\": {\n      \"databaseName\": \"t\",\n      \"text\": \"Do you think taking questionnaires with Alexa is better, worse, or the same as doing them in person\",\n      \"responseType\": \"Triage\",\n      \"condition\": \"\",\n      \"reproOne\": \"If taking questionnaires with alexa is worse than doing them in person, please say 'worse'. If you do not know, say 'I don't know'.\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'better', 'worse', or 'the same'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. Do you think taking questionnaires with Alexa is better, worse, or the same as doing them in person\",\n      \"value\": null\n    },\n    \"3\": {\n      \"databaseName\": \"n\",\n      \"text\": \"On a scale of 1 to 10, please let me know how convenient answering healthcare questions using Alexa is.\",\n      \"responseType\": \"Numeric\",\n      \"condition\": \"\",\n      \"reproOne\": \"If answering healthcare questions using alexa is moderately convenient, please say 5\",\n      \"reproTwo\": \"I'm sorry, I was looking for a number between one and ten. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. On a scale of 1 to 10, please let me know how convenient answering healthcare questions using Alexa is.\",\n      \"value\": null\n    },\n    \"4\": {\n      \"databaseName\": \"b\",\n      \"text\": \"Would you be interested in doing more questionnaires with Alexa?\",\n      \"responseType\": \"Binary\",\n      \"condition\": \"\",\n      \"reproOne\": \"If you would be interested in doing more questionnaires with Alexa, please say yes\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'yes' or 'no'. If you would like to hear the question again, say, 'repeat the question'.\",\n      \"reproThree\": \"I'm sorry, I didn't get that. Would you be interested in doing more questionnaires with Alexa?\",\n      \"value\": null\n    },\n    \"modified\": false\n  },\n  \"dailyReminder\": {\n    \"1\": {\n      \"databaseName\": \"\",\n      \"text\": \"In order to better understand how people recover from COVID-19, ARIC would like to check in with you for the next few days until you are fully recovered. Is it okay if we talk again tomorrow?\",\n      \"responseType\": \"Binary\",\n      \"condition\": \"\",\n      \"reproOne\": \"If you would be okay speaking with me tomorrow, say 'yes'. Otherwise, say 'no'\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'yes' or 'no'. If you would like to speak to ARIC about these check-ins answer 'no'\",\n      \"reproThree\": \"I'm sorry, I didn't understand that. May I speak to you again tomorrow?\",\n      \"value\": null\n    },\n    \"2\": {\n      \"databaseName\": \"\",\n      \"text\": \"What time works for your check-in tomorrow?\",\n      \"responseType\": \"Time\",\n      \"condition\": \"[1]\",\n      \"reproOne\": \"Hmm. I didn't get that. What time works for your check-in tomorrow?\",\n      \"reproTwo\": \"Hmm. I still did not get that. What time works for your check-in tomorrow?\",\n      \"reproThree\": \"What time works for your check-in tomorrow?\",\n      \"value\": null\n    },\n    \"3\": {\n      \"databaseName\": \"\",\n      \"text\": \"Lets speak at 11:00.\",\n      \"responseType\": \"None\",\n      \"condition\": \"[2] == -1\",\n      \"reproOne\": \"\",\n      \"reproTwo\": \"\",\n      \"reproThree\": \"\",\n      \"value\": null\n    },\n    \"4\": {\n      \"databaseName\": \"\",\n      \"text\": \"Would you like to be reminded before your daily check-ins?\",\n      \"responseType\": \"Binary\",\n      \"condition\": \"[1]\",\n      \"reproOne\": \"If you would like me to remind you before our check-ins, say 'yes'. Otherwise say 'no'.\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'yes' or 'no'. If you would like to reschedule to a different time, answer 'no'\",\n      \"reproThree\": \"I'm sorry, I didn't understand that. Would you like to be reminded before our check-ins?\",\n      \"value\": null\n    },\n    \"5\": {\n      \"databaseName\": \"\",\n      \"text\": \"Awesome! I'll speak to you tomorrow!\",\n      \"responseType\": \"None\",\n      \"condition\": \"[1] && [4]\",\n      \"reproOne\": \"\",\n      \"reproTwo\": \"\",\n      \"reproThree\": \"\",\n      \"value\": null\n    },\n    \"6\": {\n      \"databaseName\": \"\",\n      \"text\": \"Okay got it. I'll speak to you tomorrow!\",\n      \"responseType\": \"None\",\n      \"condition\": \"[1] && ![4]\",\n      \"reproOne\": \"\",\n      \"reproTwo\": \"\",\n      \"reproThree\": \"\",\n      \"value\": null\n    },\n    \"7\": {\n      \"databaseName\": \"\",\n      \"text\": \"OK, got it. ARIC will contact you directly to find out what would work best for you.\",\n      \"responseType\": \"None\",\n      \"condition\": \"![1]\",\n      \"reproOne\": \"\",\n      \"reproTwo\": \"\",\n      \"reproThree\": \"\",\n      \"value\": null\n    },\n    \"modified\": false\n  },\n  \"monthlyReminder\": {\n    \"1\": {\n      \"databaseName\": \"\",\n      \"text\": \"In order to better understand COVID-19, ARIC would like to check in on your health one day each week. This can be done using your alexa. May I speak to you on Fridays?\",\n      \"responseType\": \"Binary\",\n      \"condition\": \"\",\n      \"reproOne\": \"If you would be okay speaking with me on the first Friday, Saturday, and Sunday of the month, say 'yes'. Otherwise, say 'no'\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'yes' or 'no'. If you would like to speak to ARIC or reschedule to a different day, answer 'no'\",\n      \"reproThree\": \"I'm sorry, I didn't understand that. May I speak to you on the first Friday, Saturday, and Sunday of the month?\",\n      \"value\": null\n    },\n    \"2\": {\n      \"databaseName\": \"\",\n      \"text\": \"Great! If you would like to change this day, just say 'Alexa, ask ARIC Study to change my check-in day.' What time works for your check-in?\",\n      \"responseType\": \"Time\",\n      \"condition\": \"[1]\",\n      \"reproOne\": \"Hmm. I didn't get that. What time works for your check-in?\",\n      \"reproTwo\": \"Hmm. I still did not get that. What time works for your check-in?\",\n      \"reproThree\": \"What time works for your check-in?\",\n      \"value\": null\n    },\n    \"3\": {\n      \"databaseName\": \"\",\n      \"text\": \"Lets speak at 11:00.\",\n      \"responseType\": \"None\",\n      \"condition\": \"[2] == -1\",\n      \"reproOne\": \"\",\n      \"reproTwo\": \"\",\n      \"reproThree\": \"\",\n      \"value\": null\n    },\n    \"4\": {\n      \"databaseName\": \"\",\n      \"text\": \"Would you like to be reminded before your check-ins?\",\n      \"responseType\": \"Binary\",\n      \"condition\": \"[1]\",\n      \"reproOne\": \"If you would like me to remind you before our check-ins, say 'yes'. Otherwise say 'no'.\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'yes' or 'no'. If you would like to reschedule to a different time, answer 'no'\",\n      \"reproThree\": \"I'm sorry, I didn't understand that. Would you like to be reminded before our check-ins?\",\n      \"value\": null\n    },\n    \"5\": {\n      \"databaseName\": \"\",\n      \"text\": \"Great! I will speak to you then!\",\n      \"responseType\": \"None\",\n      \"condition\": \"[1] && [4]\",\n      \"reproOne\": \"\",\n      \"reproTwo\": \"\",\n      \"reproThree\": \"\",\n      \"value\": null\n    },\n    \"6\": {\n      \"databaseName\": \"\",\n      \"text\": \"Ok. Got it. I'll speak to you then!\",\n      \"responseType\": \"None\",\n      \"condition\": \"[1] && ![4]\",\n      \"reproOne\": \"\",\n      \"reproTwo\": \"\",\n      \"reproThree\": \"\",\n      \"value\": null\n    },\n    \"7\": {\n      \"databaseName\": \"\",\n      \"text\": \"Would you like to choose a different day for your check-in?\",\n      \"responseType\": \"Binary\",\n      \"condition\": \"![1]\",\n      \"reproOne\": \"If you would like to choose another day for your check-in, say 'yes'\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'yes' or 'no'. If you would like ARIC to contact you about these checkups, say 'no'\",\n      \"reproThree\": \"I'm sorry, I didn't understand that. Would you like to choose a different day for your check-in?\",\n      \"value\": null\n    },\n    \"8\": {\n      \"databaseName\": \"\",\n      \"text\": \"OK, got it. ARIC will contact you directly to find out what would work best for you. Take care and thank you for your dedication to the ARIC study.\",\n      \"responseType\": \"None\",\n      \"condition\": \"![1] && ![7]\",\n      \"reproOne\": \"\",\n      \"reproTwo\": \"\",\n      \"reproThree\": \"\",\n      \"value\": null\n    },\n    \"9\": {\n      \"databaseName\": \"\",\n      \"text\": \"What day would work for your check-in?\",\n      \"responseType\": \"Weekday\",\n      \"condition\": \"[7]\",\n      \"reproOne\": \"Hmm. I didn't get that. What day works for your check-in?\",\n      \"reproTwo\": \"Hmm. I still did not get that. What day works for your check-in?\",\n      \"reproThree\": \"What day works for your check-in?\",\n      \"value\": null\n    },\n    \"10\": {\n      \"databaseName\": \"\",\n      \"text\": \"Great! If you would like to change this day, just say 'Alexa, ask ARIC Study to change my check-in day.' What time works for your check-in?\",\n      \"responseType\": \"Time\",\n      \"condition\": \"[7]\",\n      \"reproOne\": \"Hmm. I didn't get that. What time works for your check-in?\",\n      \"reproTwo\": \"Hmm. I still did not get that. What time works for your check-in?\",\n      \"reproThree\": \"What time works for your check-in?\",\n      \"value\": null\n    },\n    \"11\": {\n      \"databaseName\": \"\",\n      \"text\": \"Lets speak at 11:00.\",\n      \"responseType\": \"None\",\n      \"condition\": \"[10] == -1\",\n      \"reproOne\": \"\",\n      \"reproTwo\": \"\",\n      \"reproThree\": \"\",\n      \"value\": null\n    },\n    \"12\": {\n      \"databaseName\": \"\",\n      \"text\": \"Would you like to be reminded before your check-ins?\",\n      \"responseType\": \"Binary\",\n      \"condition\": \"[7]\",\n      \"reproOne\": \"If you would like me to remind you before our check-ins, say 'yes'. Otherwise say 'no'.\",\n      \"reproTwo\": \"I'm sorry, I was looking for 'yes' or 'no'. If you would like to reschedule to a different time, answer 'no'\",\n      \"reproThree\": \"I'm sorry, I didn't understand that. Would you like to be reminded before our check-ins?\",\n      \"value\": null\n    },\n    \"13\": {\n      \"databaseName\": \"\",\n      \"text\": \"Great! I will speak to you then!\",\n      \"responseType\": \"None\",\n      \"condition\": \"[7] && [12]\",\n      \"reproOne\": \"\",\n      \"reproTwo\": \"\",\n      \"reproThree\": \"\",\n      \"value\": null\n    },\n    \"14\": {\n      \"databaseName\": \"\",\n      \"text\": \"Ok. Got it. I'll speak to you then!\",\n      \"responseType\": \"None\",\n      \"condition\": \"[7] && ![12]\",\n      \"reproOne\": \"\",\n      \"reproTwo\": \"\",\n      \"reproThree\": \"\",\n      \"value\": null\n    },\n    \"modified\": false\n  }\n}",
					"type": "code",
					"fail_id": null
				},
				"601cbb582df5563b280f6df8": {
					"nextId": "601a3792b0f5e32def4d660a",
					"id": "601cbb582df5563b280f6df8",
					"type": "directive",
					"directive": "{\n  \"query\": [\"SELECT CONCAT(to_char(\\\"timestamp\\\", 'Month'), EXTRACT(DAY FROM \\\"timestamp\\\")) FROM checkin WHERE \\\"userid\\\" = $1 AND \\\"productive\\\" = 't' ORDER BY \\\"timestamp\\\" DESC;\"],\n  \"params\": [\"_cognitoId\"],\n  \"to\": \"lastInteraction\"\n}"
				},
				"603601299ebf9102df39ec4e": {
					"nextIds": [
						"603601569ebf9102df39ec5f"
					],
					"id": "603601299ebf9102df39ec4e",
					"type": "if",
					"expressions": [
						"(!v['checkinId'])"
					]
				},
				"6032c9fb4e7285bfd4ca5d7e": {
					"diagram_id": "604fb4537dbea8004948e248",
					"nextId": "60121f1c25343e75f7bedc34",
					"id": "6032c9fb4e7285bfd4ca5d7e",
					"type": "flow"
				},
				"5ff767c9e7b840f3a1b8ddc4": {
					"type": "start",
					"nextId": "6032c9fb4e7285bfd4ca5d7e",
					"id": "5ff767c9e7b840f3a1b8ddc4"
				},
				"6035966e5905e75a8e16624d": {
					"type": "exit",
					"end": true,
					"id": "6035966e5905e75a8e16624d"
				},
				"6020689ee8d06e389ce19512": {
					"nextId": "6036017e9ebf9102df39ecea",
					"speak": "There was a problem connecting to your account. ARIC will take a look to see what the issue is.",
					"id": "6020689ee8d06e389ce19512",
					"type": "speak"
				},
				"6036017e9ebf9102df39ecea": {
					"nextId": "6035966e5905e75a8e16624d",
					"id": "6036017e9ebf9102df39ecea",
					"type": "directive",
					"directive": "{\n  \"query\": \"INSERT INTO \\\"contactalerts\\\" (\\\"checkinid\\\",\\\"type\\\") VALUES ('1','Problem with UserPool API Request.')\",\n  \"params\": []\n}"
				},
				"6036018b9ebf9102df39ecf9": {
					"type": "exit",
					"end": true,
					"id": "6036018b9ebf9102df39ecf9"
				},
				"60121fa525343e75f7bedc41": {
					"nextId": "601227f425343e75f7bedc4d",
					"id": "60121fa525343e75f7bedc41",
					"link_account": true,
					"type": "account_linking"
				}
			}
		}
	}
}